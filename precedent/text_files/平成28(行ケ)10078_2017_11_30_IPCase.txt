平成２９年１１月３０日判決言渡
平成２８年（行ケ）第１００７８号 審決取消請求事件
口頭弁論終結日 平成２９年１１月２日
判 決
原 告 ブ ル エ ス ア ー エ ス
同 訴 訟 代 理 人 弁 理 士 村 越 智 史
今 村 光 広
被 告 特 許 庁 長 官
同 指 定 代 理 人 石 井 茂 和
高 木 進
野 崎 大 進
板 谷 玲 子
主 文
にした審決を取り消す。
事 実 及 び 理 由
第１ 請求
主文同旨
第２ 事案の概要
本件は，特許出願拒絶査定に対する不服審判請求を不成立とした審決の取消訴訟
である。争点は，補正要件違反（新規事項の追加，目的外補正，独立特許要件違反）
の有無，進歩性の有無（相違点の判断）である。
原告は，名称を「命令スレッドを組み合わせた実行の管理システムおよび管理方
法」とする発明につき，平成２２年（２０１０年）９月１５日を国際出願日として
特許出願（請求項の数１０）をし（パリ条約による優先権主張 平成２１年〔２０
・フランス，国際公開番号ＷＯ２０１１／０３６
，平成２６年３月３１日，手続補正をした（請求項の数１０。甲９）
が，平成２６年８月２６日付けで拒絶査定を受けたので，平成２７年１月５日，拒
絶査定不服審判請求（不服２０１５－９６号。甲１１）及び手続補正をした（本件
補正，請求項の数１０。甲１２）
。
特許庁は，平成２７年１１月１７日，
「本件審判の請求は，成り立たない。
」との
審決をし，その謄本は，同年１２月１日，原告に送達された。
(1) 平成２６年３月３１日付けで補正された本願の特許請求の範囲の請求項
）は，以下のとおりのものであ
る（甲９）
。
【請求項１】
命令スレッドの実行を管理するコンピュータシステム（１８）であって，各中央
処理装置が，
前記各中央処理装置に属する複数の仮想プロセッサ
（２４Ｃ，
れる少なくとも１つの中央処理装置（２４，２６）と，
前記仮想プロセッサに命令スレッドの実行を分散するように構成されるマネージャ
（３８）と，を有するコンピュータシステム（１８）において，実行する前記命令
スレッドを複数の所定のタイプに応じて分類する分類手段（３６）を有し，
前記命令スレッドの実行を分散するように構成される前記マネージャ（３８）を，
前記命令スレッドが分類された前記複数の所定のタイプのうちの１つに基づき，実
行する前記命令スレッドを前記仮想プロセッサ
（２４Ｃ，
に方向付けるように設計するコンピュータシステムであって，
前記各中央処理装置の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）は，前
記中央処理装置に属する内部資源を共有することにより同時マルチスレッディング
を実施する機能を有する複数の論理区画に相当する，ことを特徴とするコンピュー
タシステム。
【請求項２】
前記中央処理装置（２４，２６）の各仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，
うに構成される前記マネージャ（３８）を，実行する前記命令スレッドをそれぞれ
該スレッドと同じタイプの仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）に
方向付けるように設計するコンピュータシステムであって，
前記各中央処理装置の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）は，前
記中央処理装置に属する内部資源を共有することにより同時マルチスレッディング
を実施する機能を有する複数の論理区画に相当する，ことを特徴とするコンピュー
タシステム。
【請求項３】
前記中央処理装置（２４，２６）は２つの仮想プロセッサ（２４Ｃ，２４Ｓ，２
う１つは命令スレッドの第２のタイプ（Ｓ）に関連付け，実行するコンピュータプ
ロセスはそれぞれ前記第１のタイプか前記第２のタイプである，請求項１または２
に記載のコンピュータシステム。
【請求項４】
－ 「計算」と呼ぶ命令スレッドの前記第１のタイプ（Ｃ）は，結果を供給す
るように前記コンピュータシステムが実行するようになっているプログラムに対し
て，該プログラムの実行に参加して結果を直接生成する命令スレッドに関係し，
－ 「サービス」と呼ぶプロセスの前記第２のタイプ（Ｓ）は，該プログラム
の実行に参加して「計算」タイプの前記命令スレッドに付属サービスを供給する命
令スレッドに関係する，請求項３に記載のコンピュータシステム。
【請求項５】
少なくとも２つの中央処理装置（２４，２６）を有し，それぞれが複数の仮想プ
ロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）を備え，仮想プロセッサ上で複数の
命令スレッドを組み合わせて実行する，請求項１から４のいずれか一項に記載のコ
ンピュータシステムにおいて，前記命令スレッドの実行を分散するように構成され
る前記マネージャ（３８）を，中央処理装置にある仮想プロセッサとは独立して，
実行する命令スレッドそれぞれに対して中央処理装置を選択するように設計するコ
ンピュータシステムであって，
前記各中央処理装置の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）は，前
記中央処理装置に属する内部資源を共有することにより同時マルチスレッディング
を実施する機能を有する複数の論理区画に相当する，ことを特徴とするコンピュー
タシステム。
【請求項６】
コンピュータシステム（１８）の少なくとも１つの中央処理装置（２４，２６）
に属する複数の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）上で複数の命
令スレッドを組み合わせて実行するのを管理する方法であって，前記仮想プロセッ
サに前記命令スレッドの実行を分散するステップ（１０４）を含む方法において，
複数の所定のタイプに応じて実行する前記命令スレッドを分類する予備ステップ
（１００）を含み，前記命令スレッドの実行を分散するステップ（１０４）で，実
行する命令スレッドそれぞれをタイプに応じて仮想プロセッサに方向付ける，方法
であって，
前記各中央処理装置の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）は，前
記中央処理装置に属する内部資源を共有することにより同時マルチスレッディング
を実施する機能を有する複数の論理区画に相当する，ことを特徴とする方法。
【請求項７】
前記分類ステップ（１００）で，命令スレッドを管理するアプリケーションプロ
グラミングインターフェースの関数でタイプを識別するパラメータに基づいて，前
記命令スレッドをそれぞれタイプで分類する，請求項６に記載の方法。
【請求項８】
前記分類ステップ（１００）で，命令スレッドの実行を含むプログラムの実行コ
マンドでタイプを識別するパラメータに基づいて，前記命令スレッドをそれぞれこ
のタイプで分類する，請求項６に記載の方法。
【請求項９】
スーパーコンピュータタイプのサーバクラスタ（１０）の複数の処理ノード上で
複数の命令スレッドを実行することの管理に対する請求項６から８のいずれか一項
に記載の方法の適用であって，各処理ノード（１８）が，少なくとも１つの中央処
理装置に属する複数の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）上で複
数の命令スレッドを組み合わせて実行する前記少なくとも１つの中央処理装置（２
前記各中央処理装置の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）は，前
記中央処理装置に属する内部資源を共有することにより同時マルチスレッディング
を実施する機能を有する複数の論理区画に相当する，ことを特徴とする適用。
【請求項１０】
通信ネットワークからダウンロード可能なコンピュータプログラムおよび／また
はコンピュータで再生可能な媒体に記録したコンピュータプログラムおよび／また
はプロセッサのなかでもとりわけコンピュータのオペレーティングシステム
（３４）
で実行可能なコンピュータプログラムであって，前記プログラムをコンピュータ上
で実行した場合に，請求項６から８のいずれか一項に記載の複数の命令スレッドを
組み合わせた実行の管理方法のステップを実行するプログラムコードの命令を含む
コンピュータプログラムであって，
各中央処理装置の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）は，前記中
央処理装置に属する内部資源を共有することにより同時マルチスレッディングを実
施する機能を有する複数の論理区画に相当する，ことを特徴とするコンピュータシ
ステム。
(2) 本件補正によって補正された後の本願の特許請求の範囲の請求項１～１
）は，以下のとおりのも
のである（甲１２。下線は，補正箇所を示す。
）
【請求項１】
命令スレッドの実行を管理するコンピュータシステム（１８）であって，
各中央処理装置が，前記各中央処理装置に属する複数の仮想プロセッサ（２４Ｃ，
に構成される，少なくとも１つの中央処理装置（２４，２６）と，
前記仮想プロセッサに命令スレッドの実行を分散するように構成されるマネージャ
（３８）と，を有するコンピュータシステム（１８）において，
前記命令スレッドには，
少なくとも２つの異なる所定のタイプ
（Ｃ，
Ｓ）
が存在し，
－「計算」と呼ぶ命令スレッドの前記第１のタイプ（Ｃ）は，結果を供給するよう
に前記コンピュータシステムが実行するようになっているプログラムに対して，該
プログラムの実行に参加して結果を直接生成する命令スレッドに関係し，
－「サービス」と呼ぶプロセスの前記第２のタイプ（Ｓ）は，該プログラムの実行
に参加して前記「計算」と呼ぶタイプ（Ｃ）の前記命令スレッドに付属サービス（前
記結果の保存など）を供給する命令スレッドに関係し，
前記コンピュータシステム（１８）は，実行する前記命令スレッドを前記所定のタ
イプ（Ｃ，Ｓ）に応じて分類する分類手段（３６）を有し，
前記命令スレッドの実行を分散するように構成される前記マネージャ（３８）は，
前記命令スレッドが分類された前記所定のタイプ（Ｃ，Ｓ）に基づき，実行する前
記命令スレッドを前記仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）に方向
付けるように設計され，
前記各中央処理装置の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）は，前
記中央処理装置に属する内部資源を共有することにより，同時マルチスレッディン
グを実施する複数の論理区画に相当する，
ことを特徴とするコンピュータシステム。
【請求項２】
前記中央処理装置（２４，２６）の各仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，
うに構成される前記マネージャ（３８）を，実行する前記命令スレッドをそれぞれ
該スレッドと同じタイプの仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）に
方向付けるように設計するコンピュータシステムであって，
前記各中央処理装置の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）は，前
記中央処理装置に属する内部資源を共有することにより同時マルチスレッディング
を実施する機能を有する複数の論理区画に相当する，ことを特徴とするコンピュー
タシステム。
【請求項３】
前記中央処理装置（２４，２６）は２つの仮想プロセッサ（２４Ｃ，２４Ｓ，２
う１つは命令スレッドの第２のタイプ（Ｓ）に関連付け，実行するコンピュータプ
ロセスはそれぞれ前記第１のタイプ（Ｃ）か前記第２のタイプ（Ｓ）である，請求
項１または２に記載のコンピュータシステム。
【請求項４】
－「計算」と呼ぶ命令スレッドの前記第１のタイプ（Ｃ）は，結果を供給するよう
に前記コンピュータシステムが実行するようになっているプログラムに対して，該
プログラムの実行に参加して結果を直接生成する命令スレッドに関係し，
－「サービス」と呼ぶプロセスの前記第２のタイプ（Ｓ）は，該プログラムの実行
に参加して「計算」と呼ぶタイプ（Ｃ）の前記命令スレッドに付属サービス（前記
結果の保存など）を供給する命令スレッドに関係する，請求項３に記載のコンピュ
ータシステム。
【請求項５】
少なくとも２つの中央処理装置（２４，２６）を有し，それぞれが複数の仮想プ
ロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）を備え，仮想プロセッサ上で複数の
命令スレッドを組み合わせて実行する，請求項１から４のいずれか一項に記載のコ
ンピュータシステムにおいて，前記命令スレッドの実行を分散するように構成され
る前記マネージャ（３８）を，中央処理装置にある仮想プロセッサとは独立して，
実行する命令スレッドそれぞれに対して中央処理装置を選択するように設計するコ
ンピュータシステムであって，
前記各中央処理装置の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）は，前
記中央処理装置に属する内部資源を共有することにより同時マルチスレッディング
を実施する機能を有する複数の論理区画に相当する，ことを特徴とするコンピュー
タシステム。
【請求項６】
コンピュータシステム（１８）の少なくとも１つの中央処理装置（２４，２６）
に属する複数の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）上で複数の命
令スレッドを組み合わせて実行するのを管理する方法であって，前記仮想プロセッ
サに前記命令スレッドの実行を分散するステップ（１０４）を含む方法において，
複数の所定のタイプ（Ｓ，Ｃ）に応じて実行する前記命令スレッドを分類する予備
ステップ
（１００）
を含み，
前記命令スレッドの実行を分散するステップ
（１０４）
で，実行する命令スレッドそれぞれをタイプ（Ｓ，Ｃ）に応じて仮想プロセッサに
方向付ける，方法であって，
前記各中央処理装置の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）は，
前記中央処理装置に属する内部資源を共有することにより同時マルチスレッディン
グを実施する機能を有する複数の論理区画に相当する，ことを特徴とする方法。
【請求項７】
前記分類ステップ（１００）で，命令スレッドを管理するアプリケーションプロ
グラミングインターフェースの関数でタイプ（Ｓ，Ｃ）を識別するパラメータに基
づいて，前記命令スレッドをそれぞれタイプ（Ｓ，Ｃ）で分類する，請求項６に記
載の方法。
【請求項８】
前記分類ステップ（１００）で，命令スレッドの実行を含むプログラムの実行コ
マンドでタイプ（Ｓ，Ｃ）を識別するパラメータに基づいて，前記命令スレッドを
それぞれこのタイプ（Ｓ，Ｃ）で分類する，請求項６に記載の方法。
【請求項９】
スーパーコンピュータタイプのサーバクラスタ（１０）の複数の処理ノード上で
複数の命令スレッドを実行することの管理に対する請求項６から８のいずれか一項
に記載の方法の適用であって，各処理ノード（１８）が，少なくとも１つの中央処
理装置に属する複数の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）上で複
数の命令スレッドを組み合わせて実行する前記少なくとも１つの中央処理装置（２
前記各中央処理装置の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）は，前
記中央処理装置に属する内部資源を共有することにより同時マルチスレッディング
を実施する機能を有する複数の論理区画に相当する，ことを特徴とする適用。
【請求項１０】
通信ネットワークからダウンロード可能なコンピュータプログラムおよび／また
はコンピュータで再生可能な媒体に記録したコンピュータプログラムおよび／また
はプロセッサのなかでもとりわけコンピュータのオペレーティングシステム
（３４）
で実行可能なコンピュータプログラムであって，前記プログラムをコンピュータ上
で実行した場合に，請求項６から８のいずれか一項に記載の複数の命令スレッドを
組み合わせた実行の管理方法のステップを実行するプログラムコードの命令を含む
コンピュータプログラムであって，
各中央処理装置の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）は，前記中
央処理装置に属する内部資源を共有することにより同時マルチスレッディングを実
施する機能を有する複数の論理区画に相当する，ことを特徴とするコンピュータシ
ステム。
(1) 補正の適否
ア 新規事項
独立請求項である本件補正後の請求項６と，それを引用する本件補正後の請求項
」という記載は，平成２４年４月１７日付けで提出さ
れた明細書，請求の範囲の日本語による翻訳文及び国際出願の願書に添付された図
面（以下，これらを併せて「当初明細書等」という。甲６）に記載されたものでは
なく，本件補正は，当初明細書等の記載の範囲内でされたものではない。
イ 目的要件
仮に，本件補正が，当初明細書等の記載の範囲内でされたものであるとしても，
本件補正前の請求項６～８に対する本件補正における補正事項は，特許請求の範囲
の限定的減縮，明瞭でない記載の釈明，誤記の訂正のいずれにも該当しない。
そして，本件補正において，請求項の削除は行われていない。
ウ 独立特許要件
仮に，本件補正が，当初明細書等の記載の範囲内でされたものであって，目的要
件を満たすものであったとしても，本願補正発明６と甲１（特開２００４－２２０
「甲１発明」という。
）との一致点及び相
違点は，以下のとおりであり，相違点１～４に係る事項は，甲２（特開２００４－
（甲３～５）
に基づいて当業者が適宜なし得る事項であるから，
本願補正発明６は，
これらの発明及び周知の技術事項に基づいて当業者が容易に発明することができた。
したがって，本願補正発明６は，特許出願の際独立して特許を受けることができ
ない。
【一致点】
コンピュータシステムの少なくとも１つの中央処理装置上で複数の命令スレッド
を組み合わせて実行するのを管理する方法であって，
資源に命令スレッドの実行を分散するステップを含む方法において，複数の所定
のタイプ（Ｓ，Ｃ）に応じて実行する前記命令スレッドを分類する予備ステップを
含み，前記命令スレッドの実行を分散するステップで，実行する命令スレッドそれ
ぞれをタイプ（Ｓ，Ｃ）に応じて資源に方向付ける，方法。
【相違点１】
“中央処理装置上で複数の命令スレッドを組み合わせて実行する”に関して，
本件補正発明６においては，“中央処理装置に属する複数の仮想プロセッサ上で
複数の命令スレッドを組み合わせて実行する”ものであるのに対して，
引用発明においては，
「仮想プロセッサ上で複数の命令を実行する」
点については，
特に言及されていない点。
【相違点２】
“資源”に関して，
本件補正発明６においては，“資源”が，
「仮想プロセッサ」であるのに対して，
引用発明における“資源”である「リソース」に，
「仮想プロセッサ」が含まれる
ことが明言されていない点。
【相違点３】
“実行する命令スレッドそれぞれをタイプ（Ｓ，Ｃ）に応じて資源に方向付ける”
ことに関して，
本件補正発明６においては「仮想プロセッサに方向付ける」ものであるのに対し
て，
引用発明においては，
「リソースの共通セットに割り当てられる」ものである点。
【相違点４】
本件補正発明６においては，
「各中央処理装置の仮想プロセッサ
（２４Ｃ，
時マルチスレッディングを実施する機能を有する複数の論理区画に相当する」もの
であるのに対して，
引用発明においては，
「仮想プロセッサ」についての言及がない点。
(2) 進歩性
本願発明６と甲１発明との一致点及び相違点は，以下のとおりであり，相違点ａ
～ｄに係る事項については，上記(1)の相違点１～４に係る事項において検討した
とおりであるから，本願発明６は，甲１発明，甲２に記載された発明及び当該技術
分野における周知の技術事項（甲３～５）に基づいて当業者が容易に発明をするこ
とができた。
【一致点】
コンピュータシステムの少なくとも１つの中央処理装置上で複数の命令スレッド
を組み合わせて実行するのを管理する方法であって，
資源に命令スレッドの実行を分散するステップを含む方法において，複数の所定
のタイプに応じて実行する前記命令スレッドを分類する予備ステップを含み，前記
命令スレッドの実行を分散するステップで，実行する命令スレッドそれぞれをタイ
プに応じて資源に方向付ける，方法。
【相違点ａ】
“中央処理装置上で複数の命令スレッドを組み合わせて実行する”に関して，
本願発明６においては，“中央処理装置に属する複数の仮想プロセッサ上で複数
の命令スレッドを組み合わせて実行する”ものであるのに対して，
引用発明においては，
「仮想プロセッサ上で複数の命令を実行する」
点については，
特に言及されていない点。
【相違点ｂ】
“資源”に関して，
本願発明６においては，“資源”が，
「仮想プロセッサ」であるのに対して，
引用発明における“資源”である「リソース」に，
「仮想プロセッサ」が含まれる
ことが明言されていない点。
【相違点ｃ】
“実行する命令スレッドそれぞれをタイプに応じて資源に方向付ける”ことに関
して，
本願発明６においては「仮想プロセッサに方向付ける」ものであるのに対して，
引用発明においては，
「リソースの共通セットに割り当てられる」ものである点。
【相違点ｄ】
本願発明６においては，
「各中央処理装置の仮想プロセッサ（２４Ｃ，２４Ｓ，２
マルチスレッディングを実施する機能を有する複数の論理区画に相当する」もので
あるのに対して，
引用発明においては，
「仮想プロセッサ」についての言及がない点。
第３ 原告主張の審決取消事由
(1) 新規事項追加禁止要件違反についての判断の誤り
次のとおり，
本件補正によってされた請求項６における
「タイプ」
を
「タイプ
（Ｓ，
Ｃ）
」に変更する補正事項は，当初明細書等に明示的に記載されているか，少なくと
も当初明細書等の記載から自明なものであり，新規事項追加禁止要件を充たしてい
るから，
請求項６を引用する請求項７及び８についても，
上記要件を満たしている。
ア(ｱ)ａ 請求項６において，
「タイプ（Ｓ，Ｃ）
」は，①「複数の所定のタイ
プ（Ｓ，Ｃ）に応じて実行する前記命令スレッドを分類する」及び②「実行する命
令スレッドそれぞれをタイプ（Ｓ，Ｃ）に応じて仮想プロセッサに方向付ける」と
いう発明特定事項において用いられている。
当初明細書等の【００３９】の記載を考慮すると，①「複数の所定のタイプ（Ｓ，
Ｃ）に応じて実行する前記命令スレッドを分類する」という発明特定事項は，命令ス
レッドのタイプ（例えば「計算」と「サービス」と呼ばれる二つのタイプ）に応じて，
実行する命令スレッドを分類する，という意味であることが容易に理解できる。
当初明細書等の【００４７】の記載を考慮すると，②「実行する命令スレッドそれ
ぞれをタイプ（Ｓ，Ｃ）に応じて仮想プロセッサに方向付ける」という発明特定事項
は，実行する命令スレッドを，当該命令スレッドのタイプ（例えば「計算」と「サー
ビス」と呼ばれる二つのタイプ）に応じて仮想プロセッサに方向付ける，という意味
であることが理解できる。
以上の理解に基づくと，
これらの発明特定事項において用いられている
「タイプ
（Ｓ，
Ｃ）
」は，
「命令スレッドのタイプ（Ｓ，Ｃ）
」を意味することも理解できる。
ｂ 当初明細書等において，
「Ｓ」及び「Ｃ」が仮想プロセッサのタイプを
表すために用いられていることはあるにしても，命令スレッドの第１のタイプ（計算
タイプ）を表すために「Ｃ」
，命令スレットの第２のタイプ（サービスタイプ）を表す
ために「Ｓ」が用いられている（甲６【請求項３】
，
【請求項４】
，
【図１】
）
。
【図１】
図１においては，仮想プロセッサ２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓを表すブロッ
クの各々の右下隅に小さなブロックが描かれている。そして，仮想プロセッサ２４
Ｃ及び仮想プロセッサ２６Ｃの右下隅のブロックにはそれぞれ参照符号「Ｃ」が付
され，仮想プロセッサ２４Ｓ及び仮想プロセッサ２６Ｓの右下隅のブロックにはそ
れぞれ参照符号「Ｓ」が付されている。仮想プロセッサを示す符号としては，既に
クの各々に付されている参照符号は仮想プロセッサのタイプを示すものではない。
他方，請求項３には，
「前記中央処理装置（２４，２６）は２つの仮想プロセッサ
（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）を有し，一つは命令スレッドの第１のタイプ
（Ｃ）に関連付け，もう一つは命令スレッドの第２のタイプ（Ｓ）に関連付け」と
記載されている。この請求項３の記載に沿って図１を理解すると，図１の仮想プロ
セッサ２４Ｃ，２６Ｃを表すブロックの各々の右下隅にあり「Ｃ」の符号が付され
ている小ブロックは，命令スレッドの第１のタイプ（Ｃ）を表していると容易に理
解することができる。符号「Ｓ」についても同様である。
(ｲ) 括弧書きされている「
（Ｓ，Ｃ）
」は，請求項の「タイプ」という用語
と発明の詳細な説明や図面に記載された具体的な構成との対応関係を明確にするた
めに，
「タイプ」
の後の括弧内に発明の詳細な説明や図面で使用されている参照符号
「Ｓ」及び「Ｃ」を付加したものである。
当初明細書等の【００４６】
，
【００４７】及び【図１】において，計算タイプを
表す符号として「Ｃ」が，サービスタイプを表す符号として「Ｓ」が用いられてい
る。
したがって，
「タイプ」に「
（Ｓ，Ｃ）
」を付加することにより，
「タイプ（Ｓ，Ｃ）
」
が発明の詳細な説明や図面におけるサービスタイプ及び計算タイプに対応することが
特定されている。
参照符号の付加により当初明細書等の記載から導き出すことができないような技術
事項が導入されることはない。
イ(ｱ) 本件補正による①「複数の所定のタイプ（Ｓ，Ｃ）に応じて実行する前
記命令スレッドを分類する」という補正事項は，当初明細書等の記載から自明なもの
である。
当初明細書等の請求項４及び【００３９】の記載に鑑みると，当業者は，当初明
細書等には，①「命令スレッドの第１のタイプ（Ｃ）及び命令スレッドの第２のタ
イプ（Ｓ）という二つの命令スレッドのタイプに応じて，実行する命令スレッドを
分類する」ことが記載されていることを理解することができる。
(ｲ) 本件補正による②
「実行する命令スレッドそれぞれをタイプ
（Ｓ，
Ｃ）
に応じて仮想プロセッサに方向付ける」という補正事項は，当初明細書等の記載か
ら自明なものである。
当業者は，
発明の詳細な説明において命令スレッドのタイプについて
「Ｃ」
や
「Ｓ」
の符号を付さずに説明がされていても，命令スレッドのタイプとしては第１のタイ
プ（Ｃ）及び第２のタイプ（Ｓ）があることを当然に理解できる。
そうすると，当業者は，当初明細書等の【００４７】の記載から，当初明細書等
には，②「実行する命令スレッドをそれぞれタイプに応じて１つの仮想プロセッサ
に方向付けし，さらに正確にはタイプが同じ仮想プロセッサにも方向付けするよう
に設計する。」ことが記載されていると理解することができる。
ウ(ｱ) 被告の主張によると，本件補正後の「タイプ（Ｓ，Ｃ）
」という用語の
意義は，本件補正前の「タイプ」という用語の意義と全く同じということになる。
請求項には，
「特許出願人が特許を受けようとする発明を特定するために必要と認め
る事項のすべて」
（特許法３６条５項）が記載されているのであるから，請求項に記載
された事項は全て発明を特定するために必要な事項であって，このような発明を特定
するための事項を無視して発明の要旨認定を行うことは許されない。
(ｲ) 特許法施行規則様式２９条の２の［備考］１４のロは，発明の要旨認定
の準則とされる規定ではない。特許法３６条５項によると，請求項に記載された符号
も当該請求項に係る発明を特定するために必要な事項であり，このような符号の記載
も考慮した上で発明の要旨を認定すべきである。
乙１は，請求項において図面に対応する符号が用いられたからといって，当該請求
項に係る発明を当該符号が用いられた図面に対応する実施例に限定して解釈されるこ
とはないということを説明しているにすぎず，当該符号を考慮せずに要旨認定を行う
ことを説明しているのではない。
(2) 目的要件違反についての判断の誤り
次のとおり，本件補正における①「複数の所定のタイプに応じて実行する前記命令
スレッドを分類する」及び②「実行する命令スレッドそれぞれをタイプに応じて仮想
プロセッサに方向付ける」の「タイプ」を「タイプ（Ｓ，Ｃ）
」と変更する補正は，特
許請求の範囲の限定的減縮に当たり，本願補正は，特許請求の範囲の限定的減縮を目
的としたものであるから，目的要件を満たしている。
ア 「タイプ」を「タイプ（Ｓ，Ｃ）
」と変更する本願補正は，元々記載されて
いた命令スレッドの「タイプ」に符号「
（Ｓ，Ｃ）
」を付加して，請求項の「タイプ」
という用語と発明の詳細な説明や図面に記載された具体的な構成との対応関係をより
明確にしたものである。
本願補正前の「タイプ」は，命令スレッドのタイプという意味を有していたが，
これを「タイプ（Ｓ，Ｃ）
」と補正することにより，請求項６で用いられている「タ
イプ」
が発明の詳細な説明や図面に記載された
「サービスタイプ」
や
「計算タイプ」
と対応することがさらに特定された。
イ(ｱ) 当初明細書等の【００３９】には，命令スレッドの複数の所定のタイプ
として，第１のタイプ（第１のタイプ（Ｃ）
）及び第２のタイプ（第２のタイプ（Ｓ）
）
が挙げられているが，
「複数の所定のタイプに応じて，また特に，
」と記載されている
ことから，この第１のタイプ（Ｃ）及び第２のタイプ（Ｓ）は例示であることがわか
る。
したがって，命令スレッドの「複数の所定のタイプ」には，第１のタイプ（Ｃ）
及び第２のタイプ（Ｓ）以外のタイプも含まれることが想定されている。
(ｲ) 本件補正前の①「複数の所定のタイプに応じて実行する前記命令ス
レッドを分類する」という発明特定事項は，
Ａ１：第１のタイプ（Ｃ）や第２のタイプ（Ｓ）を含む複数の所定のタイプに応
じて実行する命令スレッドを分類するという態様，及び
Ａ２：第１のタイプ（Ｃ）や第２のタイプ（Ｓ）を含まない複数の所定のタイプ
に応じて実行する命令スレッドを分類するという態様，
のいずれの態様も包含している。
本件補正後の請求項６においては，
「複数の所定のタイプ」
が当初明細書等の第１
のタイプ（Ｃ）及び第２のタイプ（Ｓ）に対応するものであることが特定された。
したがって，本件補正により，前記態様Ａ２が特許請求の範囲から除外されたこ
とになる。
(ｳ) 本件補正前の②「実行する命令スレッドそれぞれをタイプに応じて
仮想プロセッサに方向付ける」という発明特定事項は，
Ｂ１：実行する命令スレッドを第１のタイプ（Ｃ）や第２のタイプ（Ｓ）を含む
タイプに応じて仮想プロセッサに方向付けるという態様，及び
Ｂ２：第１のタイプ（Ｃ）や第２のタイプ（Ｓ）を含まないタイプに応じて仮想
プロセッサに方向付けるという態様，
のいずれの態様も包含している。
本件補正後の請求項６においては，
「タイプ（Ｓ，Ｃ）
」が当初明細書等の第１の
タイプ（Ｃ）及び第２のタイプ（Ｓ）に対応する概念であることが特定された。
したがって，本件補正により，前記態様Ｂ２が特許請求の範囲から除外されたこ
とになる。
ウ 本件補正の前後で，請求項６～８に係る発明の産業上の利用分野及び解
決課題がそれぞれ同一であることも明らかである。
エ 仮に，前記内容の本件補正により，補正後の内容が補正前の内容から実質
的に変更されていないとしても，当該補正事項は，特許請求の範囲の限定的減縮に該
当する。
すなわち，一般に，審判請求時の補正において特許請求の範囲の限定的減縮を目的
とする補正が許容されているのは，このような補正は，審査・審理の対象を大幅に変
更するものではなく従前の審査結果を利用して効率的に審査・審理を行うことができ
るためである。
上記の補正事項に係る補正は，審査・審理の対象を大幅に変更するものではないか
ら，従前の審査結果を利用することが可能であり，特許法によって許容された補正と
いえる。
(3) 独立特許要件違反についての判断の誤り
ア 甲１発明において相違点３に係る発明特定事項を採用することは容易にな
し得たことではないこと
(ｱ) 審決の甲２に記載された技術事項に関する認定は誤っていること
ａ 甲２に記載されているのは，模擬対象の模擬処理を，模擬イベント
交換頻度及び模擬データ転送量に応じて，論理プロセッサに割り付ける分散シミュ
レーションシステムであり，甲２には，この技術について，次の点が開示されてい
る。
(a) 甲２に記載された技術は，
訓練用シミュレーション，
計画・予測・
解析用シミュレーションなど，様々な用途のシミュレーションを実行する分散シミ
ュレーションシステムに関するものである。
(b) 従来から，
分散シミュレーションシステムを用いて，
地面や路面
などの模擬空間における地形や地勢を模擬することが行われていた。
(c) 地表面，
車両，
航空機などの模擬対象に応じてシミュレーション
プログラムを分割して複数の論理プロセッサで分散処理する場合に，分割されたプ
ログラムを実行する論理プロセッサ間で頻繁にデータをやり取りする必要があるた
め，論理プロセッサ間で大きなサイズのデータをやり取りする必要がある場合や，
データ交換頻度が非常に高い場合などでは，システム全体として当該シミュレーシ
ョンを高速に処理することが困難になる。
地表面のような模擬環境と車両や航空機などの移動する模擬物体とでは，互いに
関連しあうデータを常にやり取りする必要がある。このため，これらに対応するプ
ログラムを実行する論理プロセッサ間では，データ交換頻度が非常に高くなり，や
り取りすべきデータ量も膨大なものとなる。
模擬対象とされた地表面が非常に広範囲であったり，模擬対象とすべき車両や航
空機などの物体が非常に多数であると，これらに対応した特定のプログラムの負荷
が高くなってしまうため，システム全体として処理速度が落ちてしまう。
(d) 甲２に記載された技術は，
上記課題を解決するためのものである。
具体的には，甲２記載の分散シミュレーションシステムは，模擬対象定義から互い
に関連し合う挙動が模擬される模擬対象の組合せを求め，これらの組合せに関連す
る領域ごとにその模擬処理を論理プロセッサに分担する。模擬環境や模擬物体など
の模擬対象について模擬イベント交換頻度と模擬データ転送量が高くなると予想さ
れる組合せを同一の論理プロセッサに割り当てる。
(e) 甲２に記載された技術は，
論理プロセッサ間における模擬イベン
ト交換頻度と模擬データ転送量を削減することができ，高速で効率的な処理を実現
するという効果を奏するためのものである。
ｂ 甲２の【００３３】～【００３５】を考慮しても，甲２には，上記
(ｱ)の技術を一般化して，種類の異なる複数の処理を論理プロセッサに割り付ける
技術は，記載も示唆もされていない。
また，甲２には，模擬イベント交換頻度及び模擬データ転送量に応じた論理プロ
セッサへの割当ては記載されているが，これを一般化した，処理の種類に応じたプ
ロセッサへの割当てについては，記載も示唆もされていない。
(ｲ) 甲２に記載された技術を甲１発明には容易に適用できないこと
ａ 技術分野が異なること
(a) 甲１発明は，
マルチスレッド・コンピュータにおけるプログラム
の最小の実行単位であるスレッドのコンピュータリソースへの割当てに関する発明
であるのに対し，甲２に記載された技術は，訓練用シミュレーション等の各種シミ
ュレーションを実行する分散シミュレーションシステムにおける模擬処理の論理プ
ロセッサへの割当てに関するものであるから，甲１発明と甲２に記載された技術と
では技術分野が異なる。
したがって，甲１発明に対して，甲１発明とは異なる分散シミュレーションシス
テムでの模擬処理の分担に関する技術を適用する動機付けが存在せず，そのような
適用を行うことが容易であったとはいえない。
(b) 確かに，甲１発明及び甲２に記載された技術は，いずれも，命令
を複数のスレッドに分割して実行するマルチスレッディングに関するものである点
では共通する。
しかし，マルチスレッディングには，
（Ａ）複数の物理プロセッサにスレッドを同
時に実行させるマルチプロセッサ技術と，
（Ｂ）
単一の物理プロセッサによって認識
される複数の仮想プロセッサにスレッドを同時に実行させるマルチスレッド同時処
理（ＳＭＴ）技術があり（甲４【０００４】
）
，これらはマルチスレッディングにお
ける別種のアプローチである。この両技術は，その定義上，マルチプロセッサ技術
においてはスレッド処理の効率性が複数の物理プロセッサの物理的な関係に影響さ
れるのに対し，ＳＭＴ技術ではそのようなことがない点で異なっており，それに伴
って対処すべき技術的課題も異なる。
甲１発明は，複数の物理プロセッサ間相互のデータ転送に起因する通信コストの
問題を解決するために，命令スレッドをリソースの共通セットに割り当てる，すな
わち，同一型の命令スレッドをコンピュータの同一物理サブシステムのリソースに
割り当てるという構成を採用し，複数の物理サブシステム間における交差トラフィ
ックを減少させており，
前者のマルチプロセッサ技術に関するものであるのに対し，
甲２に記載された技術は，後者のマルチスレッド同時処理（ＳＭＴ）技術に関する
ものである。
「同一タイプのスレッドが，リソースの共通セットに割り当てられる」という構
成は，複数の物理プロセッサ間相互のデータ転送に起因する通信コストの問題を解
消するというマルチプロセッサ技術に固有の技術課題を解決するために甲 1 発明に
おいて採用されたマルチプロセッサ技術と密接に関連する構成であるから，当業者
は，このような構成をＳＭＴ技術の構成で置き換えることには動機付けられない。
すなわち，ＳＭＴ技術においては，複数の仮想プロセッサは単一の物理プロセッサ
により実現されることが前提であって，複数の物理プロセッサ間の通信コストが課
題とならないから，甲 1 発明において複数の物理プロセッサ間の通信コストに関す
る技術課題を解決する前に不可欠な構成を，ＳＭＴ技術に関連する構成で置換する
ことに動機付けられるとは考えられない。
ｂ 解決すべき課題が異なること
(a) 甲１発明の課題は，
主に，
処理対象のスレッドにプロセッサ等の
物理的リソースを効率的に割り当てて，複数のプロセッサ間におけるデータ転送に
関する通信コストを解決すること，及び，その際に著しいカスタム化を行わないよ
うにすること，という物理プロセッサ間で処理を分散して行うことを前提としたも
のであるのに対し，甲２に記載された技術に関する課題は，模擬対象に応じて分割
したシミュレーションプログラムを複数の論理プロセッサで分散処理するに当たり，
主に，
論理プロセッサ間での模擬イベント交換頻度及び模擬データ転送量を削減し，
システム全体としての処理速度を高速に保ち，かつ効率的な模擬処理を実行するこ
とができる分散シミュレーションシステムを得ることであるから，物理プロセッサ
間での通信コストの問題とは無関係である。
したがって，甲１発明と甲２に記載された技術とは解決すべき課題が異なってお
り，甲２に記載された技術事項を甲１発明に適用する動機付けが存在しない。
(b) 本件補正発明においては，
仮想プロセッサへの命令スレッドの割
当てに関して，ロードバランシングアルゴリズムの実行のために仮想プロセッサの
特性を考慮する必要があるという課題（当初明細書等【０００７】
）や，プログラマ
がスレッドに対するスケジューラの挙動を明示する際に，コンピュータシステムの
トポロジーの知識が必要になり，また，ソフトウェア層との競合が生じるおそれの
ある配置作業を行わなければならないという課題（当初明細書等【００１０】
）に着
目し，その解決のために相違点３に係る構成，すなわち，
「実行する命令スレッドそ
れぞれをタイプ（Ｓ，Ｃ）に応じて仮想プロセッサに方向付ける」という構成を採
用している。このような課題は，甲１～５のいずれにも記載されていない。
当業者は，このような仮想プロセッサへ命令スレッドを割り当てる際の課題につ
いての認識がなければ，甲１発明においてスレッドをそのタイプに応じて仮想プロ
セッサに割り当てるという構成を採用することには動機付けられない。
また，甲１発明において，実行する命令スレッドをタイプに応じた特定の物理サ
ブシステムに割り当てることは，通信コストの問題を解消するという甲１発明の技
術課題を解決するために必要不可欠な構成である。この構成に代えて，スレッドを
そのタイプに応じて仮想プロセッサに割り当てる構成を採用したのでは，甲１発明
の課題が解決できなくなるため，このような改変をすることはできない。
ｃ 甲２に記載された技術を甲１発明に適用することが可能であるとし
ても容易に想到し得ないこと
甲２に記載された技術事項は，模擬対象の模擬処理を，模擬イベント交換頻度及
び模擬データ転送量に応じて，論理プロセッサに割り付けることである。命令スレ
ッドを論理プロセッサに割り付けることは，甲２には記載されていない。
甲２の模擬処理がスレッド単位で実行されるとしても，甲２には，その模擬処理
を実行するスレッドを論理プロセッサに割り当てることは記載も示唆もされていな
い。むしろ，甲２の【００１７】
，
【００３３】
，
【００３５】
，
【００３７】
，
【００３
，
【００４０】
，及び【００５０】には，模擬対象の組合せを同一の論理プロセッ
サに割り当てることが記載されているのであって，甲２に記載された技術では，論
理プロセッサへの割当ては，組み合わされた模擬対象の模擬処理を単位として行わ
れている。
そうすると，仮に甲２に記載された技術を甲１発明に適用することが可能である
としても，組み合わされた模擬対象の模擬処理を単位として論理プロセッサへの割
当てがなされるにすぎず，その模擬処理に含まれるスレッドをそのタイプに応じて
仮想プロセッサに割り付けることは想到し得ない。
また，甲２には，模擬イベント交換頻度及び模擬データ転送量に応じた論理プロ
セッサへの割当ては記載されているが，これを一般化した，処理の種類に応じたプ
ロセッサへの割当てについても記載も示唆もされていない。
ｄ 甲１発明においてＳＭＴ技術を採用することができないとしても相
違点３に係る構成をなるように変更する動機付けがないこと
甲１発明においてＳＭＴ技術を採用することができたとしても，甲１発明におけ
る「複数の物理サブシステム」に備えられた「マイクロプロセッサ」の各々におい
て複数のスレッドが並列に実行されるだけであり，甲１発明の「同一タイプのスレ
ッドが，リソースの共通セットに割り当てられる」という構成を相違点３に係る構
成となるように変更する動機付けは存在しない。
ｅ 甲３には相違点３に係る構成は開示されていないこと
甲３には，
「リアルタイムビデオアプリケーションにおいて，
ビデオを取り込む一
つのスレッド，ビットストリームを符号化する一つのスレッド，およびビットスト
リームを送り出す他のスレッドが存在する」ことは記載されているが，これらのス
レッドがどのように仮想プロセッサに割り当てられるかについては全く開示がない。
図４Ａを参照すると，
二つのスレッドが並列に処理されていることは理解できるが，
この二つのスレッドがどのようにして仮想プロセッサに割り当てられているかは不
明である。
甲３は，図６を参照しつつ【００５４】～【００５９】において，ビデオの復号
化プロセスを説明しているが，この説明においてもスレッドをどのように仮想プロ
セッサに割り当てるかは一切説明されていない。
したがって，甲３には，実行する命令スレッドをそのタイプに応じて仮想プロセ
ッサに方向付けるという相違点３に係る構成は開示されていない。
イ 甲１発明に甲２に記載された技術を適用して相違点１に係る発明特定事項
を採用することは容易になし得たことではないこと
(ｱ) 前記ア(ｱ)のとおり，甲２には，模擬イベント交換頻度及び模擬デー
タ転送量に応じた論理プロセッサへの割当ては記載されているが，これを一般化し
た，処理の種類に応じたプロセッサへの割当てについては，記載も示唆もされてい
ない。
(ｲ) 甲１発明と甲２に記載された技術とでは，技術分野が大きく異なる。
甲１発明と甲２に記載された技術とでは，リソースへの割当てが行われる処理の
単位が異なるだけでなく，甲 1 発明においては物理的なリソースへの割当てがされ
るのに対して，甲２の技術では論理プロセッサという論理的なリソースへの割当て
がされる点も異なる。
(ｳ) 前記ア(ｲ)ｂ(a)のとおり，甲１発明の課題と甲２に記載された技術
に関する課題とは異なる。
(ｴ) したがって，甲２に記載された技術事項を甲１発明に適用する動機
付けが存在しない。
仮に本件補正が却下されたとしても，本件補正発明６と甲１発明の相違点ｃは，相
違点３と，相違点ａは，相違点１と実質的に同じであるため，前記の相違点 1 及び３
に関する主張は，すべて相違点ｃ及びａにも当てはまり，甲１発明において，相違点
ａ及びｃに係る構成を採用することは当業者にとって容易ではなかった。
したがって，本願補正発明６は，進歩性を有する。
第４ 被告の主張
(1) 新規事項追加禁止要件違反について
ア 次のとおり，請求項６～８において，
「タイプ（Ｓ，Ｃ）
」は，スレッドの
タイプを識別する情報として用いられている一方，当初明細書等では，仮想プロセッ
サのタイプを識別する情報（パラメータＣ及びＳ）として用いられており，一致しな
いから，補正後の請求項６～８は，当初明細書等に記載されたものではない。
当初明細書等の【００４６】の記載から，本願明細書の発明の詳細な説明におい
て，
「Ｃ」
及び
「Ｓ」
とは，
仮想プロセッサのタイプを識別するためのパラメータ
「Ｃ」
及び「Ｓ」であることが読み取れる。
当初明細書等の【００３９】は，命令スレッドのタイプとして，
「
『計算』と呼ぶ
命令スレッドの第１のタイプ」
および
「
『サービス』
と呼ぶプロセスの第２のタイプ」
（ここで，
「プロセス」は「命令スレッド」の誤記であると推察される。
）を例示し
ており，
「タイプ（Ｓ，Ｃ）
」との表記を，命令スレッドのタイプとして用いていな
い。
当初明細書等の【００４７】には，
「仮想プロセッサ２４Ｃ，２４Ｓ，２６Ｃおよ
び２６Ｓ」という記載があり，ここでも，
「Ｃ」又は「Ｓ」は，仮想プロセッサのタ
イプを示している。さらに，同段落の「仮想プロセッサ２４Ｃまたは２６Ｃには計
算タイプの命令スレッドしか方向付けできず，仮想プロセッサ２４Ｓまたは２６Ｓ
にはサービスタイプの命令スレッドしか方向付けできない。
」
という記載は，
仮想プ
ロセッサのタイプとして「Ｃ」又は「Ｓ」を用いており，命令スレッドのタイプと
しては，
「計算タイプ」又は「サービスタイプ」を用いており，両者は明確に使い分
けられている。
当初明細書等の【図１】の符号「Ｃ」及び「Ｓ」は，プロセッサを計算タイプ又
はサービスタイプに関連付けるためのパラメータＣ及びＳであり，スレッドのタイ
プそのものを示す符号ではない。
イ 一般に，参照符号は，明細書や図面等に開示された技術的構成との対応
関係を例示するものであり，請求項に記載された発明特定事項を技術的に限定する
ものではない。
特許法施行規則２４条の４は「願書に添付すべき特許請求の範囲は，様式第二十
九の二により作成しなければならない。」と規定しており，特許法施行規則におい
て，様式第２９の２（第２４条の４関係）として，特許請求の範囲の様式が規定され
ている。特許法施行規則様式２９の２の［備考］１４のロに規定された「請求項の記
載の内容を理解するため必要があるときは，当該願書に添付した図面において使用
した符号を括弧をして用い」た符号が特許請求の範囲の記載に付加されることによ
って，請求項記載の発明が具体的構成に限定されるものではない（乙１）。
請求項６の「少なくとも１つの中央処理装置（２４，２６）
」という記載は，発明
特定事項としては
「少なくとも１つの中央処理装置」
としつつも，
「中央処理装置
（２
」と複数の中央処理装置を例示しており，一般的な意味の参照符号である
といえる。そして，請求項６の「複数の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，
」という記載も，発明特定事項としては「複数の仮想プロセッサ」としつつ
も，
「仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）
」と４つの仮想プロセッ
サを例示しており，一般的な意味の参照符号であるといえる。
括弧書きされている（Ｓ，Ｃ）も参照符号であるとすると，
「タイプ（Ｓ，Ｃ）
」
は，発明特定事項としては「タイプ」であって，
「
（Ｓ，Ｃ）
」は単なる例示にすぎな
いものとなる。
(2) 目的要件違反について
ア 前記(1)のとおり，
Ｓ又はＣは，
仮想プロセッサのタイプを表す情報であ
るから，
「タイプ」を「タイプ（Ｓ，Ｃ）
」と変更する補正は，本願の明細書等の誤
った解釈に基づいて誤記を導入するものであって，特許請求の範囲を減縮するもの
とはいえない。
命令スレッドのタイプを特定するのであれば，
「タイプ（Ｓ，Ｃ）
」ではなく，
「タ
イプ（計算タイプ，サービスタイプ）
」とすべきであった。
イ 本件補正後の請求項６における「複数の所定のタイプ」という用語は，
「命令スレッド」の「タイプ」を意味するものとして明確であり，
「複数の所定のタ
イプ」に付加された「（Ｓ，Ｃ）」も，本願の願書に添付した図面において使用した
符号を括弧をして用いたものとして解釈し得る。
「命令スレッド」の「タイプ」として，例えば，データの入出力等を行う「タイ
プ」の「命令スレッド」であるとか，浮動小数点演算を行う「タイプ」の「命令ス
レッド」であるとか，制御フローを担当する「タイプ」の「命令スレッド」などが
さまざまな「タイプ」の「命令スレッド」が含まれ得ることは，当事者にとって自
明である。
本願発明のマルチスレッディングコンピュータシステムの技術分野において，
「命
令スレッド」の「タイプ」として，
「Ｓ」及び「Ｃ」以外のタイプはおよそ用いられ
るものでないことが当業者の一般常識になっているなどの特段の事情があるとはい
えないから，明細書の発明の詳細な説明で技術的に裏付けられているのが「Ｓ」及
び「Ｃ」のタイプを使用するものだけであるとか，実施例が「Ｓ」及び「Ｃ」のタ
イプを使用するものだけであることのみから，特許請求の範囲に記載された「複数
の所定のタイプ」を「少なくとも『Ｓ』及び『Ｃ』のタイプを含むもの」と限定し
て解することはできないというべきである。
ウ 仮に，
「複数の所定のタイプ
（Ｓ，
Ｃ）
」
という表記において，
「
（Ｓ，
Ｃ）
」
が参照符号であり，命令スレッドのタイプ例示に過ぎず，命令スレッドのタイプを
技術的に限定するものでなければ，
「
（Ｓ，Ｃ）
」という記載を除いて発明特定事項を
把握可能であり，特許請求の範囲の限定的減縮に該当する余地はあるといえる。
しかし，上記アのとおり，
「タイプ」を「タイプ（Ｓ，Ｃ）
」と変更する補正は，
本願明細書の誤った解釈に基づいて誤記を導入するものであるから，
「
（Ｓ，Ｃ）
」は
命令スレッドのタイプの例示とはいえない。
(3) 独立特許要件違反について
ア 次のとおり，相違点３に係る構成は，甲 1 発明と甲２に記載された技術
又は甲３～５により認定可能な周知技術であるＳＭＴ技術を適用することにより当
業者が容易に想到し得たものである。
(ｱ) 命令を複数のスレッドに分割して実行するマルチスレッディング
（マ
ルチスレッド・コンピューティング）の技術分野において，仮想プロセッサ（論理
プロセッサ）は，各々アーキテクチャステート（アーキテクチャ状態）を備えるこ
とにより，一つの物理プロセッサに複数の仮想プロセッサ（論理プロセッサ）が認
識されており，キャッシュや実行ユニット，分岐予測器，制御論理等の物理プロセ
ッサが有するリソース群を共有しており，複数のスレッドが複数の仮想プロセッサ
に割り当てられて同時に実行されるＳＭＴ（同時マルチスレッディング，マルチス
レッド同時処理）技術は，本願優先日前に周知であったといえる（甲３～５）
。
(ｲ) 引用発明と上記周知技術（ＳＭＴ技術）は，命令を複数のスレッドに
分割して実行するマルチスレッディング（マルチスレッド・コンピューティング）
の技術分野に属しており，当該技術分野では，スレッドを実行する主体として仮想
プロセッサに割り当てること，及び，各仮想プロセッサは，キャッシュや実行ユニ
ット，分岐予測器，制御論理等の物理プロセッサが有するリソース群を共有してい
ることは，本願優先日前に周知の技術であったといえる。
(ｳ) 上記周知技術（ＳＭＴ技術）の「仮想プロセッサ」が共有する「物理
プロセッサが有するリソース群」は，引用発明の「リソースの共通セット」に対応
する。
(ｴ) したがって，引用発明において，実行する命令スレッドをタイプに応
じて割り当てる（方向付ける）際に，リソースの共通セットに割り当てる構成に代
えて，上記周知技術（ＳＭＴ技術）を適用して，命令スレッドを物理プロセッサが
有するリソース群からなる仮想プロセッサに割り当てる（方向付ける）よう構成す
ることは，当業者が容易に想到し得たものである。
イ 仮に，相違点３に係る「実行する命令スレッドそれぞれをタイプ（Ｓ，
Ｃ）に応じて資源に方向付ける」という構成を「実行する命令スレッドそれぞれを
（少なくとも計算タイプおよびサービスタイプなどの）タイプに応じて資源に方向
付ける」と限定するものと解釈した場合であっても，相違点３に係る構成は，甲 1
発明と甲３に記載された技術事項から，当業者が容易に想到し得たものである。
(ｱ) 甲３（
【００３９】～【００４１】
，
【図４Ａ】
）には，
「リアルタイムビ
デオアプリケーション」において，三つのスレッド（
「ビデオを取り込む１つのスレ
ッド，ビットストリームを符号化する１つのスレッド，およびビットストリームを
送り出す他のスレッド」
）
が例示されており，
同時マルチスレッディングの一例とさ
れている。そして，
【図４Ａ】のアクディビティ４０５，アクディビティ４１０など
を有するスレッド４０１は，
「ビデオを取り込む１つのスレッド」
であり，
【図４Ａ】
のアクディビティ４１５，アクディビティ４２０などを有するスレッド４０２は，
「ビットストリームを符号化する１つのスレッド」である。これらのスレッド４０
ことにより，オーバーラップ期間の間，同時に実行されている。
(ｲ) ここで，
「ビットストリームを符号化する１つのスレッド」は，本願明
細書の
「計算タイプの命令スレッド」
に相当し，
「ビデオを取り込む１つのスレッド」
は本願明細書の「サービスタイプの命令スレッド」に相当するといえる。
ッシュ等のリソースを共有しており，
「ビデオを取り込む１つのスレッド」
を一つの
仮想プロセッサに割り当て，
「ビデオを取り込む１つのスレッド」
がバッファ等に取
り込んだビデオフレームデータを，
「ビットストリームを符号化する１つのスレッ
ド」を別の仮想プロセッサに割り当て，当該別の仮想プロセッサでデコード処理を
実行するように構成することは，サービスタイプの命令スレッドと計算タイプの命
令スレッドを別々の仮想プロセッサに割り当て実行させていることにほかならない。
ウ 甲４には，マルチスレッディングを実行するシステム構成として，
（Ａ）
複数の物理プロセッサにスレッドを同時に実行させるマルチプロセッサ技術（図１
Ｃの１５０）や，
（Ｂ）単一の物理プロセッサによって認識される複数の仮想プロセ
ッサにスレッドを同時に実行させるマルチスレッド同時処理（ＳＭＴ）技術（図１
Ｃの１０９）だけでなく，(Ｃ)複数の物理プロセッサ（コア）毎に複数の仮想プロ
セッサを備えたコンピュータシステムにスレッドを同時に実行させるマルチスレッ
ド同時処理（ＳＭＴ）技術（ＳＭＴコアのマルチコア（図１Ｃの１７０）
）などが例
示されている（下図においてＡＳ１およびＡＳｎが仮想プロセッサに，１０３が物理
プロセッサに対応）
。
【図１Ｃ】
（Ｂ）単一の物理プロセ
ッサが複数の仮想プロセ
ッサを備えるシステム例
（Ａ）複数の物理プロセ
ッサにスレッドを同時に
実行させるマルチプロセ
ッサシステム例
甲４には，マルチプロセッサ構成であって，かつ，ＳＭＴ技術でもある（Ｃ）の
システム構成も開示されており，上記（Ｃ）のシステム構成も，マルチプロセッサ
構成である以上，スレッド処理の効率性が複数の物理プロセッサの物理的な関係に
影響されるといえる。
本願の明細書及び図面に記載された実施例においても，上記（Ｃ）のマルチプロ
セッサ構成であって，かつ，ＳＭＴ技術でもあるシステム構成が実施例として記載
されており，
本願の特許請求の範囲の請求項６においても，
「コンピュータシステム
（１８）の少なくとも１つの中央処理装置（２４，２６）に属する複数の仮想プロ
セッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）上で複数の命令スレッドを組み合わせ
て実行するのを管理する方法であって」と記載されており，上記（Ｂ）及び（Ｃ）
のシステム構成を包含するものとなっている。
（Ｃ）
複数の物理プロ
セッサ毎に複数の仮
想プロセッサを備え
たシステム例
原告の主張は，本願の特許請求の範囲の請求項６に包含され，本願の実施例でも
ある上記（Ｃ）のシステム構成を考慮したものとなっていない。
上記（Ａ）のマルチプロセッサ構成システムを，上記（Ｃ）の複数の物理プロセ
ッサ（コア）毎に複数の仮想プロセッサを備えたＳＭＴシステム構成にすることに
は，電力消費量増加につながるクロック数の上昇を抑えながら，並列実行可能なス
レッド数を増加させて，
性能の向上を計るという動機付けが存在しているといえる。
エ 乙２は，ＳＭＴ技術の周知技術を示す甲３及び甲４の出願人でもある主
要なプロセッサ・メーカーであるインテル・コーポレーションに所属する著者が，
マルチスレッディング技術に対応したマルチコアＣＰＵ（プロセッサ）の技術開発
動向を記載したものであり，物理プロセッサ（コア）の数を（２から４に）増加さ
せることにより性能の向上を計ってきたデスクトップＰＣ用ＣＰＵ（Core2 Duo か
ら Core2 Quad）が２００８年１１月発表の Core i7 では，物理プロセッサ（コア）
の数は増加させず各物理プロセッサ（コア）に２つずつの論理ステートを備えるこ
とで２つずつの仮想プロセッサを設ける構成を採用したことが見て取れる。
本願の図２（一部抜粋）
複数の物理プロセッサ
（２４，
がそ
れぞれ，複数の仮想プロセッサ（２４Ｃ，
を備えるシステ
ム構成（Ｃ）となっている。
上記インテルＣＰＵの技術開発動向の経緯に照らしても，前記(ｲ)の（Ａ）のマル
チプロセッサ構成システムに対応する Core2 Quad プロセッサ（最大４スレッドを
同時実行可能）を，同（Ｃ）の複数の物理プロセッサ（コア）毎に複数の仮想プロ
セッサを備えたＳＭＴシステム構成に対応し，より多くのスレッド（最大８スレッ
ドを同時実行可能）を並列実行可能な次世代プロセッサである Core i7 に置換する
ことには，同時実行可能スレッド数を増加させるという動機付けが存在していると
いえる。
オ 甲１発明は，個別の物理サブシステム内においてスレッドが使用するリ
ソースの局所化を通じて，効率的なリソース割り付けが，よりトランスペアレント
な態様で実装され，
著しいカスタム化を伴わないことを解決すべき課題としている。
甲１発明が課題を解決するための技術思想は，次のようなものである。
スレッドに関連付けされる特定の「型」を基礎として，それらのスレッドが動的
にコンピュータ・リソースに割り当てられるように，スレッド型に，コンピュータ
内の同一物理サブシステム内に常駐するリソースが割り付けられ，その結果，それ
らの特定スレッド型の，新しく作り出されたスレッド及び／又は再アクティブ化さ
れたスレッドが，それぞれのスレッド型に割り付けられたリソースに動的に割り当
てられる。
すなわち，甲１発明においては，スレッドに関連付けされる特定の「型」に着目
し，特定スレッド型には，同一のリソース（セット）を割り付けること（局所化）
により，キャッシュなどのリソースに格納されたデータを特定スレッド型が繰り返
し利用する際に，キャッシュに格納済みのデータを再利用可能として，他の物理サ
ブシステムのメモリ等からキャッシュ等へのデータ通信等のコストを削減している
といえる。
マルチスレッド処理においては，プロセッサ単位（物理プロセッサ又は仮想プロ
セッサ）で割付けが行われ，甲１発明において，物理サブシステム内のプロセッサ
が物理プロセッサのみから構成されるシステム構成（Ａ）であろうと，仮想プロセ
ッサを含んだシステム構成
（Ｃ）
であろうと，
スレッドに関連付けされる特定の
「型」
に着目し，特定スレッド型には，同一のリソース（セット）を割り付けること（局
所化）により，キャッシュなどのリソースに格納されたデータを特定スレッド型が
繰り返し利用する際に，キャッシュに格納済みのデータを再利用可能として，他の
物理サブシステムのメモリ等からキャッシュ等へのデータ通信等のコストを削減す
ることが可能であるといえる。
相違点ｃは，相違点３と実質的に同じであるため，本願補正発明の相違点３の容
易想到性判断で述べた議論は，すべて相違点ｃにも当てはまる。
したがって，甲１発明に甲３～５に示された周知技術を適用することで，当業者
が本願発明を容易に想到し得たものである。
相違点ａについての原告の主張は，争う。
第５ 当裁判所の判断
(1) 本願発明は，前記第２の２(1)，本願補正発明は，同(2)のとおりであると
ころ，
本願発明に係る特許出願の出願時の特許請求の範囲は，
次のとおりである
（甲
。
【請求項１】
命令スレッドの実行を管理するコンピュータシステム（１８）であって，同じ中
央処理装置に属する複数の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）上
で複数の命令スレッドを組み合わせて実行する少なくとも１つの中央処理装置（２
つのマネージャ（３８）とを有するコンピュータシステムにおいて，実行する前記
命令スレッドを複数の所定のタイプに応じて分類する分類手段（３６）を有するこ
とと，前記命令スレッドの実行を分散する前記マネージャ（３８）を，実行する前
記命令スレッドをそれぞれタイプに応じて前記仮想プロセッサ（２４Ｃ，２４Ｓ，
テム。
【請求項２】
前記同じ中央処理装置（２４，２６）の各仮想プロセッサ（２４Ｃ，２４Ｓ，２
請求項１に記載のコンピュータシステムにおいて，前記命令スレッドの実行を分散
する前記マネージャ（３８）を，実行する前記命令スレッドをそれぞれ該スレッド
と同じタイプの仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）に方向付ける
ように設計するコンピュータシステム。
【請求項３】
前記中央処理装置（２４，２６）は２つの仮想プロセッサ（２４Ｃ，２４Ｓ，２
う１つは命令スレッドの第２のタイプ（Ｓ）に関連付け，実行するコンピュータプ
ロセスはそれぞれ前記第１のタイプか前記第２のタイプである，請求項１または２
に記載のコンピュータシステム。
【請求項４】
－ 「計算」と呼ぶ命令スレッドの前記第１のタイプ（Ｃ）は，結果を供給する
ように前記コンピュータシステムが実行するようになっているプログラムに対して，
該プログラムの実行に参加して結果を直接生成する命令スレッドに関係し，
－ 「サービス」と呼ぶプロセスの前記第２のタイプ（Ｓ）は，該プログラムの
実行に参加して「計算」タイプの前記命令スレッドに付属サービスを供給する命令
スレッドに関係する，
請求項３に記載のコンピュータシステム。
【請求項５】
少なくとも２つの中央処理装置（２４，２６）を有し，それぞれが複数の仮想プ
ロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）を備え，仮想プロセッサ上で複数の
命令スレッドを組み合わせて実行する，請求項１から４のいずれか一項に記載のコ
ンピュータシステムにおいて，前記命令スレッドの実行を分散する前記マネージャ
（３８）を，中央処理装置にある仮想プロセッサとは独立して，実行する命令スレ
ッドそれぞれに対して中央処理装置を選択するように設計するコンピュータシステ
ム。
【請求項６】
コンピュータシステム（１８）の同じ中央処理装置（２４，２６）に属する複数
の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）上で複数の命令スレッドを
組み合わせて実行するのを管理する方法であって，前記仮想プロセッサに前記命令
スレッドの実行を分散するステップ（１０４）を含む方法において，複数の所定の
タイプに応じて実行する前記命令スレッドを分類する予備ステップ（１００）を含
むことと，前記命令スレッドの実行を分散するステップ（１０４）で，実行する命
令スレッドそれぞれをタイプに応じて仮想プロセッサに方向付けることとを特徴と
する方法。
【請求項７】
前記分類ステップ（１００）で，命令スレッドを管理するアプリケーションプロ
グラミングインターフェースの関数でタイプを識別するパラメータに基づいて，前
記命令スレッドをそれぞれタイプで分類する，請求項６に記載の方法。
【請求項８】
前記分類ステップ（１００）で，命令スレッドの実行を含むプログラムの実行コ
マンドでタイプを識別するパラメータに基づいて，前記命令スレッドをそれぞれこ
のタイプで分類する，請求項６に記載の方法。
【請求項９】
スーパーコンピュータタイプのサーバクラスタ（１０）の複数の処理ノード上で
複数の命令スレッドを実行することの管理に対する請求項６から８のいずれか一項
に記載の方法の適用であって，各処理ノード（１８）が，同じ中央処理装置に属す
る複数の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）上で複数の命令スレ
ッドを組み合わせて実行する少なくとも１つの中央処理装置（２４，２６）を有す
る適用。
【請求項１０】
通信ネットワークからダウンロード可能なコンピュータプログラムおよび／また
はコンピュータで再生可能な媒体に記録したコンピュータプログラムおよび／また
はプロセッサのなかでもとりわけコンピュータのオペレーティングシステム
（３４）
で実行可能なコンピュータプログラムであって，前記プログラムをコンピュータ上
で実行した場合に，請求項６から８のいずれか一項に記載の複数の命令スレッドを
組み合わせた実行の管理方法のステップを実行するプログラムコードの命令を含む
ことを特徴とするコンピュータプログラム。
(2) 本願の出願当初の明細書及び図面は，平成２６年３月３１日の手続補正
及び本件補正によって，補正されていない（甲６，９，１２）
。
本願の出願当初の明細書及び図面
（当初明細書等。
甲６）
には，
次の記載がある。
「
【技術分野】
【０００１】
本発明は，命令スレッドの実行を管理するコンピュータシステムであって，同じ
中央処理装置に属する複数の仮想プロセッサ上で複数の命令スレッドを組み合わせ
て実行する少なくとも１つの中央処理装置と，命令スレッドの実行を仮想プロセッ
サに分散する少なくとも１つのマネージャとを有するコンピュータシステムに関す
る。本発明はまた，その方法，サーバクラスタへの本方法の適用，および本方法を
実行するための命令を含むコンピュータプログラムにも係る。
【背景技術】
【０００２】
以下の説明文において，
「コンピュータシステム」とは，コンピュータプログラム
の命令を実行することができ，そのために少なくとも１つの中央処理装置でプロセ
ッサの計算コアまたはＣＰＵ
（英語の
「Ｃｅｎｔｒａｌ Ｐｒｏｃｅｓｓｉｎｇ Ｕ
ｎｉｔ」
）とも呼ばれるものを有する少なくとも１つのプロセッサを備えるあらゆ
るシステムを指す。プロセッサには，単一の計算コアのみ，または複数の計算コア
を備えることができることがわかるであろう。本発明によるコンピュータシステム
は，複雑性が増す順に，１つまたは複数の計算コアを有するマイクロプロセッサ，
は複数のマイクロコンピュータを，データ転送ネットワークを介して相互接続した
さらに複雑なシステムで構成することができる。本発明を実装することができるコ
ンピュータシステムの複雑性は，原則として目的とする適用例によって異なる。
【０００３】
「コンピュータプロセス」とは，より一般には「プロセス」と呼ばれ，プロセッ
サの中央処理装置（すなわち計算コア）によって，場合よってはその他の資源を用
いて，特別に割り当てたメモリ空間で実行する命令の集合を指す。コンピュータプ
ログラム自体は命令を構造化した集合で構成されるため，コンピュータプロセスを
コンピュータプログラムまたはコンピュータプログラムの一部分を実行するインス
タンスと考えることができる。同じ１つのプログラムを（同じ１つのプロセッサま
たはさまざまなプロセッサ上で平行かつ連続的に）複数回実行することができるた
め，このプログラムは複数のコンピュータプロセスを生成することができる。
【０００４】
コンピュータプロセスは，必ずしも単一の線形的な命令系列を備えている必要は
なく，非同期に複数の系列を要求することができる。そのため，より一般に「スレ
ッド」と呼ばれる「命令スレッド」とは，コンピュータプロセスの実行に参加する
このような線形的な命令系列を指す。その結果，命令実行の観点から，コンピュー
タプロセスとは常に命令スレッドまたは命令スレッドの集合であると考えてよい。
【０００５】
「同じ中央処理装置に属する複数の仮想プロセッサ上で複数の命令スレッドを組
み合わせて実行する中央処理装置」とは，命令スレッド実行の並列処理を，中央処
理装置の内部資源（とりわけ実行の「パイプライン」
，レジスタおよびキャッシュメ
モリ）のいくつかを共有することによって増進させるメカニズムを備える中央処理
装置のことである。このような中央処理装置には，資源を同時に共有することがで
きる命令スレッドと同じだけ仮想プロセッサがある。ユーザから見れば，単一の中
央処理装置ではなく，複数，さらに正確にはこの中央処理装置にある仮想プロセッ
サの数だけ中央処理装置があるかのように見える。
【０００６】
このメカニズムは一般に，
「ハイパースレッディング」または「同時マルチスレッ
ディング」と呼ばれる。このメカニズムを実装している中央処理装置の目的は，命
令スレッドの共有メモリ空間からくるデータを待つことで生じる非アクティブな時
間を活用することである。具体的には，命令スレッドがこのような待機状態にある
とき，この命令スレッドを実行する中央処理装置は自動的に別の命令スレッドの実
行に進むため，複数の異なる仮想プロセッサがあるかのような印象を与える。
【０００７】
オペレーティングシステムＬｉｎｕｘ（登録商標）は，現在このようなメカニズ
ムをサポートしており，ハイパースレッディングメカニズムを搭載したマイクロプ
ロセッサ上でこのオペレーティングシステムを実行すると，このメカニズムがアク
ティブのときにはこのマイクロプロセッサに属するＮ個の仮想プロセッサがあるよ
うにユーザには見える。またこのオペレーティングシステムは，有利なように命令
スレッドを実行する際にロードバランシングアルゴリズムも実行するため，この命
令スレッドには仮想プロセッサの特性を考慮する必要がある。特に，このオペレー
ティングシステムは，同じ中央処理装置の別の仮想プロセッサに命令スレッドを切
り替えて仮想プロセッサをアンロードすることはない。この制約により，ロードバ
ランシングアルゴリズムが非常に重くなる。
【０００８】
具体的には，この制約は，例えば携帯電話のアプリケーションに内蔵するマイク
ロプロセッサなどに用いるリアルタイム計算およびオンボード処理のアプリケーシ
ョンでとりわけ問題が起こる。
【０００９】
具体的な第２の例によれば，サーバクラスタに組織した複数の処理ノードを有す
るＨＰＣ（英語の「Ｈｉｇｈ Ｐｅｒｆｏｒｍａｎｃｅ Ｃｏｍｐｕｔｉｎｇ」
）タ
イプのスーパーコンピュータの環境では，ユーザは中央処理装置上でのアプリケー
ションの配置を細かくコントロールすることを望み，例えばそれぞれの通信メカニ
ズムに有利に働く共有キャッシュを利用することもある。
【００１０】
これらの命令スレッドを管理するアプリケーションプログラミングインターフェ
ースのシステムを呼び出すことによって，命令スレッドを細かく配置できる可能性
があり，それによってユーザ（すなわちプログラマ）は，命令スレッドに対するオ
ペレーティングシステムタスクのスケジューラの挙動を明示することができるが，
これには関連するアプリケーションに対して，コンピュータシステムのトポロジー
の知識およびソフトウェア層との競合が生じるおそれのある配置作業が必要になる。
【００１１】
仮想プロセッサの特性を考慮することは，実際には複雑である。それによって実
際に問題が起こり，ＨＰＣスーパーコンピュータのアプリケーションで自動的な管
理ができなくなることさえある。
【発明の概要】
【発明が解決しようとする課題】
【００１２】
そのため，前述の問題および制約を少なくとも部分的に緩和することができる，
命令スレッドを組み合わせた実行の管理システムを備えることが望まれる。
【課題を解決するための手段】
【００１３】
よって本発明は，
命令スレッドの実行を管理するコンピュータシステムであって，
同じ中央処理装置に属する複数の仮想プロセッサ上で複数の命令スレッドを組み合
わせて実行する少なくとも１つの中央処理装置と，命令スレッドの実行を仮想プロ
セッサに分散する少なくとも１つのマネージャとを有するコンピュータシステムに
おいて，実行する命令スレッドを複数の所定のタイプに応じて分類する分類手段を
有することと，命令スレッドの実行を分散するマネージャを，実行する命令スレッ
ドをそれぞれタイプに応じて仮想プロセッサに方向付けるように設計することを特
徴とするコンピュータシステムを目的とする。
【００１４】
したがって，命令スレッドをタイプごとに分類し，これをタイプに応じて命令ス
レッドの実行を分散するマネージャを用いて体系的にそれぞれの仮想プロセッサに
方向付けることによって，計算資源を保護する。その結果，中央処理装置を最適な
形で使用することになり，関連するアプリケーションの実行が加速する。さらに，
ハイパースレッディングメカニズムによりユーザ（プログラマ）が原因となること
もあるエラーのリスクが抑えられる。
【００１５】
選択的に，本発明によるコンピュータシステムはさらに，この同じ中央処理装置
の各仮想プロセッサをこれらの所定のタイプの１つに関連付ける手段を備えること
ができ，命令スレッドの実行を分散するマネージャを，実行する命令スレッドをそ
れぞれこのスレッドと同じタイプの仮想プロセッサに方向付けるように設計するこ
とができる。
【００１６】
したがって，命令スレッドを分散するマネージャは，場合によっては命令スレッ
ドに対して中央処理装置を選択するのに関わるだけでよく，仮想プロセッサの正確
な選択は命令スレッドのタイプによって自動的に決まる。その結果，ハイパースレ
ッディングメカニズムはユーザから隠すことができる。よって，ユーザがこのメカ
ニズムを理解していないためにエラーが生じるリスクは一切なくなる。さらに，命
令スレッドは自動的に正しい仮想プロセッサに方向付けられるため，パフォーマン
スは一層改善される。
【００１７】
同じく選択的に，中央処理装置は２つの仮想プロセッサを有し，１つは命令スレ
ッドの第１のタイプに関連付け，もう１つは命令スレッドの第２のタイプに関連付
け，
実行するコンピュータプロセスはそれぞれ第１のタイプか第２のタイプとする。
【００１８】
同じく選択的に，
－ 「計算」と呼ぶ命令スレッドの第１のタイプは，結果を供給するようにコン
ピュータシステムが実行するようになっているプログラムに対して，このプログラ
ムの実行に参加して結果を直接生成する命令スレッドに関係し，
－ 「サービス」と呼ぶプロセスの第２のタイプは，このプログラムの実行に参
加して「計算」タイプの命令スレッドに付属サービスを供給する命令スレッドに関
係する。
【００１９】
同じく選択的に，本発明によるコンピュータシステムは，少なくとも２つの中央
処理装置を備えることができ，それぞれがこの同じ中央処理装置に属する複数の仮
想プロセッサ上で複数の命令スレッドを組み合わせて実行し，命令スレッドの実行
を分散するマネージャを，中央処理装置が備える仮想プロセッサとは独立して，実
行する命令スレッドそれぞれに対して中央処理装置を選択するように設計すること
ができる。
【００２０】
本発明はまた，コンピュータシステムの同じ中央処理装置に属する複数の仮想プ
ロセッサ上で複数の命令スレッドを組み合わせて実行するのを管理する方法であっ
て，
仮想プロセッサに命令スレッドの実行を分散するステップを含む方法において，
複数の所定のタイプに応じて実行する命令スレッドを分類する予備ステップを含む
ことと，命令スレッドの実行を分散するステップで，実行する命令スレッドそれぞ
れをタイプに応じて仮想プロセッサに方向付けることとを特徴とする方法も目的と
する。
【００２１】
選択的に，分類ステップで，命令スレッドを管理するアプリケーションプログラ
ミングインターフェースの関数でタイプを識別するパラメータに基づいて，命令ス
レッドをそれぞれタイプで分類する。
【００２２】
同じく選択的に，分類ステップで，命令スレッドの実行を含むプログラムの実行
コマンドでタイプを識別するパラメータに基づいて，この命令スレッドをそれぞれ
このタイプで分類する。
【００２３】
本発明はまた，スーパーコンピュータタイプのサーバクラスタの複数の処理ノー
ド上で複数の命令スレッドを実行することの管理に対する上記のように定義した方
法の適用であって，各処理ノードが，同じ中央処理装置に属する複数の仮想プロセ
ッサ上で複数の命令スレッドを組み合わせて実行する少なくとも１つの中央処理装
置を有する適用も目的とする。
【００２４】
最後に，本発明はまた，通信ネットワークからダウンロード可能なコンピュータ
プログラムおよび／またはコンピュータで再生可能な媒体に記録したコンピュータ
プログラムおよび／またはプロセッサのなかでもとりわけコンピュータのオペレー
ティングシステムで実行可能なコンピュータプログラムであって，前記プログラム
をコンピュータ上で実行した場合に，上記のように定義した複数の命令スレッドを
組み合わせた実行の管理方法のステップを実行するプログラムコードの命令を含む
ことを特徴とするコンピュータプログラムも目的とする。
【００２５】
本発明は，添付の図を参照しながら例のみを目的として挙げた以下の説明文を読
めばよりよく理解できるであろう。
」
「
【発明を実施するための形態】
【００２７】
本発明はどのようなアプリケーションからも独立して，同じ中央処理装置に属す
る複数の仮想プロセッサ上で複数の命令スレッドを組み合わせて実行する少なくと
も１つの中央処理装置と，仮想プロセッサに命令スレッドの実行を分散する少なく
とも１つのマネージャとを備えるあらゆるコンピュータシステムに実装することが
でき，以下に一実施形態を詳細に説明する。
【００２８】
最も単純な事例では，本発明は，ハイパースレッディングメカニズムを搭載した
マイクロプロセッサを備えれば実装することができる。リアルタイム計算および／
またはオンボードのアプリケーションが本発明から利益を引き出すことができる。
【００２９】
ネットワーク接続したコンピューティングデバイスまたはＨＰＣスーパーコンピ
ュータの最も複雑なアプリケーションでは，少なくとも１つのマイクロプロセッサ
を有する各装置が本発明を実装できることが有利である。
【００３０】
図１に示す実施形態はＨＰＣコンピュータの適用例であり，以下に本発明の一実
施形態を詳細に説明する。
実際にこれは本発明の特に重要な産業上の適用例である。
ただし，前述したとおり，本発明はこのようなＨＰＣコンピュータの設備に限定さ
れるものではないことは明らかである。
【００３１】
図１に示すコンピューティングデバイス１２，１４，１６，１８の設備１０は，
例えば帯域がきわめて広いデータ伝送ネットワーク２０を少なくとも１つ介して相
互接続したサーバクラスタで組織したＨＰＣコンピュータを非常に簡略化した不完
全な例である。この設備１０は，例えばとりわけ計算ノードを形成する符号１２，
管理ノードまたは格納ノードを形成するコンピューティングデバイス（図示せず）
とを有する。計算ノード１２，１４，１６および１８の全体構造は同じであっても
よいが，コンピューティングデバイス１８の構造のみを以下に詳述する。
【００３２】
例えばマイクロコンピュータタイプの計算サーバであるコンピューティングデバ
イス１８は，
－ 第１の中央処理装置２４および第２の中央処理装置２６が接続する通信バス
であって，コンピュータプログラム，さらに詳細には命令スレッドにより生じるコ
ンピュータプロセスを実行するための通信バス２２と，
－ ＲＯＭ２８（英語の「Ｒｅａｄ Ｏｎｌｙ Ｍｅｍｏｒｙ」
）タイプの読み出
し専用メモリ，および処理データおよび／または起動プログラム（例えばＢＩＯＳ
タイプのアプリケーション）を格納し，周辺機器を管理するためのＲＡＭ３０（英
語の
「Ｒａｎｄｏｍ Ａｃｃｅｓｓ Ｍｅｍｏｒｙ」
）
タイプの書き込み可能なメモ
リと，
－ 少なくとも１つのハードディスク３２と
を有する。
【００３３】
このコンピューティングデバイス１８は，場合によってはさらに（この図には示
していないが）従来のように，以下の素子：スクリーン，キーボード，マウス，ネ
ットワーク２０との通信インターフェース，およびＣＤ－ＲＯＭまたはＤＶＤのリ
ーダ／レコーダなどの交換可能な媒体へのデータのリーダ／レコーダを１つまたは
複数有する。
【００３４】
ハードディスク３２は，コンピューティングデバイス１８の起動時にＢＩＯＳア
プリケーションをロードしたＬｉｎｕｘシステムなどのオペレーティングシステム
命令スレッドを組み合わせて実行するメカニズムが，このオペレーティングシステ
ムに対してアクティブになる。例えばこのメカニズムは，中央処理装置２４および
セッサ２４Ｃおよび２４Ｓは第１の中央処理装置２４に，仮想プロセッサ２６Ｃお
よび２６Ｓは第２の中央処理装置２６に対するものである。
」
「
【００３７】
より一般に，前述の構造は，コンピューティングデバイスのあらゆるタイプのネ
ットワークに適しているためＨＰＣタイプである必要はなく，この構造では各コン
ピューティングデバイスのオペレーティングシステムは，仮想プロセッサ上で命令
スレッドを組み合わせて実行するメカニズムを利用する。
【００３８】
つまり，先ほど構造的に説明したようなコンピューティングデバイス１８は，本
発明を実装することができる装置の非限定的な一例にすぎないことがわかるであろ
う。コンピューティングデバイスの構想には多種多様なアーキテクチャがあり，同
じ中央処理装置に属する複数の仮想プロセッサ上で複数の命令スレッドを組み合わ
せて実行する中央処理装置を最低１つ備える装置はすべて適切である。
【００３９】
本発明の一実施形態によれば，コンピューティングデバイス１８は，複数の所定
のタイプに応じて，また特に，
－ 「計算」と呼ぶ命令スレッドの第１のタイプは，結果を供給するようにコン
ピューティングデバイス１８が実行するようになっているプログラムに対して，こ
のプログラムの実行に参加して結果を直接生成する命令スレッドに関係し，
－ 「サービス」と呼ぶプロセスの第２のタイプは，このプログラムの実行に参
加して「計算」タイプの命令スレッドに付属サービスを供給する命令スレッドに関
係する
という２つのタイプの命令スレッドに応じて，実行する命令スレッドを分類する分
類手段３６を有する。
【００４０】
サービスの命令スレッドは，例えば結果の保存，メモリの管理，出入力の管理，
データの通信，モニタリング，ファイルへのアクセスなどに係る。
【００４１】
アプリケーションに応じて，
分類手段３６はさまざまな形態を取ることができる。
【００４２】
第１の適用例では，実行するプログラムが複数の命令スレッドの実行を要求し，
そのうちのいくつかの命令スレッドが計算に参加し，残りの命令スレッドが付属サ
ービスに参加する。この場合，このプログラムは，命令スレッドを管理するアプリ
ケーションプログラミングインターフェースの関数である，例えばアプリケーショ
ンプログラミングインターフェースＰＯＳＩＸの関数ｓｃｈｅｄ＿ｓｅｔｓｃｈｅ
ｄｕｌｅｒ（）を，計算タイプ（ＨＴＣＡＬＣＵＬ）かサービスタイプ（ＨＴ＿Ｓ
ＥＲＶＩＣＥ）かを識別するパラメータに基づいて呼び出すように設計する。した
がって，オペレーティングシステム３４によって実装する命令スレッドの分類手段
ッドのタイプを識別することからなる。
【００４３】
第２の適用例では，複数のプログラムを実行する必要があり，そのうちのいくつ
かは計算プログラム，残りはサービスプログラムである。この場合，ユーザは，計
算かサービスかのタイプをパラメータで識別するコマンドを用いてプログラムの実
行を開始するようにする。例えばこれは，コマンドｈｔ＿ｓｃｈｅｄ－［ＣＡＬＣ
ＵＬまたはＳＥＲＶＩＣＥ］＜プログラム名＞である。このようにオペレーティン
グシステム３４で実装した命令スレッドの分類手段３６は，このパラメータを自動
的に認識してプログラムが要求する命令スレッドのタイプを識別することからなる。
【００４４】
第３の適用例では，並列計算プログラムに広く使用されるＭＰＩ（英語の「Ｍｅ
ｓｓａｇｅ Ｐａｓｓｉｎｇ Ｉｎｔｅｒｆａｃｅ」
）
ライブラリが，
計算モードで
開始される主要プログラムの枠組みでのサービスに向けた固有の命令スレッドを生
成する（第２の適用例を参照）
。この場合，このライブラリは，サービスタイプ（Ｈ
Ｔ＿ＳＥＲＶＩＣＥ）を識別するパラメータに基づいて関数ｓｅｔｓｃｈｅｄｕｌ
ｅｒ（）を呼び出すことができる。したがって，オペレーティングシステム３４に
よって実装する命令スレッドの分類手段３６は，このパラメータを自動的に認識し
てこのＭＰＩライブラリが生成する命令スレッドのタイプを識別することからなる。
【００４５】
命令スレッドのタイプが前述したように先験的に明示されない第４の適用例では，
オペレーティングシステム３４の分類手段３６を，自動的に，その上簡潔に，とり
わけこれらの命令スレッドの起動元であるアプリケーションを自動的に認識するこ
とによってタイプを決定するように設計することができる。
【００４６】
その上，コンピューティングデバイス１８は，同じ中央処理装置の各仮想プロセ
ッサを前述した２つのタイプの一方に関連付ける手段を有する。
図１に示すように，
この関連付け手段は，例えば計算タイプかサービスタイプかをそれぞれ識別するパ
ラメータＣおよびＳである。この関連付け手段は，例えば該当する中央処理装置２
暗黙的に管理される。したがって，図１に概略的に示した例では，第１の中央処理
装置２４の仮想プロセッサ２４Ｃは計算タイプであり，第１の中央処理装置２４の
仮想プロセッサ２４Ｓはサービスタイプであり，第２の中央処理装置２６の仮想プ
ロセッサ２６Ｃは計算タイプであり，第２の中央処理装置２６の仮想プロセッサ２
【００４７】
オペレーティングシステム３４は，仮想プロセッサ２４Ｃ，２４Ｓ，２６Ｃおよ
び２６Ｓに命令スレッドの実行を分散するマネージャ３８を有する。さらに正確に
は，この分散マネージャ３８は，実行する命令スレッドをそれぞれタイプに応じて
にも方向付けするように設計する。したがって，仮想プロセッサ２４Ｃまたは２６
Ｃには計算タイプの命令スレッドしか方向付けできず，仮想プロセッサ２４Ｓまた
は２６Ｓにはサービスタイプの命令スレッドしか方向付けできない。
【００４８】
具体的には，分散マネージャ３８は，
－ 実行する命令スレッドそれぞれに対して，中央処理装置にある仮想プロセッ
サ２４Ｃ，２４Ｓまたは２６Ｃ，２６Ｓとは独立して中央処理装置２４または２６
を選択する第１のソフトウェア手段４０と，
－ 選択した中央処理装置の仮想プロセッサのうち，実行する命令スレッドと同
じタイプのものを自動的に割り当てる第２のソフトウェア手段４２と
を有する。
【００４９】
次に，図１のコンピューティングデバイス１８が実装する複数のコンピュータプ
ロセスを組み合わせた実行の管理方法を図２を参照して詳述する。
【００５０】
第１の分類ステップ１００では，実行待機状態にある命令スレッドＴ１，Ｔ２お
よびＴ３を計算タイプ（右斜線）かサービスタイプ（左斜線）であるかによって分
類する。このタイプは，コマンドのパラメータまたはアプリケーションプログラミ
ングインターフェースの関数のパラメータで先験的に定義し，前述したようにオペ
レーティングシステム３４のソフトウェア手段３６によって自動的に認識すること
ができる。このタイプは，オペレーティングシステム３４のソフトウェア手段３６
によって直接，自動的に定義することもできる。
【００５１】
次のステップ１０２では，オペレーティングシステム３４の分散マネージャ３８
は，ソフトウェア手段４０を用いて各命令スレッドに対して中央処理装置２４また
は２６を選択し，
選択した中央処理装置の待ち行列にこの命令スレッドを配置する。
【００５２】
その後，各命令スレッドをソフトウェア手段４２が実行する仮想プロセッサに割
り当てるステップ１０４では，中央処理装置２４または２６の待ち行列に配置した
各命令スレッドが，実際にはこの命令スレッドと同じタイプのこの中央処理装置２
【００５３】
最後に，実行ステップ１０６では，前のステップで割り当てられた仮想プロセッ
サによって各命令スレッドを実行する。
【００５４】
前述したようなコンピューティングデバイス１８によって，複数の仮想プロセッ
サ上での命令スレッドの実行管理が容易になることは明らかである。
【００５５】
先行技術では，仮想プロセッサ上で命令スレッドを組み合わせて実行するメカニ
ズムを実装することができるコンピューティングデバイスにロードしたオペレーテ
ィングシステムは，一般の計算媒体と同じようにあらゆる仮想プロセッサを備えて
いるため，命令スレッドの分散が一層複雑になっている。
【００５６】
本発明によれば，オペレーティングシステムによる命令スレッドの分散が簡略化
し，とりわけＨＰＣスーパーコンピュータまたはリアルタイム計算のアプリケーシ
ョンを実装するプロセッサなど計算が強く求められる環境で，命令スレッドを組み
合わせて実行するメカニズムから多くの利益が引き出される。さらに正確には，前
述した実施形態では，同じ１つの中央処理装置にある２つの仮想プロセッサを，相
互に交換可能な２つの計算媒体ではなく，計算に対する１つの主要な実行媒体およ
び付属サービスに対する１つの二次的な実行媒体として示した。したがって，Ｎ個
の中央処理装置がある一般化したコンピューティングデバイス１８では，命令スレ
ッドを組み合わせて実行するメカニズムを実装したとしても，実際にはユーザ（お
よびオペレーティングシステム）にはＮ個の中央処理装置しか見えず，このメカニ
ズムを実装していないかのように見える。その結果，命令スレッドの分散で起こる
管理上の制約を受けることなくこのメカニズムから利益が引き出される。
【００５７】
選択した中央処理装置の仮想プロセッサに命令スレッドを自動的に割り当てるこ
とによって，命令スレッドはその役割および制約に応じて仮想プロセッサに分配さ
れ，ユーザまたはオペレーティングシステムがこの分配に介入することはない。
【００５８】
命令スレッドが分配されると，同じ１つの中央処理装置にある２つの仮想プロセ
ッサ上で実行メカニズムを平行に実装することの利点が，以下の点にあることがわ
かる。
－ 中央処理装置は２つの異なる待ち行列を管理するため，１つの命令スレッド
から別の命令スレッドへの移行を管理する必要がなくなり，この同時の実行はハー
ドウェアが管理する。
－ 特に，
仮想プロセッサが実行する命令スレッドが１つしか残っていないとき，
中央処理装置は仮想プロセッサに割り込むことなく仮想プロセッサにコードを実行
させることができる。
－ １つのプログラムから別のプログラムへの移行は，命令ごとに行われる。
【００５９】
この非常に細かい粒度は，とりわけ支障を来すおそれのあるデーモンの場合に明
確に有益になり得る。実際，同じ１つの中央処理装置にある計算の仮想プロセッサ
は減速するが，一定時間の間サービスの仮想プロセッサからブロックされることは
ない。支障（デーモンおよび割り込み）による影響は，計算の仮想プロセッサによ
って著しく減少する。
【００６０】
ＨＰＣ環境では，計算コードを計算の仮想プロセッサに配置し，付属サービスを
サービスの仮想プロセッサに配置することができ，これはバッチマネージャなどの
使用ツールに対して明白な方法で行う。リアルタイム環境では，これによって重要
な命令スレッドを他のすべてのサービス命令スレッドから自動的に隔離し，スケジ
ューリングのために起こる割り込みは一切なく，選択した中央処理装置で利用可能
な実行時間の最低５０％をこの重要な命令スレッドのために確保することができる。
【００６１】
最後に，コンピューティングデバイス１８と，各命令スレッドに１つのタイプを
先験的に割り当てるこの機能性を考慮していないプログラムとの互換性に関しては，
デフォルトとして命令スレッドを１つのサービスの仮想プロセッサに方向付ける必
要があることは明らかである。実際，オペレーティングシステムが開始するデーモ
ンはすべて，計算に支障を来さないようにサービスの仮想プロセッサで実行する必
要がある。そのため，命令スレッドを計算の仮想プロセッサに方向付けるために計
算コードのみを特別に適合させる必要がある。この適合は，必ずしもプログラム自
体から行う必要はなく，例えば前述のＭＰＩライブラリなど外部のツールで実行し
てもよい。
【００６２】
さらに，本発明は前述した実施形態に限定されるものではないことがわかるであ
ろう。とりわけ，各中央処理装置が３つ以上の仮想プロセッサを備えられるメカニ
ズムを実装することができる場合，３つ以上のタイプの命令スレッドを定義するこ
とが有利になり得る。
【００６３】
また，何度も前述して示唆したように，図１に示すＨＰＣスーパーコンピュータ
の設備が本発明を実装できる唯一のものではない。例えばリアルタイム計算および
／またはオンボード処理などこれよりも遙かに簡易なコンフィギュレーションでは，
複数の仮想プロセッサ上で複数の命令スレッドを組み合わせて実行する少なくとも
えるコンピュータ）を備えていれば，本発明を実装することができる。
【００６４】
さらに一般的には，ここに開示した教示に照らし合わせて，上に記載した実施形
態にさまざまな修正を加えてもよいことは当業者には明らかであろう。以下の特許
請求の範囲では，使用した用語が請求項を本明細書で明らかにした実施形態に限定
するものと解釈してはならず，本文の記載およびそこから予見される内容は，ここ
に開示した教示の実装に一般知識を応用することによって当業者が到達しうる範囲
内であることから，請求項が範囲に含めると想定するあらゆる同等のものも含まれ
ると解釈すべきである。
【図１】
【図２】
」
(3) 前記第２の２の事実及び前記(1)及び(2)の事実によると，
本願の出願当初の
発明（以下「当初発明」という。
）
，本願発明及び本願補正発明（以下，併せて「本
発明」という。
）について，次のとおり認められる。
ア 技術分野
本発明は，命令スレッドの実行を管理するコンピュータシステムであって，同じ
中央処理装置に属する複数の仮想プロセッサ上で複数の命令スレッドを組み合わせ
て実行する少なくとも一つの中央処理装置と，命令スレッドの実行を仮想プロセッ
サに分散する少なくとも一つのマネージャとを有するコンピュータシステムに関す
る。本発明は，また，その方法，サーバクラスタへの本方法の適用及び本方法を実
行するための命令を含むコンピュータプログラムにも係る。
（
【０００１】
）
ここで，
「同じ中央処理装置に属する複数の仮想プロセッサ上で複数の命令スレ
ッドを組み合わせて実行する中央処理装置」
とは，
命令スレッド実行の並列処理を，
中央処理装置の内部資源（とりわけ実行の「パイプライン」
，レジスタ及びキャッシ
ュメモリ）のいくつかを共有することによって増進させるメカニズムを備える中央
処理装置のことである。
（
【０００５】
）
イ 課題
ハイパースレッディングメカニズムを搭載したマイクロプロセッサ上で，従来の
オペレーティングシステム（Ｌｉｎｕｘ（登録商標）
）を実行すると，命令スレッド
を実行する際にロードバランシングアルゴリズムも実行するため，命令スレッドは
仮想プロセッサの特性を考慮する必要があった。特に，このオペレーティングシス
テムは，同じ中央処理装置の別の仮想プロセッサに命令スレッドを切り替えて仮想
プロセッサをアンロードすることはないという制約があるため，ロードバランシン
グアルゴリズムが非常に重くなっていた（
【０００７】
）
。この制約は，例えば携帯電
話のアプリケーションに内蔵するマイクロプロセッサなどに用いるリアルタイム計
算およびオンボード処理のアプリケーションでとりわけ問題が生じていた（
【００
）
。
別の例によると，ＨＰＣ（Ｈｉｇｈ Ｐｅｒｆｏｒｍａｎｃｅ Ｃｏｍｐｕｔｉ
ｎｇ）タイプのスーパーコンピュータの環境では，ユーザが中央処理装置へのアプ
リケーションの配置を細かくコントロールすることを望む（
【０００９】
）
。ユーザ
（すなわちプログラマ）は，命令スレッドを管理するアプリケーションプログラミ
ングインターフェースのシステムを呼び出すことによって，命令スレッドを細かく
配置し，それによって，命令スレッドに対するスケジューラの挙動を明示すること
ができるが，このためには，コンピュータシステムのトポロジーの知識が必要であ
り，他のソフトウェア層と競合するおそれのある配置が不可避であった（
【００１
）
。
仮想プロセッサの特性を考慮することは，複雑であり，ＨＰＣスーパーコンピュ
ータのアプリケーションにおいて自動的な管理ができなくなることさえあった。
（
【００１１】
）
そのため，前述の問題および制約を少なくとも部分的に緩和することができる，
命令スレッドを組み合わせた実行の管理システムが望まれていた。
（
【００１２】
）
ウ 課題解決手段
本発明は，前記技術分野において，実行する命令スレッドを複数の所定のタイプ
に応じて分類する分類手段又は分類ステップを有し，実行する命令スレッドをそれ
ぞれタイプに応じて仮想プロセッサに方向付けるように命令スレッドの実行を分散
するマネージャが設計されているものである。
（
【００１３】
，
【００２０】～【００
）
選択的に，本発明は，実行する命令スレッドを同じタイプの仮想プロセッサに方
向付けるようにすることができる。
（
【００１５】
）
選択的に，本発明は，同じ中央処理装置の各仮想プロセッサをこれらの所定のタ
イプの一つに関連付ける手段を備えることができ，中央処理装置は二つの仮想プロ
セッサを有し，
実行するコンピュータプロセスは第１のタイプか第２のタイプとし，
仮想プロセッサの一つは命令スレッドの第１のタイプに関連付け，仮想プロセッサ
のもう一つは命令スレッドの第２のタイプに関連付けることができる。
（
【００１７】
）
選択的に，前記第１のタイプ及び第２のタイプは，それぞれ，
「計算」と呼ばれる
タイプ及び「サービス」と呼ばれるタイプとすることができ，
「計算」タイプの命令
スレッドは，実行結果を提供するプログラムの実行に参加して結果を直接生成する
命令スレッドに関係し，
「サービス」タイプの命令スレッドは，このプログラムの実
行に参加して「計算」タイプの命令スレッドに付属サービスを提供する命令スレッ
ドに関係する。
（
【００１８】
）
選択的に，本発明によるコンピュータシステムは，少なくとも二つの中央処理装
置を備えることができ，マネージャを，中央処理装置が備える仮想プロセッサとは
独立して，実行する命令スレッドそれぞれに対して中央処理装置を選択するように
設計することができる。
（
【００１９】
）
選択的に，分類ステップでは，命令スレッドを管理するアプリケーションプログ
ラミングインターフェースの関数で用いられるタイプを識別するためのパラメータ
に基づいて，命令スレッドをそれぞれのタイプに分類してもよいし（
【００２１】
，
【００４２】
）
，あるいは，プログラムの実行コマンドで用いられるタイプを識別す
るためのパラメータに基づいて，このプログラムによって実行される命令スレッド
をそれぞれのタイプで分類してもよい。
（
【００２２】
，
【００４３】
）
エ 効果
本発明は，命令スレッドをタイプごとに分類し，これをタイプに応じてそれぞれ
の仮想プロセッサに方向付けることによって，計算資源が保護できる。その結果，
中央処理装置を最適な形で使用することになり，関連するアプリケーションの実行
速度が加速する。さらに，ユーザ（プログラマ）がハイパースレッディングメカニ
ズムを理解していないことに起因するエラーのリスクが抑えられる。
（
【００１４】
，
【００１６】
）
本発明によると，一つの中央処理装置にある二つの仮想プロセッサ上で実行メカ
ニズムを平行に実装することにより，以下の利点が得られる。
① 中央処理装置は二つの異なる待ち行列を管理するため，一つの命令スレッドか
ら別の命令スレッドへの移行を管理する必要がなくなる。
② 特に，実行すべき命令スレッドが仮想プロセッサ毎に一つずつの場合には，割
り込みをせずに仮想プロセッサがコードを実行できる。
③ 一つのプログラムから別のプログラムへの移行は，命令ごとに行われる。
同じ一つの中央処理装置にある計算の仮想プロセッサは減速するが，一定時間の
間サービスの仮想プロセッサからブロックされることはない。支障（デーモン及び
割り込み）による影響は，計算の仮想プロセッサにとって著しく減少する。
（
【００
）
計算コードを計算の仮想プロセッサに配置し，付属サービスをサービスの仮想プ
ロセッサに配置するので，リアルタイム環境では，重要な命令スレッドを他のすべ
てのサービス命令スレッドから自動的に隔離し，スケジューリングのために起こる
割り込みは一切なく，選択した中央処理装置で利用可能な実行時間の最低５０％を
この重要な命令スレッドのために確保することができる。
（
【００６０】
）
オ 実施例等
本発明の実施形態は，同一の中央処理装置に属する複数の仮想プロセッサ上で複
数の命令スレッドを組み合わせて実行する中央処理装置を２個（第１の中央処理装
置２４及び第２の中央処理装置２６）と，仮想プロセッサに命令スレッドの実行を
分散するマネージャ３８とを備えるコンピューティングデバイス１８であって，第
ＲＡＭ３０と，
ハードディスク３２とを有する。
（
【００２７】
，
【００３２】
，
【００４７】
）
本発明の実施形態には，
「計算」タイプ及び「サービス」タイプの二つのプロセス
のタイプがあり，
「計算」と呼ぶ命令スレッドの第１のタイプは，結果を供給するよ
うにコンピューティングデバイス１８が実行するようになっているプログラムに対
して，
このプログラムの実行に参加して結果を直接生成する命令スレッドに関係し，
「サービス」と呼ぶプロセスの第２のタイプは，このプログラムの実行に参加して
「計算」タイプの命令スレッドに付属サービスを供給する命令スレッドに関係する
ものであり，本発明の実施形態は，これら二つのタイプの命令スレッドに応じて，
実行する命令スレッドを分類する分類手段３６を有する。
（
【００３９】
）
さらに，コンピューティングデバイス１８は，同じ中央処理装置の各仮想プロセ
ッサを前述した二つのタイプの一方に関連付ける手段を有する。この関連付け手段
は，例えば計算タイプかサービスタイプかをそれぞれ識別するパラメータＣ及びＳ
である。一例では，第１の中央処理装置２４の仮想プロセッサ２４Ｃは計算タイプ
であり，
第１の中央処理装置２４の仮想プロセッサ２４Ｓはサービスタイプであり，
第２の中央処理装置２６の仮想プロセッサ２６Ｃは計算タイプであり，第２の中央
処理装置２６の仮想プロセッサ２６Ｓはサービスタイプである。
（
【００４６】
）
分散マネージャ３８は，実行する命令スレッドとタイプが同じ仮想プロセッサに
も方向付ける。したがって，仮想プロセッサ２４Ｃ又は２６Ｃには計算タイプの命
令スレッドしか方向付けされず，仮想プロセッサ２４Ｓ又は２６Ｓにはサービスタ
イプの命令スレッドしか方向付けされない。
（
【００４７】
）
アプリケーションに応じて，
分類手段３６はさまざまな形態を取ることができる。
（
【００４１】
）
第１の適用例では，一つのプログラムのうちいくつかの命令スレッドが計算に参
加し，残りの命令スレッドが付属サービスに参加するものであり，このようなプロ
グラムは，アプリケーションプログラミングインターフェースの関数ｓｃｈｅｄ＿
ｓｅｔｓｃｈｅｄｕｌｅｒ（）を，計算タイプ（ＨＴＣＡＬＣＵＬ）かサービスタ
イプ（ＨＴ＿ＳＥＲＶＩＣＥ）かを識別するためのパラメータに基づいて呼び出す
ように作られる。分類手段３６は，前記パラメータを自動的に認識して命令スレッ
ドのタイプを識別する。
（
【００４２】
）
第２の適用例では，複数のプログラムが実行され，そのうちのいくつかは計算プ
ログラムであり，残りはサービスプログラムである。この場合，プログラムの実行
を開始するには，ユーザは，計算かサービスかのタイプをパラメータで識別するコ
マンドを用いる。このコマンドは，例えば，コマンドｈｔ＿ｓｃｈｅｄ－［ＣＡＬ
ＣＵＬまたはＳＥＲＶＩＣＥ］＜プログラム名＞である。分類手段３６は，前記パ
ラメータを自動的に認識して命令スレッドのタイプを識別する。
（
【００４３】
）
第３の適用例では，ＭＰＩ（Ｍｅｓｓａｇｅ Ｐａｓｓｉｎｇ Ｉｎｔｅｒｆａ
ｃｅ）ライブラリによって，計算タイプで実行された主プログラムから，サービス
タイプの命令スレッドが形成される。この場合，ＭＰＩライブラリは，サービスタ
イプ（ＨＴ＿ＳＥＲＶＩＣＥ）を識別するパラメータに基づいて関数ｓｅｔｓｃｈ
ｅｄｕｌｅｒ（）を呼び出す。命令スレッドの分類手段３６は，このパラメータを
自動的に認識して命令スレッドのタイプを識別する。
（
【００４４】
）
第４の適用例では，前述の適用例とは異なり，命令スレッドのタイプが事前には
明示されない。分類手段３６は，命令スレッドの起動元であるアプリケーションを
自動的に認識することによってタイプを決定する。
（
【００４５】
）
(1) 新規事項追加禁止要件違反について
ア 前記１(1)のとおり，本件補正前の請求項６の命令スレッドのタイプは，
いずれも，単に「タイプ」と記載されており，
「
（Ｓ，Ｃ）
」の記号を伴わないもので
あったところ，前記第２の１のとおり，原告は，平成２６年８月２６日付けで，甲
（甲７，
後，本件補正をした。
イ 本件補正後の請求項６の，
「
（Ｓ，Ｃ）
」は，それ自体のみからその技術的
な意義を読み取れず，また，本件補正後の請求項６の記載中に，その技術的な意義
を明確にする定義等の記載は見当たらない。
本件補正後の請求項６の従属項である同請求項７～１０にも，本件補正後の請求
項６の「
（Ｓ，Ｃ）
」の技術的な意義を明確にする記載はない。
ウ(ｱ) 当初明細書等には，命令スレッドのタイプについては，二つ以上ある
こと（
【００１３】
，
【００１４】
，
【００１７】
，
【００２０】
）
，
【００３９】
，
【００４
，
【００４６】
）
，
三つ以上ある場合もあること
（
【００６２】
）
が記載されており，
命令スレッドのタイプが第１のタイプと第２のタイプである場合において，命令ス
レットの第１のタイプが計算タイプであり，第２のタイプがサービスタイプである
場合があることが記載されている（
【００３９】
，
【００４２】
，
【００４３】
，
【００４
，
【００４６】
，
【００４７】
，
【００５０】
）
。
また，当初明細書等には，命令スレッドのタイプは，①アプリケーションプログ
ラミングインターフェースの関数でタイプを識別するパラメータ（計算タイプ：Ｈ
ＴＣＡＬＣＵＬ，サービスタイプ：ＨＴ＿ＳＥＲＶＩＣＥ）に基づく場合（
【００２
，
【００４２】
，
【００５０】
）
，②プログラムの実行コマンドでタイプを識別する
パラメータ（ＣＡＬＣＵＬ，ＳＥＲＶＩＣＥ）に基づく場合（
【００２２】
，
【００４
，
【００５０】
）
，③命令スレッドの起動元のアプリケーションを自動的に認識す
ることによって決定される場合（
【００４５】
）があることが記載されている。
さらに，命令スレッドと仮想プロセッサの関係については，仮想プロセッサのタ
イプは，パラメータＣ及びパラメータＳによって識別され，パラメータＣは計算タ
イプに，パラメータＳはサービスタイプに関連付けられ，仮想プロセッサ２４Ｃ及
び２６Ｃは計算タイプであり，仮想プロセッサ２４Ｓ及び２６Ｓはサービスタイプ
である場合（
【００４６】～【００４８】
）があることが記載されている。
(ｲ) 以上によると，当初明細書等においては，
「Ｓ」及び「Ｃ」は，仮想プ
ロセッサのタイプとして記載されていること，
命令スレッドのタイプとしては，
「計
算タイプ」
及び
「サービスタイプ」
という文言が用いられていることが認められる。
しかし，前記(ｱ)のとおり，仮想プロセッサのタイプは，パラメータＣ及びパラメ
ータＳによって識別され，パラメータＣは計算タイプに，パラメータＳはサービス
タイプに関連付けられ，仮想プロセッサの２４Ｃ及び２６Ｃは「計算タイプ」
，同２
がアプリケーションプログラミングインターフェースの関数でタイプを識別するパ
ラメータ（計算タイプ：ＨＴＣＡＬＣＵＬ，サービスタイプ：ＨＴ＿ＳＥＲＶＩＣ
Ｅ）
や，
プログラムの実行コマンドでタイプを識別するパラメータ
（ＣＡＬＣＵＬ，
ＳＥＲＶＩＣＥ）に基づく場合があることが記載されているところ，C が計算（ｃ
ａｌｃｕｌａｔｉｏｎ）
，Ｓがサービス（ｓｅｒｖｉｃｅ）の頭文字に由来すること
も明らかである。
エ そうすると，当初明細書等の記載を考慮して，特許請求の範囲に記載さ
れた用語の意義を解釈すると，本件補正後の請求項６～８で命令スレッドのタイプ
とされている記載「タイプ（Ｓ，Ｃ）
」は，
「サービスタイプ」
，
「計算タイプ」の意
味であると解することができる。
オ 以上によると，本件補正は，本件補正前の請求項６において，命令スレ
ッドの「タイプ」は，どのような種類のタイプが存在するのかについて，記載がな
かったのを，
「タイプ（Ｓ，Ｃ）
」とし，当初明細書等に記載されていた「タイプ（サ
ービスタイプ，計算タイプ）
」としたものであり，当初明細書等に記載された事項の
範囲内を超えるものではない。
したがって，本件補正は，新規事項を追加するものではなく，原告の主張する取
消事由１のうち，新規事項追加禁止要件違反についての判断の誤りを主張する点に
ついては，理由がある。
カ(ｱ) 被告は，当初明細書等においては，仮想プロセッサのタイプとして
「Ｃ」及び「Ｓ」が用いられているものの，命令スレッドのタイプとして「Ｃ」及
び「Ｓ」は用いられてはおらず，命令スレッドのタイプとしては，
「計算タイプ」及
び「サービスタイプ」を用いているから，命令スレッドのタイプと仮想プロセッサ
のタイプは明確に使い分けられている旨主張する。
しかし，
この主張を採用することができないことは，
既に判示したとおりである。
(ｲ) また，被告は，
「Ｓ」及び「Ｃ」は，参照符号であり，発明特定事項と
はならず，単なる例示にすぎない旨主張する。
しかし，本件補正後の請求項６の「タイプ（Ｓ，Ｃ）
」は，既に判示したとおり，
「タイプ（サービスタイプ，計算タイプ）
」の意味であるから，単に「請求項の記載
の内容を理解するために必要があるときは，当該願書に添付した図面において使用
した符号を括弧をして用いる」
（特許法施行規則様式２９の２［備考］１４ロ）場合
とは異なっており，発明特定事項であるということができる。
したがって，被告の上記主張は，採用することができない。
(2) 目的要件違反について
ア 前記(1)のとおり，本件補正により，請求項６の「タイプ」の後に付加さ
れる
「
（Ｓ，
Ｃ）
」
は，
「
（サービスタイプ，
計算タイプ）
」
を意味するものと解される。
イ したがって，本件補正前は限定のなかった請求項６の「タイプ」に本件
補正によって「
（Ｓ，Ｃ）
」を付加することにより，サービスタイプと計算タイプが
含まれることを明らかにした上，それぞれの命令スレッドがそれぞれのタイプに応
じて仮想プロセッサに方向付けられるものであることを特定したものであって，請
求項６に，
「サービスタイプと計算タイプがそれぞれのタイプに応じて仮想プロセ
ッサに方向付けられる」という本件補正前にはない限定を加えたものであるから，
「特許請求の範囲の減縮」に当たるということができる。
ウ 被告は，本件補正後の請求項６における「複数の所定のタイプ」という
用語は，
「命令スレッド」の「タイプ」を意味するものとして明確であり，「複数の
所定のタイプ」に付加された「（Ｓ，Ｃ）」も，本願の願書に添付した図面において
使用した符号を括弧をして用いたものとして解釈し得るところ，明細書の発明の詳
細な説明で技術的に裏付けられているのが「Ｓ」及び「Ｃ」のタイプを使用するも
のだけであるとか，実施例が「Ｓ」及び「Ｃ」のタイプを使用するものだけである
ことのみから，特許請求の範囲に記載された「複数の所定のタイプ」を「少なくと
も『Ｓ』及び『Ｃ』のタイプを含むもの」と限定して解することはできない旨主張
する。
しかし，本願発明において命令スレッドの「タイプ」として「計算タイプ」と「サ
ービスタイプ」
以外のものがあるとしても，
特許請求の範囲及び明細書の記載から，
既に判示したとおり解することができる。
したがって，被告の上記主張を採用することはできない。
エ そうすると，本件補正は，特許請求の範囲の減縮を目的とするものに該
当する。
したがって，原告の取消事由１のうち，目的要件違反についての判断の誤りを主
張する点については，理由がある。
(3) 小括
そうすると，本願補正発明６は，サービスタイプと計算タイプの各命令スレッド
が，
それぞれのタイプに応じて仮想プロセッサに方向付けられるものであるところ，
独立特許要件違反についての審決の判断は，これを前提としていないから，前記の
目的要件違反についての判断の誤りは，独立特許要件違反の有無を判断するまでも
なく，審決の結論に影響を及ぼす。
そして，無効審判において，本願補正発明６につき上記のような解釈に基づく審
理・判断がされたとは認められないから，本件については，再度特許庁において上
記の解釈に基づく審理・判断を行う必要があるものと考えられる。
第６ 結論
以上の次第で，原告の主張する取消事由１には，理由があるから，その余の点を
判断するまでもなく，審決は，取消しを免れない。
よって，主文のとおり判決する。
知的財産高等裁判所第２部
裁判長裁判官
森 義 之
裁判官
永 田 早 苗
裁判官
森 岡 礼 子

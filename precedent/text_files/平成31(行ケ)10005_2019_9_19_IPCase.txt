令和元年９月１９日判決言渡
平成３１年（行ケ）第１０００５号 審決取消請求事件
口頭弁論終結日 令和元年７月４日
判 決
原 告 株 式 会 社 三 菱 Ｕ Ｆ Ｊ 銀 行
同訴訟代理人弁護士 高 橋 雄 一 郎
阿 部 実 佑 季
同訴訟代理人弁理士 林 佳 輔
福 永 健 司
被 告 特許庁長官
同 指 定 代 理 人 須 田 勝 巳
辻 本 泰 隆
松 平 英
野 崎 大 進
豊 田 純 一
主 文
事 実 及 び 理 由
第１ 請求
主文同旨
第２ 事案の概要
本件は，特許出願拒絶査定に対する不服審判請求を不成立とした審決の取消訴訟
である。争点は，独立特許要件違反（進歩性欠如）の判断の誤りの有無である。
原告は，発明の名称を「アプリケーション生成支援システムおよびアプリケーシ
ョン生成支援プログラム」
とする発明につき，
平成２９年６月２６日，
特許出願
（特
願２０１７－１２４３８５号。請求項の数３４。甲９の１～３。以下「本願」とい
う。
）をしたが，平成３０年１月１７日付けで拒絶査定（甲１３）を受けたので，同
年３月８日，拒絶査定不服審判請求をし，同審判請求は，不服２０１８－３４０６
号として審理された（甲１４）
。
原告は，同年６月１９日，特許請求の範囲を補正する手続補正（請求項の数１６。
甲１８）をし，その後，同年９月１２日，特許請求の範囲を補正する手続補正（請
求項の数２。甲２１。以下「本件補正」という。
）をしたが，特許庁は，同年１１月
「本件審判の請求は，成り立たない。
」との審決（以
下「本件審決」という。
）をし，同審決謄本は，同年１２月１８日，原告に送達され
た。
(1) 本件補正前の本願の特許請求の範囲請求項１の記載は，次のとおりである
（同請求項に係る発明を，以下「本件補正前発明」という。
）
。
「通信端末に固有のネイティブ機能を実行させるためのパラメータに応じて，前
記通信端末において実行されるアプリケーションの動作を規定する設定ファイルを
設定する設定部と，
前記設定ファイルに基づいてアプリケーションパッケージを生成する生成部と，
を有するアプリケーション生成支援システム。
」
(2) 本件補正後の本願の特許請求の範囲請求項１の記載は，次のとおりである
（同請求項に係る発明を，以下「本件補正発明」という。
）
。
「携帯通信端末に固有のネイティブ機能を実行させるためのパラメータに応じて，
前記携帯通信端末において実行されるアプリケーションの，前記携帯通信端末の動
きに伴う動作を規定する設定ファイルを設定する設定部と，
前記設定ファイルに基づいてアプリケーションパッケージを生成する生成部と，
を有するアプリケーション生成支援システム。
」
(1) 引用発明及び周知技術について
ア 主引例
特許第５４７０５００号公報（平成２６年４月１６日発行。以下「引用文献１」
という。
）には，以下のとおりの発明（以下「引用発明」という。
）が記載されてい
る。
「アプリケーション生成装置１と開発用端末２とがインターネット等のネットワ
ークＮを介して通信可能に接続され，スマートフォン等の携帯端末にインストール
されるアプリケーションプログラムであるネイティブアプリケーションを生成する
アプリケーション生成システムであって，
アプリケーション生成装置１は，記憶部１１と，受付部１２と，生成部１３と，
変換部１４と，送信部１５とを備え，
記憶部１１は，ネイティブアプリケーションのテンプレートであるテンプレート
アプリケーション１１１を記憶し，
ここで，テンプレートアプリケーション１１１は，スマートフォン等の携帯端末
にインストールされると，所定のアクセス先にアクセスして情報を取得し，当該端
末の表示部に表示させるネイティブアプリケーションのテンプレートであり，
テンプレートアプリケーション１１１は，設定情報１１２と，１以上のプログラ
ムファイル１１３とを含んでいて，記憶部１１の所定のフォルダ内に格納されてお
り，
受付部１２は，開発用端末２から，リクエスト用ページ３０の取得要求を受け付
けると，リクエスト用ページ３０を開発用端末２に送信し，
ここで，リクエスト用ページ３０には，入力欄として，ネイティブアプリケーシ
ョンがアクセスするウェブアプリケーションのロケーションを示すアドレスの入力
欄３１が設けられ，また，ネイティブアプリケーションの表示態様情報に係る入力
欄として，
背景色の入力欄３４，
及びアイコン画像の入力欄３５が設けられており，
入力欄３１には，ウェブアプリケーションのメインページのＵＲＬが入力され，
背景色の入力欄３４には，カラーコードや背景画像を示すアドレスが入力され，ア
イコン画像の入力欄３５には，画像ファイルのアドレスが入力され，
受付部１２が，開発用端末２から，ウェブアプリケーションのメインページのア
ドレス，及び表示態様情報とともに，ネイティブアプリケーションの生成要求を示
すリクエストを受け付けると，生成部１３は，コピーして新たに生成されたテンプ
レートアプリケーション１１１に含まれる設定情報の内容を，受付部１２が受け付
けたウェブアプリケーションのメインページのアドレス，及び表示態様情報に基づ
いて書き換えてネイティブアプリケーションを生成し，
ここで，生成されたネイティブアプリケーションは，携帯端末にインストールさ
れて実行されると，設定情報に含まれているウェブアプリケーションのアドレスに
基づいて，ウェブアプリケーションに対応するウェブページを取得し，設定情報に
含まれている表示態様情報に基づいて取得したウェブページの表示態様を変更して，
携帯端末の表示部に表示させるものであり，
変換部１４は，生成部１３がネイティブアプリケーションを生成すると，当該ネ
イティブアプリケーションの設定情報及び１以上のプログラムファイルを格納して
いる所定のフォルダを所定の方式で圧縮し，端末がインストール可能な形式のネイ
ティブアプリケーションファイルに変換し，
送信部１５は，
ネイティブアプリケーションファイルを所定の記憶領域に格納し，
当該ファイルのアドレスを表示する送信用ページを開発用端末２に送信し，開発用
端末２において，送信用ページ４０に設けられているダウンロードボタン４１が押
下されると，生成したネイティブアプリケーションファイルを開発用端末２に送信
する，
アプリケーション生成システム。
」
イ 周知技術
(ｱ) 掌田津耶乃「Ａｎｄｒｏｉｄ Ｓｔｕｄｉｏではじめる Ａｎｄｒｏｉ
ｄプログラミング入門 第２版 Ａｎｄｒｏｉｄ ６．０ Ｍａｒｓｈｍａｌｌｏ
ｗ Ａｎｄｒｏｉｄ Ｓｔｕｄｉｏ １．５対応」
（株式会社秀和システム，平成２
（以下「引用文献２」という。甲２）の３５６頁～３６８頁
には，以下の記載がある。
ａ 「カメラを利用するためには，アプリケーションに「パーミッショ
ン（アクセス権）
」を用意する必要があります。これは，ＡｎｄｒｏｉｄＭａｎｉｆ
ｅｓｔ．ｘｍｌに記述します。ＡｎｄｒｏｉｄＭａｎｉｆｅｓｔ．ｘｍｌを開き，
＜ｍａｎｉｆｅｓｔ＞タグ内の適当なところに以下のタグを追記してください
・
・
・
」
（３５６頁）
ｂ 「７．３．３ ＧＰＳ利用のパーミッション設定
・・・
ＧＰＳも，やはりパーミッション関係の情報を用意しなければ利用できないよう
になっています。ＡｎｄｒｏｉｄＭａｎｉｆｅｓｔ．ｘｍｌを開き，＜ｍａｎｉｆ
ｅｓｔ＞タグ内に以下のタグを追加してください。
」
（３６８頁）
(ｲ) 三宅 理
「第７章 ＨＴＭＬ５＋ＪａｖａＳｃｒｉｐｔでアプリ開発 は
じめてのＰｈｏｎｅＧａｐ（その１）ここまでできるＰｈｏｎｅＧａｐ」Ｉｎｔｅ
ｒｆａｃｅ増刊 Ｓｍａｒｔｐｈｏｎｅ Ｗｏｒｌｄ Ｖｏｌｕｍｅ．４（ＣＱ出版
株式会社，平成２４年６月１日発行）
（以下「引用文献３」という。甲３，乙１）の
「地図とＧＰＳを組み合わせる
ＰｈｏｎｅＧａｐのすばらしさを体験するのに，地図とＧＰＳを組み合わせたア
プリを例に紹介します。
・・・スマートフォン上に地図を表示します．さらに，ＰｈｏｎｅＧａｐの「Ｇｅ
ｏｌｏｃａｔｉｏｎ」を使用して，現在位置にマーカーを表示します。
」
(ｳ) 「スマホはなぜ動くのか？ 必ず悩むアプリ開発の６ポイントを徹底
解説！ Ｐｏｉｎｔ１ ファイルがわかるとスマホアプリの仕組みが見えてくる」
日経ソフトウエア２０１３年６月号（日経ＢＰ社，平成２５年４月２４日発行）
（以
下「引用文献４」という。甲４）の１０頁～１１頁，１４頁，１６頁には，以下の
記載がある。
ａ 「設定ファイルは，そのアプリのアプリ名やバージョン，対応言語
（英語や日本語ｅｔｃ．
）などを記述しておくファイルです。
」
（１０頁～１１頁）
ｂ 「設定ファイル「ｉｏｓ＿ｓａｍｐｌｅ－Ｉｎｆｏ．ｐｌｉｓｔ」
（５）のｉｏｓ＿ｓａｍｐｌｅ－Ｉｎｆｏ．ｐｌｉｓｔはアプリの設定ファイルで
す。アプリの名前やバージョン，そのアプリが利用するＳｔｏｒｙｂｏａｒｄのフ
ァイル等の情報が記述されています。
」
（１４頁）
ｃ 「超重要な設定ファイル「ＡｎｄｒｏｉｄＭａｎｉｆｅｓｔ．ｘｍ
ｌ」
（５）のＡｎｄｒｏｉｄＭａｎｉｆｅｓｔ．ｘｍｌは，頻繁に編集することにな
る超重要な設定ファイルです（図１４）
。この中ではアプリの名前やアイコン，対応
するＡｎｄｒｏｉｄのバージョン，
起動時に実行する○○Ａｃｔｉｖｉｔｙクラス，
そのアプリをネットワークに接続できるようにするか？，ＳＤカードにファイルを
保存できるようにするか？などの，様々な項目を設定します。
」
（１６頁）
(ｴ) 掌田津耶乃「ＨＴＭＬ５とコピペでスマホアプリ開発者デビュー！
Ｐａｒｔ２ いよいよデビュー スワイプ可能ミニゲームを作る」日経ソフトウエ
ア２０１２年１０月号（日経ＢＰ社，平成２４年８月２４日発行）
（以下「引用文献
「横画面に固定する
スマートフォンでは端末が縦の姿勢のときと，横の姿勢のときで画面が切り替わ
ります。ただ，ゲームでは画面が切り替わらない方が望ましいので，ここでは横画
面に固定する設定を施します。
Ａｎｄｒｏｉｄでは，ＡｎｄｒｏｉｄＭａｎｉｆｅｓｔ．ｘｍｌに「ａｎｄｒｏ
ｉｄ：ｓｃｒｅｅｎＯｒｉｅｎｔａｔｉｏｎ ＝”１ａｎｄｓｃａｐｅ”」
の１行を追
加します（図５）
。
ｉＯＳでは，左側のリストの青いアイコンのプロジェクト名（Ｍａｔａｔａｂｉ
Ｐａｋｋｕｎ）を選択すると，その右側に「ＴＡＲＧＥＴＳ」という項目が現れる
ので，その下にある「ＭａｔａｔａｂｉＰａｋｋｕｎ」を選びます。すると，プロ
ジェクトの各種設定が表示されます。この中に「Ｓｕｐｐｏｒｔｅｄ Ｄｅｖｉｃ
ｅ Ｏｒｉｅｎｔａｔｉｏｎｓ」
という項目があるので，
「Ｌａｎｄｓｃａｐｅ Ｌ
ｅｆｔ」か「Ｌａｎｄｓｃａｐｅ Ｒｉｇｈｔ」を選びます。
これで，画面を横向きに固定できます。なお，ここでいうｏｒｉｅｎｔａｔｉｏ
ｎは「方向」
，ｌａｎｄｓｃａｐｅは「横方向」という意味です。
」
(ｵ) 「Ａｎｄｒｏｉｄエンジニア養成読本 現場で役立つノウハウと仕事
にしたい人のための必須知識満載！」
（株式会社技術評論社，
平成２３年１１月２５
日発行）
（以下「参考文献１」という。甲８）の１５７頁，１６２頁には，以下の記
載がある。
ａ 「サンプルアプリケーションを起動すると，３Ｄグラフィクス界で
はおなじみのティーポットの３Ｄモデルが表示されます。端末を傾けると視点が変
化して，見る向きを変えることができます。
」
（１５７頁）
ｂ 「■ＡｎｄｒｏｉｄＭａｎｉｆｅｓｔ．ｘｍｌ
加速度センサでデバイスの傾きを取得するため，傾けた際に画面のオリエンテー
ションが変わらないように，ａｎｄｒｏｉｄ：ｓｃｒｅｅｎＯｒｉｅｎｔａｔｉｏ
ｎ ＝”ｐｏｒｔｒａｉｔ”を追加してｐｏｒｔｒａｉｔで固定します。
」
（１６２頁）
(2) 一致点及び相違点
本件補正発明と引用発明との一致点及び相違点は以下のとおりである。
ア 一致点
「携帯通信端末の所定の機能を実行させるためのパラメータに応じて，前記携帯
通信端末において実行されるアプリケーションの動作を規定する設定ファイルを設
定する設定部と，
前記設定ファイルに基づいてアプリケーションパッケージを生成する生成部と，
を有するアプリケーション生成支援システム」である点。
イ 相違点
(ｱ) 相違点１
設定ファイルを設定するパラメータが，
本件補正発明では，
「携帯通信端末に固有のネイティブ機能を実行させるための
パラメータ」であるのに対して，
引用発明では，携帯通信端末の機能を実行させるためのパラメータではあるもの
の，携帯通信端末に固有のネイティブ機能を実行させるためのパラメータであるこ
とが特定されていない点。
(ｲ) 相違点２
設定ファイルが，
本件補正発明では，
「アプリケーションの，携帯通信端末の動きに伴う動作」を規
定する「設定ファイル」であるのに対して，
引用発明では，
「設定情報」が，ネイティブアプリケーションのウェブページ取得
動作や表示動作を規定するものの，
「携帯端末の動きに伴う」
動作を規定するもので
あることが特定されていない点。
(3) 相違点についての判断
事案に鑑み，上記相違点１及び相違点２についてまとめて検討する。
ア(ｱ) 相違点１及び相違点２は，アプリケーションの特徴に係わる点で関連
しており，本件補正発明のアプリケーション生成システムが生成するアプリケーシ
ョンが，
「ネイティブ機能を利用するアプリケーションであって，
携帯通信端末の動
きに伴う動作を行うアプリケーション」であるのに対して，引用発明のアプリケー
ション生成システムが生成するアプリケーションは，そのようなアプリケーション
ではなく，携帯端末にインストールされて実行されると，設定情報に含まれている
ウェブアプリケーションのアドレスに基づいて，ウェブアプリケーションに対応す
るウェブページを取得し，設定情報に含まれている表示態様情報に基づいて取得し
たウェブページの表示態様を変更して，携帯端末の表示部に表示させる点である。
(ｲ) ここで，ネイティブアプリケーションの設定ファイルに，引用発明に
記載されている「ウェブアプリケーションのロケーション」
，
「ネイティブアプリケ
ーションの表示態様情報」などのパラメータの他にも，以下の文献の記載にもある
ように，
ネイティブ機能のパラメータを含む各種のパラメータが設定されることが，
本願出願前には当該技術分野における周知技術であった。
ａ 前記(1)イ(ｱ)ａ，ｂに記載されている「カメラを利用するためのパ
ーミッション」
，
「ＧＰＳ利用のパーミッション」などのネイティブ機能を実行させ
るためのパラメータ
ｂ 前記(1)イ(ｳ)ａ～ｃに記載されている
「アプリの名前やバージョン，
そのアプリが利用するＳｔｏｒｙｂｏａｒｄのファイル等の情報」
，
「アプリの名前
やアイコン，対応するＡｎｄｒｏｉｄのバージョン，起動時に実行する○○Ａｃｔ
ｉｖｉｔｙクラス，そのアプリをネットワークに接続できるようにするか？，ＳＤ
カードにファイルを保存できるようにするか？などの様々な項目」
ｃ 前記(1)イ(ｴ)に記載されている「横画面に固定する設定」
ｄ 前記(1)イ(ｵ)ｂに記載されている
「加速度センサでデバイスの傾きを
取得するため，傾けた際に画面のオリエンテーションが変わらないように固定する
ための設定」
(ｳ) また，本件補正発明の「携帯通信端末の動きに伴う動作」について検
討すると，本願の明細書（以下，図面を含めて「本件明細書」という。
）の段落【０
，
【００７６】
，
【０１３７】には，
「携帯通信端末の動き」に関連すると考え
られる構成として，
「ＧＰＳ」と「加速度センサ」が例示されている。
そして，本件補正発明の「携帯通信端末の動き」が「携帯通信端末の移動」であ
るとした場合，
「携帯通信端末の移動に伴う動作」を行う「地図とＧＰＳを組み合わ
せたアプリ」は，例えば，前記(1)イ(ｲ)のとおり，周知であり，ＧＰＳに関する前記
(1)イ(ｱ)ｂの記載も参酌すると，上記「地図とＧＰＳを組み合わせたアプリ」では，
ネイティブ機能であるＧＰＳに関連するパラメータを設定ファイルに設定している
ものと認められる。
また，本件補正発明の「携帯通信端末の動き」が，端末を傾けるような「動き」
であるとすると，
「携帯通信端末の傾き」に伴う動作を行うアプリは，例えば，前記
(1)イ(ｵ)ａに記載されているように周知であり，前記(1)イ(ｵ)ｂの記載を参照すると，
このアプリでは，ネイティブ機能である加速度センサに関連するパラメータが設定
ファイルに設定されると認められる。
そうすると，
「携帯通信端末の動きに伴う動作を行うアプリ」は，本願の出願前に
当該技術分野において周知であり，加えて，当該アプリが利用するネイティブ機能
のパラメータを設定ファイルに設定可能とすることも，本願の出願前には当該技術
分野における周知技術であった。
(ｴ) 引用発明は，
「リクエスト用ページ３０には，入力欄として，ネイティ
ブアプリケーションがアクセスするウェブアプリケーションのロケーションを示す
アドレスの入力欄３１が設けられ，また，ネイティブアプリケーションの表示態様
情報に係る入力欄として，背景色の入力欄３４，及びアイコン画像の入力欄３５が
設けられており」
，
「入力欄３１には，ウェブアプリケーションのメインページのＵ
ＲＬが入力され，背景色の入力欄３４には，カラーコードや背景画像を示すアドレ
スが入力され，アイコン画像の入力欄３５には，画像ファイルのアドレスが入力さ
れ」るものであるところ，引用文献１の段落【００１０】の「前記テンプレートア
プリケーションは，前記アクセス先を設定する設定情報を含み，前記生成部は，前
記受付部が前記リクエストを受け付けたことに応じて，前記テンプレートアプリケ
ーションをコピーし，コピーされた前記テンプレートアプリケーションに含まれる
前記設定情報の前記アクセス先を前記受付部が受け付けた前記アドレスに設定する
ことで前記ネイティブアプリケーションを生成する」との記載及び「この発明によ
れば，アプリケーション生成装置は，設定情報に含まれているアクセス先を，受付
部が受け付けたアドレスに変更するという単純な処理によってネイティブアプリケ
ーションを容易に生成することができる」との記載も考慮すると，引用発明は，ネ
イティブアプリケーションの設定情報（設定ファイル）のパラメータを，リクエス
ト用ページ３０の入力欄，すなわち，ＧＵＩを用いて簡単に設定することで，ネイ
ティブアプリケーションを容易に生成できるアプリケーション生成システムである
といえる。
そして，アプリケーション生成システムを用いて「携帯端末」の「ネイティブア
プリケーション」
の開発を行う当業者であれば，
「携帯通信端末の動きに伴う動作を
行うアプリ」を利用可能であるところ，この周知の「携帯通信端末の動きに伴う動
作を行うアプリ」を生成する場合でも，設定ファイルにネイティブ機能のパラメー
タをＧＵＩを用いて簡単に設定することで，アプリを容易に生成するという課題を
解決できることは当然に予測し得たものであるから，引用発明のアプリケーション
生成システムを，上記周知の「携帯通信端末の動きに伴う動作を行うアプリ」の生
成に用いる動機はあったといえる。
(ｵ) したがって，引用発明のアプリケーション生成システムを，
「携帯通信
端末の動き（すなわち，携帯通信端末の移動や傾きなどの動き）に伴う動作」を行
うアプリケーションの生成に用い，その際，当該アプリケーションの設定ファイル
に，当該アプリケーションが利用するネイティブ機能のパラメータを設定するよう
に構成すること，すなわち，引用発明において，アプリケーションの設定ファイル
を，
「アプリケーションの，
携帯通信端末の動きに伴う動作を規定する設定ファイル」
とし，当該設定ファイルを設定するためのパラメータを，ＧＰＳや加速度センサの
ような携帯通信端末の動きに伴う動作に関連したネイティブ機能を実行させるため
のパラメータとすることは，当業者が容易に想到し得たことである。
イ 本件補正発明の奏する作用効果は，引用発明と引用文献２～５及び参考
文献１に記載された周知技術の奏する作用効果から予測される範囲内のものにすぎ
ず，格別顕著なものということはできない。
ウ よって，本件補正発明は，引用発明と引用文献２～５及び参考文献１に
記載された周知技術に基づいて，当業者が容易に発明をすることができたものであ
り，特許法２９条２項により，特許出願の際独立して特許を受けることができない
ものであるので，本件補正は却下すべきものである。
(4) 本件補正前発明について
本件補正前発明は，本件補正発明から，
「通信端末」に係る限定事項と，
「前記通
信端末において実行されるアプリケーションの動作」に係る限定事項を削除したも
のである。
本件補正前発明の発明特定事項をすべて含み，さらに他の事項を付加したものに
相当する本件補正発明が，引用発明と引用文献２～５及び参考文献１に記載された
周知技術に基づいて，当業者が容易に発明をすることができたのであるから，本件
補正前発明も，引用発明と引用文献２～５及び参考文献１に記載された周知技術に
基づいて，当業者が容易に発明をすることができたものである。
したがって，本件補正前発明は，特許法２９条２項により特許を受けることがで
きない。
第３ 原告主張の取消事由
(1) 引用発明のアプリケーション生成システムを，
「携帯通信端末の動きに伴う
動作を行うアプリ」の生成に用いる動機はないこと
ア 引用文献１の段落
【０００２】
，
【０００４】
～
【０００７】
，
【００２３】
，
【００２４】によると，引用発明のアプリケーション生成システムは，アプリケー
ションサーバにおいてネイティブアプリケーションを検索したユーザに，ＣＭＳに
より開発したウェブアプリケーションを利用してもらうことができないという問題
に鑑み（段落【０００２】
，
【０００４】
，
【０００５】
）
，ＣＭＳによって構築したウ
ェブアプリケーションと同等の機能を有するネイティブアプリケーションを開発す
ることを提案している（段落【０００６】
）
。引用発明は，その提案を前提とした上
で，
ネイティブアプリケーションの開発には多大な開発工数が必要であることから，
ネイティブアプリケーションを容易に生成することができるアプリケーション生成
装置を提供することを課題としている（段落【０００６】
，
【０００７】
）
。
ここで，ウェブアプリケーションは，一般的に，Ｗｅｂサーバ上で動作し，Ｗｅ
ｂブラウザを用いて利用するアプリケーションとして認識されている
（甲２２）
。
す
なわち，ウェブアプリケーションは，入力されたデータの管理や，データに基づい
て出力する情報を組み立てる処理をインターネット上のＷｅｂサーバが行い，ユー
ザによる情報の入力や，出力された情報の画面表示といった処理を端末側のＷｅｂ
ブラウザが行うアプリケーションである（甲２３）
。
このように，ウェブアプリケーションを利用するに当たり，ユーザが操作する端
末側の担う処理は，入力されたデータの送信処理と受信したデータの表示処理のみ
であり，データ処理等の実体的な部分の演算処理は，もっぱらＷｅｂサーバ側に任
せて実行する構造となっている。
また，ネイティブアプリケーションは，一般的に，端末内の演算装置が直接に演
算処理を行う（実行する）タイプのアプリケーションとして認識されている（甲２
。引用文献１の段落【０００４】
，
【００２３】に記載されているとおり，ネイテ
ィブアプリケーションは，端末内で実行されるという性質上，アプリケーションサ
ーバ等のアプリケーション提供元からダウンロードして端末にインストールされる。
以上のとおり，ウェブアプリケーションとネイティブアプリケーションとは，技
術的に全く異なるタイプのアプリケーションであり，引用発明は，アプリケーショ
ンサーバにおいてネイティブアプリケーションを検索したユーザに，ＣＭＳにより
開発したウェブアプリケーションを利用してもらうことを前提とした上で，多大な
開発工数を要することなく，ウェブアプリケーションと同等の機能を有するネイテ
ィブアプリケーションを容易に生成するという課題を解決するものである。
イ 引用文献１の段落
【００２５】
，
【００２６】
，
【００２９】
～
【００３１】
，
【００３４】～【００３６】によると，引用発明のアプリケーション生成システム
で生成されたネイティブアプリケーションは，
「設定情報」に設定された「ウェブア
プリケーションのロケーションを示すアドレス」
，
「メニューページに表示するメニ
ュー画像のファイルの格納先アドレス」
，
「メニュー画像に対応するリンク先のペー
ジのアドレス」
，
「カラーコード（ＲＧＢ値を十六進法で表記した文字列）や背景画
像を示すアドレス」等のパラメータに応じて，指定された表示態様で指定されたウ
ェブアプリケーションを表示するものであり，上記パラメータは，いずれもスマー
トフォン等の携帯通信端末の画面にウェブページを表示するためのパラメータに限
られており，表示対象のロケーション（所在）を示すためのアドレスのみである。
このように，引用発明のアプリケーション生成システムは，ウェブアプリケーシ
ョンの利用，すなわち，ブログ等の既存のウェブアプリケーションにアクセスし，
その表示態様を指定して表示する機能を備えたネイティブアプリケーションを生成
するものであるから，表示したいウェブアプリケーションのロケーションを示すア
ドレスや，所望の背景画像のロケーションを示すアドレス等の簡単なパラメータを
ＧＵＩに入力するだけで，所望のウェブアプリケーションを表示するネイティブア
プリケーションを生成できるのである。
以上のように，引用発明のアプリケーション生成システムは，既存のウェブアプ
リケーションを利用して所望のコンテンツ（ブログ等）を表示するという機能に特
化した構成を備えている。
ウ 引用発明のアプリケーション生成システムで生成されたネイティブアプ
リケーションは，ブログ等の既存のウェブアプリケーションにアクセスできるだけ
であり，Ｗｅｂサーバ上のブログ等のコンテンツを書き換えるものではない。した
がって，仮に，設定情報にネイティブ機能（例えば，ＧＰＳ，加速度センサ等）を
実行するためのパラメータをＧＵＩを用いて簡単に設定できたとしても，携帯通信
端末で動作するのは表示機能に限定されたＷｅｂブラウザにすぎないから，
「携帯
通信端末に固有のネイティブ機能に応じて携帯通信端末の動きに伴う動作を行うネ
イティブアプリケーション」を容易に生成できるとはいえない。
したがって，当業者は，設定ファイルにネイティブ機能のパラメータをＧＵＩを
用いて簡単に設定することで，アプリを容易に生成するという課題を解決できるこ
とは当然に予測し得たということはできない。
エ(ｱ) 前記ア，
イのとおり，引用発明のアプリケーション生成システムは，既
存のウェブアプリケーションを利用しつつ所望の表示態様でコンテンツを表示する
という機能に特化した構成を備えているから，引用発明のアプリケーション生成シ
ステムを用いてネイティブアプリケーションを生成するためには，目的とするコン
テンツを有する既存のウェブアプリケーションが特定されなければならず，引用発
明に接した当業者が，ブログ，ショッピングサイト等のコンテンツを表示する既存
のウェブアプリケーションを利用するという目的を離れて，引用発明のアプリケー
ション生成システムを用いて「携帯通信端末の動きに伴う動作を行うアプリ」を生
成することはない。
また，前記ウのとおり，当業者は，引用発明のアプリケーション生成システムを
用いることにより「設定ファイルにネイティブ機能のパラメータをＧＵＩを用いて
簡単に設定することで，アプリを容易に生成するという課題を解決できる」とは考
えないから，引用発明のアプリケーション生成システムを用いて「携帯通信端末の
動きに伴う動作を行うアプリ」を生成することはない。
(ｲ) 仮に，
当業者が引用発明のアプリケーション生成システムを用いて
「携
帯通信端末の動きに伴う動作を行うアプリ」を生成しようと試みたとしても，その
際には，既存の「携帯通信端末の動きに伴う動作を行うウェブアプリケーション」
のロケーションを示すアドレスを取得する必要があるところ，
「携帯通信端末の動
きに伴う動作を行う」ためには，携帯通信端末の動きを検知して，その動きに応じ
て動作する機能を備えている必要があるが，ウェブアプリケーションを利用する際
に端末側で実行されるＷｅｂブラウザには，携帯通信端末の動きを検出する機能は
ないから，既存のウェブアプリケーションでは「携帯通信端末の動きに伴う動作を
行う」ことはできない。
(ｳ) したがって，当業者が引用発明のアプリケーション生成システムを用
いて「携帯通信端末の動きに伴う動作を行うアプリ」を生成することはない。
オ 引用発明の課題は，
「アプリケーションサーバにおいてネイティブアプ
リケーションを検索したユーザに，ＣＭＳにより開発したウェブアプリケーション
を利用してもらうこと」
（段落【０００５】
）と「ネイティブアプリケーションを容
易に生成することができるアプリケーション生成装置を提供すること」である（段
落【０００６】
，
【０００７】
）
。
本件審決は，ネイティブアプリケーションの設定ファイルにネイティブ機能のパ
ラメータを含む各種のパラメータが設定されることは周知技術
（以下
「周知技術１」
という。
）であるとし，また，携帯通信端末の動きに伴う動作を行うアプリ及び当該
アプリが利用するネイティブ機能のパラメータを設定ファイルに設定することは周
知技術（以下「周知技術２」という。
）であるとしている。
周知技術１は，ネイティブアプリケーションに，ネイティブ機能の実行を含む各
種の設定を行う場合には，設定ファイルにネイティブ機能のパラメータを含む各種
のパラメータを設定するという技術である。すなわち，周知技術１の課題は，
「ネイ
ティブアプリケーションにネイティブ機能の実行を含む各種の設定を行うこと」で
ある。
また，周知技術２は，設定ファイルにネイティブ機能のパラメータを設定するこ
とにより携帯通信端末の動きに伴う動作を行うアプリケーションである。
すなわち，
周知技術２の課題は，
「携帯通信端末の動きに伴う動作を行うアプリケーションを
提供すること」である。
このように，引用発明が解決しようとする課題と周知技術１及び周知技術２が解
決しようとする課題との間に共通性はない。
カ 前記ア～エのとおり，ネイティブアプリケーションの開発を行う当業者
は，
引用発明のアプリケーション生成システムを，
「携帯通信端末の動きに伴う動作
を行うアプリ」の生成に用いる動機はない。
また，前記オのとおり，引用発明が解決しようとする課題と周知技術（周知技術
からも，
引用発明のアプリケーション生成システムを，
「携帯通信端末の動きに伴う
動作を行うアプリ」の生成に用いる動機はない。
したがって，引用発明のアプリケーション生成システムを，上記周知の「携帯通
信端末の動きに伴う動作を行うアプリ」の生成に用いる動機はあるとした本件審決
の判断には誤りがある。
(2) 引用発明において，アプリケーションの設定ファイルを，
「アプリケーショ
ンの，携帯通信端末の動きに伴う動作を規定する設定ファイル」とし，当該設定フ
ァイルを設定するためのパラメータを，ＧＰＳや加速度センサのような携帯通信端
末の動きに伴う動作に関連したネイティブ機能を実行させるためのパラメータとす
ることは，当業者が容易に想到し得たことではないこと
ア 本件審決は，引用発明のアプリケーション生成システムを，携帯通信端
末の動き（携帯通信端末の移動や傾きなどの動き）に伴う動作を行うアプリケーシ
ョンの生成に用いることを前提にして，引用発明と周知技術１及び周知技術２を組
み合わせたが，前記(1)のとおり，携帯通信端末用のネイティブアプリケーションの
開発を行う当業者は，
引用発明のアプリケーション生成システムを用いて，
「携帯通
信端末の動きに伴う動作を行うアプリ」の生成を試みる動機はない。
イ 引用発明のアプリケーション生成システムにおいて，
「当該設定ファイ
ルを設定するためのパラメータ」
，
すなわちＧＵＩにて設定するパラメータを
「携帯
通信端末に固有のネイティブ機能を実行させるためのパラメータ」に置き換えてし
まうと，利用すべきウェブアプリケーションのロケーションを特定することができ
なくなり，引用発明が前提とする「ウェブアプリケーションを利用するネイティブ
アプリケーション」を生成することができなくなってしまう。
ウ このように，引用発明と上記各周知技術とを組み合わせる動機付けがな
く，また，引用発明と上記各周知技術の組合せに阻害要因があるが，本件審決の判
断は，この点を看過しており，誤りである。
(3) 本件補正発明の奏する作用効果は，引用発明と引用文献２～５及び参考文
献１に記載された周知技術の奏する作用効果から予測される範囲のものではなく，
格別顕著なものであること
本件補正発明の作用効果は，携帯通信端末に固有のネイティブ機能に応じて携帯
通信端末の動きに伴う動作を行うネイティブアプリケーションを，少ない開発負担
で生成することができるアプリケーション生成支援システムを提供できることであ
る。
前記(1)及び(2)のとおり，
引用発明と引用文献２～５及び参考文献１に記載された
周知技術とを組み合わせる動機がない以上，本件補正発明が奏する作用効果が予測
されるはずもない。仮に，それらを組み合わせることができたとしても，引用発明
が既存のウェブアプリケーションの利用を前提としている限り，既存のウェブアプ
リケーションでは実現し得ない動作，すなわち「携帯通信端末の動きに伴う動作」
を実現するネイティブアプリケーションを生成することまでは想定できない。
したがって，本件補正発明の奏する作用効果は，引用発明と引用文献２～５及び
参考文献１に記載された周知技術の奏する作用効果から予測される範囲のものでは
なく，格別顕著なものであるから，これと異なる本件審決の判断は，誤っている。
(4) 被告の主張について
ア 被告は，引用文献１の段落【０００５】
，
【０００６】の記載に基づき，
引用発明の課題は，ＣＭＳ（コンテンツ管理システム）によって構築したウェブア
プリケーションと同等の機能を有するネイティブアプリケーションを容易に開発し
て，アプリケーションサーバにおいてネイティブアプリケーションとして検索可能
とすることであると主張する。
しかし，段落【０００６】においては，
「ＣＭＳにより開発したウェブアプリケー
ションを利用してもらうことができないという問題」の解決手段として，ＣＭＳに
よって構築したウェブアプリケーションと同等の機能を有するネイティブアプリケ
ーションを新たに開発することは，適切ではないことを指摘しているのである。
引用文献１の段落【０００７】
，
【００２５】の記載からすると，引用発明は，ア
プリケーションサーバにおいてネイティブアプリケーションを検索したユーザに，
ＣＭＳにより開発したウェブアプリケーション（既存のウェブアプリケーション）
を利用してもらうことを前提とし，そのためのネイティブアプリケーションを（開
発という手段を採らずに）容易に生成することを課題としてされたものである。
イ 被告は，ＰｈｏｎｅＧａｐは，ＨＴＭＬやＪａｖａＳｃｒｉｐｔなどの
Ｗｅｂ系技術を用いてウェブアプリケーションを作る感覚で容易に作成可能であっ
て，Ａｐｐ Ｓｔｏｒｅ（アプリケーションサーバ）等で配布可能となるアプリを
作成可能なフレームワークであるから，引用発明の課題を解決する際に利用するに
は好適なフレームワークであると主張する。
しかし，ＰｈｏｎｅＧａｐは，あくまでＷｅｂ系技術を用いてネイティブアプリ
ケーションを新たに開発するためのフレームワークであり，目的とするネイティブ
アプリケーションを新たに開発するためには，ＨＴＭＬやＪａｖａＳｃｒｉｐｔ等
を用いてソースコード（プログラム）を書く必要があり，ＰｈｏｎｅＧａｐを用い
ることは，目的の機能を備えたネイティブアプリケーションを新たに開発する（新
たにソースコードを書く）ことに他ならない。
これに対し，引用発明は，既存のウェブアプリケーションを利用するためのネイ
ティブアプリケーションを容易に生成することを課題とするものであり，Ｐｈｏｎ
ｅＧａｐのようにソースコードを書くという面倒な作業を要することなく，利用し
たいウェブアプリケーションのアクセス先アドレス等の情報を入力するだけで，ネ
イティブアプリケーションを容易に生成することができるのである。
したがって，既存のアプリケーションを利用するのではなく，同等の機能を有す
るネイティブアプリケーションを新たに開発するための手段であるＰｈｏｎｅＧａ
ｐは，引用発明の課題を解決するものではないから，引用発明の課題を解決する際
に利用するに当たって好適なフレームワークではない。
ウ 被告は，当業者が引用発明を実装するに当たって，アプリ作成フレーム
ワークであるＰｈｏｎｅＧａｐを用いる動機付けがあると主張する。
しかし，被告は，引用発明の前提（既存のウェブアプリケーションを利用しても
らうこと）を看過し，引用発明の課題を誤って認定している。そして，誤って認定
した課題に基づいて，ウェブアプリケーションと同等の機能を有するネイティブア
プリケーションを新たに開発するために，ＰｈｏｎｅＧａｐが好適であるという誤
った結論に至っている。
引用発明は，既存のアプリケーションを利用するためのネイティブアプリケーシ
ョンを容易に生成する技術であるところ，ＰｈｏｎｅＧａｐは，Ｗｅｂ系技術を用
いて新たにソースコードを書くことにより，既存のアプリケーションと同等の機能
を有するネイティブアプリケーションを新たに開発するためのフレームワークであ
るから，ＰｈｏｎｅＧａｐを用いた場合，既存のウェブアプリケーションを利用す
ることはできない。
そして，既存のウェブアプリケーションを利用することができない技術を，既存
のアプリケーションを利用する技術に適用することはできないから，引用発明に対
してＰｈｏｎｅＧａｐを適用するには，阻害要因がある。
また，引用発明に対してＰｈｏｎｅＧａｐを適用したとすると，目的とするネイ
ティブアプリケーションのソースコードを新たに書くという作業が発生するから，
引用発明の課題である既存のウェブアプリケーションを利用するためのネイティブ
アプリケーションを容易に生成することが達成できなくなってしまう。この観点か
らも，当業者が引用発明を実装するに当たって，アプリ作成フレームワークである
ＰｈｏｎｅＧａｐを用いる動機付けはない。
エ 被告は，スマートフォンでは端末が縦の姿勢のときと，横の姿勢のとき
で画面が切り替わることは「携帯通信端末の動きに伴う動作」に他ならず，
「横画面
に固定する設定」
や
「縦画面に固定する設定」
は，
いずれも，
「アプリケーションの，
携帯通信端末の動きに伴う動作」を規定するものであるといえ，Ａｎｄｒｏｉｄに
おける，ＡｎｄｒｏｉｄＭａｎｉｆｅｓｔ．ｘｍｌファイルは「アプリケーション
の，携帯通信端末の動きに伴う動作」を規定する設定ファイルに相当するものであ
るといえると主張する。
しかし，ＰｈｏｎｅＧａｐの「横画面に固定する設定」や「縦画面に固定する設
定」は，あくまで携帯通信端末の動きにかかわらず，単に横画面又は縦画面に一律
に画面の方向を固定するものであるから，
「携帯通信端末の動きに伴う動作」
を規定
するものではない。
オ 被告は，引用発明のウェブアプリケーションは，ＨＴＭＬやＪａｖａＳ
ｃｒｉｐｔで記述されているところ，ＪａｖａＳｃｒｉｐｔは，Ｗｅｂブラウザで
実行される制御コードを記述するためのスクリプト言語であるから，コンテンツを
既存のウェブサイトから取得しているとしても，当該コンテンツに対する制御処理
は端末側で実行されるＷｅｂブラウザにおいて，ＪａｖａＳｃｒｉｐｔに従って行
われているといえ，したがって，引用発明は，既存のウェブアプリケーションを利
用して所望のコンテンツ（ブログ等）を表示するという機能に特化したものとはい
えないと主張する。
しかし，本件審決において認定された引用発明は，ウェブアプリケーションがＨ
ＴＭＬやＪａｖａＳｃｒｉｐｔで記述されていること，及び，既存のウェブサイト
から取得したコンテンツに対する制御処理が端末側で実行されるＷｅｂブラウザに
おいてＪａｖａＳｃｒｉｐｔに従って行われていることを構成として有していない
から，被告の上記主張は，本件審決において認定された引用発明に基づかないもの
であり，失当である。
本件審決において認定された引用発明は，
「ここで，
生成されたネイティブアプリ
ケーションは，携帯端末にインストールされて実行されると，設定情報に含まれて
いるウェブアプリケーションのアドレスに基づいて，ウェブアプリケーションに対
応するウェブページを取得し，設定情報に含まれている表示態様情報に基づいて取
得したウェブページの表示態様を変更して，携帯端末の表示部に表示させるもので
あり」という構成を有しており，ウェブアプリケーションに対応するウェブページ
を取得して表示することが特定されているのみである。
カ 被告は，ＰｈｏｎｅＧａｐは，引用発明と同様に，ＨＴＭＬやＪａｖａ
Ｓｃｒｉｐｔ等で記述されたウェブアプリケーションからスマートフォン用アプリ
を生成可能であると主張する。
しかし，ＰｈｏｎｅＧａｐは，ＨＴＭＬやＪａｖａＳｃｒｉｐｔといったＷｅｂ
系技術を用いて目的とするネイティブアプリケーションのソースコード（プログラ
ム）を，開発者が自ら新規に書かなければならない。ＰｈｏｎｅＧａｐは，既存の
ウェブアプリケーションからネイティブアプリケーションを容易に生成する技術で
はなく，一般的なＷｅｂ系技術を用いて，ネイティブアプリケーションをプログラ
ミングすることが可能な技術にすぎない。
キ 被告は，ＰｈｏｎｅＧａｐは，設定ファイル（ＡｎｄｒｏｉｄＭａｎｉ
ｆｅｓｔ．ｘｍｌなど）にネイティブ機能（端末の加速度センサを用いた画面の回
転制御）の制御内容を規定するためのパラメータ（ｌａｎｄｓｃａｐｅやｐｏｒｔ
ｒａｉｔ）を設定していると主張する。
しかし，
前記エのとおり，
ＰｈｏｎｅＧａｐにおける
「横画面に固定する設定
（ｌ
ａｎｄｓｃａｐｅ）
」や「縦画面に固定する設定（ｐｏｒｔｒａｉｔ）
」は，携帯通
信端末の動きとは無関係に設定されるものであり，
「携帯通信端末の動きに伴う動
作」を規定するものではない。
ク 被告は，引用発明のアプリケーション生成システムにＰｈｏｎｅＧａｐ
を適用する場合には，
「当該設定ファイルを設定するためのパラメータ」を「携帯通
信端末に固有のネイティブ機能を実行させるためのパラメータ」に置き換えてしま
うのではなく，ウェブサーバで提供されるコンテンツにアクセスする際に使用され
る「当該設定ファイルを設定するためのパラメータ」とは別の「携帯通信端末に固
有のネイティブ機能を実行させるためのパラメータ」を追加設定するだけであるか
ら，引用発明が前提とする「ウェブアプリケーションを利用するネイティブアプリ
ケーション」を生成することができなくなることはないと主張する。
しかし，
被告は，
「携帯通信端末に固有のネイティブ機能を実行させるためのパラ
メータ」を具体的にどのように追加するのか立証していないから，被告の上記主張
は根拠がない。
ケ 被告は，一般的なウェブサイト表示用のウェブアプリケーションは，加
速度センサを備えたスマートフォン等の端末では，加速度センサによって検出した
端末の姿勢に基づいて，
端末の姿勢に基づいた画面回転表示制御を行っているから，
一般的なウェブサイト表示用のウェブアプリケーションにおいても，
「携帯通信端
末の動きに伴う動作」
（端末の姿勢に基づいた画面回転表示制御）
を実現することが
可能であると主張する。
しかし，端末の姿勢は，あくまで端末に備えられた加速度センサで検出するもの
であるから，サーバ側で動作するウェブアプリケーションにおいては，端末側の姿
勢を知る由もない。端末の姿勢に基づいた画面回転表示制御は，ウェブアプリケー
ションの機能ではなく，端末側の機能にすぎない。
したがって，一般的なウェブサイト表示用のウェブアプリケーションにおいて，
「携帯通信端末の動きに伴う動作」
（端末の姿勢に基づいた画面回転表示制御）
を実
現することは可能であるとする被告の上記主張は，誤りである。
本件補正前発明についても，引用発明において，アプリケーションの設定ファイ
ルを，
「アプリケーションの動作を規定する設定ファイル」に変更し，当該設定ファ
イルを設定するためのパラメータを，ＧＰＳや加速度センサのような携帯通信端末
に固有のネイティブ機能を実行させるためのパラメータに変更することには，阻害
要因があり，引用発明と引用文献２～５及び参考文献１に記載された周知技術とを
組み合わせることはできない。
したがって，本件補正前発明は，当業者が引用発明と引用文献２～５及び参考文
献１に記載された周知技術に基づいて容易に想到し得たものではない。
第４ 被告の主張
(1) 周知技術であるＰｈｏｎｅＧａｐの概要
引用文献３（６６頁表題，６６頁副題，６６頁中欄下から２行～右欄３行，６６
頁表１，６６頁右欄１３行～６７頁左欄１３行，７０頁右欄６行～最終行，７２頁
左欄１行～２５行）
，引用文献５（１６頁左欄７行～２７行，２９頁左欄１行～１６
行，
，
三宅理
「スマートフォン開発倶楽部第５回」
ＷＥＢ＋ＤＢ ＰＲＥＳＳ Ｖｏｌ．６６（株式会社技術評論社，平成２４年１月
（以下「乙３文献」という。甲７，乙３）
（５５頁左欄１０行～１４行，
技術のＰｈｏｎｅＧａｐは以下のような技術であるといえる。
「ｉＰｈｏｎｅやＡｎｄｒｏｉｄ，ＷｉｎｄｏｗｓＰｈｏｎｅなどのマルチプラ
ットホームに対応するアプリを作成可能なフレームワークであって，
ＨＴＭＬやＪａｖａＳｃｒｉｐｔなどのＷｅｂ系技術を用いてＷｅｂアプリを作
る感覚で作成可能であり，
ＪａｖａＳｃｒｉｐｔでＰｈｏｎｅＧａｐのＡＰＩ（ライブラリの関数）を呼び
出せば，プラグインの仕組みを使って，カメラやＧＰＳなど端末のネイティブ部分
にアクセス可能であり，
端末のＧＰＳ機能にアクセスすることで，ＧＰＳで取得した端末の現在位置が中
心となるように地図を表示することが可能となり，
スマートフォンでは加速度センサを用いて端末の姿勢を検知し，端末が縦の姿勢
のときと，横の姿勢のときで画面が切り替わるところ，横画面に固定する設定を施
す場合，Ａｎｄｒｏｉｄでは，ＡｎｄｒｏｉｄＭａｎｉｆｅｓｔ．ｘｍｌに「ａｎ
ｄｒｏｉｄ：ｓｃｒｅｅｎＯｒｉｅｎｔａｔｉｏｎ ＝”ｌａｎｄｓｃａｐｅ”
」の
ｉＯＳでは，
「Ｌａｎｄｓｃａｐｅ Ｒｉｇｈｔ」
または
「Ｌ
ａｎｄｓｃａｐｅ Ｌｅｆｔ」のアイコンを選択することで横画面に固定可能とな
り，縦画面に固定する設定を施す場合，Ａｎｄｒｏｉｄでは，ＡｎｄｒｏｉｄＭａ
ｎｉｆｅｓｔ．ｘｍｌに「ａｎｄｒｏｉｄ：ｓｃｒｅｅｎＯｒｉｅｎｔａｔｉｏｎ
＝”ｐｏｒｔｒａｉｔ”
」の１行を追加することで，ｉＯＳでは，
「ｐｏｒｔｒａｉ
ｔ」のアイコンを選択することで，縦画面に固定可能となり，
作成されたアプリの実体はブラウザＵＩで動くアプリであって，Ａｐｐ Ｓｔｏ
ｒｅ等で配布可能となるアプリを作成可能なフレームワークであるＰｈｏｎｅＧａ
ｐ」
(2) 引用発明への周知技術のＰｈｏｎｅＧａｐの適用
ア 動機付け
引用文献１の段落【０００４】～【０００７】によると，引用発明の課題は，Ｃ
ＭＳ（コンテンツ管理システム）によって構築したウェブアプリケーションと同等
の機能を有するネイティブアプリケーションを容易に開発して，アプリケーション
サーバにおいてネイティブアプリケーションとして検索可能とすることであるとい
える。
ここで，ＰｈｏｎｅＧａｐは，ＨＴＭＬやＪａｖａＳｃｒｉｐｔなどのＷｅｂ系
技術を用いてＷｅｂアプリ（ウェブアプリケーション）を作る感覚で容易に作成可
能であって，Ａｐｐ Ｓｔｏｒｅ（アプリケーションサーバ）等で配布可能となる
アプリ（Ａｐｐ Ｓｔｏｒｅ等で配布可能となれば，アプリケーションサーバ（Ａ
ｐｐ Ｓｔｏｒｅ等）
においてネイティブアプリケーションとして検索可能となる）
を作成可能なフレームワークであるから，引用発明の課題を解決する際に利用する
には好適なフレームワークであるといえる。
したがって，当業者が引用発明を実装するに当たって，アプリ作成フレームワー
クであるＰｈｏｎｅＧａｐを用いる動機付けがあるといえる。
イ(ｱ) ＰｈｏｎｅＧａｐでは，ＪａｖａＳｃｒｉｐｔでＰｈｏｎｅＧａｐの
ＡＰＩ（ライブラリの関数）を呼び出せば，プラグインの仕組みを使って，ＧＰＳ
など端末のネイティブ部分にアクセス可能であり，端末のＧＰＳ機能にアクセスす
ることで，ＧＰＳで取得した端末の現在位置が中心となるように地図を表示するこ
とが可能となるから，
引用発明において地図表示アプリケーションを生成する際に，
ＰｈｏｎｅＧａｐのフレームワークを採用することで，ネイティブ機能であるＧＰ
Ｓ機能が利用可能となり，携帯通信端末の動き（移動）に伴う動作（ＧＰＳで取得
した端末の現在位置が中心となるように地図を表示する地図表示制御）を設定可能
となる。
(ｲ) また，スマートフォンでは，ネイティブ機能である加速度センサから
取得した値を用いて端末姿勢を検出しており，端末が縦の姿勢のときと，横の姿勢
のときで画面が切り替わるところ，ＰｈｏｎｅＧａｐでは，横画面に固定する設定
を施す場合，
Ａｎｄｒｏｉｄでは，
ＡｎｄｒｏｉｄＭａｎｉｆｅｓｔ．
ｘｍｌに
「ａ
ｎｄｒｏｉｄ：ｓｃｒｅｅｎＯｒｉｅｎｔａｔｉｏｎ ＝”ｌａｎｄｓｃａｐｅ”
」
の１行を追加することで，
ｉＯＳでは，
「Ｌａｎｄｓｃａｐｅ Ｒｉｇｈｔ」
又は
「Ｌ
ａｎｄｓｃａｐｅ Ｌｅｆｔ」のアイコンを選択することで横画面に固定可能とな
り，縦画面に固定する設定を施す場合，Ａｎｄｒｏｉｄでは，ＡｎｄｒｏｉｄＭａ
ｎｉｆｅｓｔ．ｘｍｌに「ａｎｄｒｏｉｄ：ｓｃｒｅｅｎＯｒｉｅｎｔａｔｉｏｎ
＝”ｐｏｒｔｒａｉｔ”
」の１行を追加することで，ｉＯＳでは，
「ｐｏｒｔｒａｉ
ｔ」のアイコンを選択することで，縦画面に固定可能となる。
ここで，
「スマートフォンでは端末が縦の姿勢のときと，
横の姿勢のときで画面が
切り替わる」ことは「携帯通信端末の動きに伴う動作」に他ならず，
「横画面に固定
する設定」や「縦画面に固定する設定」は，いずれも，
「アプリケーションの，携帯
通信端末の動きに伴う動作」を規定するものであるといえ，Ａｎｄｒｏｉｄにおけ
る，ＡｎｄｒｏｉｄＭａｎｉｆｅｓｔ．ｘｍｌファイルは「アプリケーションの，
携帯通信端末の動きに伴う動作」を規定する「設定ファイル」に相当するものであ
るといえる。
ウ したがって，引用発明において，アプリケーションを生成する際に，Ｐ
ｈｏｎｅＧａｐのフレームワークを利用することで，
本件補正発明と同様に，
「携帯
通信端末に固有のネイティブ機能を実行させるためのパラメータ」に応じて，携帯
通信端末において実行される「アプリケーションの，携帯通信端末の動きに伴う動
作」を規定する「設定ファイル」を備えることとなる。
(3) 本件補正発明の作用効果について
地図表示のウェブアプリケーションは，ＧＰＳ機能を備えた端末では，ＧＰＳ機
能を用いて現在位置を取得し，現在位置を中心とした地図表示を行うことが可能で
あるから，
地図表示のウェブアプリケーションにおいても，
「携帯通信端末の動きに
伴う動作」
（端末の移動に伴って変化する現在位置を中心とした地図表示制御）
を実
現することが可能である（乙４の１３０頁～１３４頁）
。
また，一般的なウェブサイト表示用のウェブアプリケーションは，加速度センサ
を備えたスマートフォン等の端末では，加速度センサによって検出した端末の姿勢
に基づいて，端末の姿勢に基づいた画面回転表示制御を行っているから，一般的な
ウェブサイト表示用のウェブアプリケーションにおいても，
「携帯通信端末の動き
に伴う動作」
（端末の姿勢に基づいた画面回転表示制御）
を実現することが可能であ
る。
したがって，引用発明にＰｈｏｎｅＧａｐを組み合わせることで，これらのウェ
ブアプリケーションから「携帯通信端末の動きに伴う動作」を実現するネイティブ
アプリケーションを生成することが想定可能であるといえるから，本件補正発明の
作用効果は格別なものではない。
(4) 原告の主張について
ア 原告は，引用発明は，既存のウェブアプリケーションを利用して所望の
コンテンツ（ブログ等）を表示するという機能に特化したものであると主張する。
しかし，引用文献１の段落【００２４】によると，引用発明のウェブアプリケー
ションが，ＨＴＭＬやＪａｖａＳｃｒｉｐｔで記述されており，引用発明のウェブ
アプリケーションの例として，
ブログだけでなく，
ゲームサイト等も示されている。
ここで，ＪａｖａＳｃｒｉｐｔは，Ｗｅｂブラウザで実行される制御コードを記
述するためのスクリプト言語である（乙４の２６頁下から４行～最終行）から，コ
ンテンツを既存のウェブサイトから取得しているとしても，当該コンテンツに対す
る制御処理は端末側で実行されるＷｅｂブラウザにおいて，ＪａｖａＳｃｒｉｐｔ
に従って行われているといえる。
ウェブアプリケーションのゲームでは，
一般的に，
ユーザからの操作入力を受け付けて，ＪａｖａＳｃｒｉｐｔにより記述された制御
コードを端末側で実行することでインタラクティブな制御処理を可能としている。
したがって，引用発明は，既存の「ウェブアプリケーション」を利用して所望の
コンテンツ（ブログ等）を表示するという機能に特化したものとはいえないから，
原告の上記主張は誤りである。
イ 原告は，設定ファイルにネイティブ機能のパラメータをＧＵＩを用いて
簡単に設定することで，アプリを容易に生成するという課題を解決できることは当
然に予測し得たものでないと主張する。
しかし，前記(1)のとおり，ＰｈｏｎｅＧａｐは，引用発明と同様に，ＨＴＭＬや
ＪａｖａＳｃｒｉｐｔ等で記述されたウェブアプリケーションからスマートフォン
用アプリを生成可能であり，端末のブラウザＵＩ（Ｗｅｂブラウザ）に，スマート
フォンのネイティブ機能（ＧＰＳやカメラなど）にアクセスするためのＪａｖａＳ
ｃｒｉｐｔ関数を実行させることで，プラグインの仕組みを使って，スマートフォ
ンのネイティブ機能（ＧＰＳやカメラなど）にアクセス可能となる。また，設定フ
ァイル（ＡｎｄｒｏｉｄＭａｎｉｆｅｓｔ．ｘｍｌなど）にネイティブ機能（端末
の加速度センサを用いた画面の回転制御）の制御内容を規定するためのパラメータ
（パラメータｌａｎｄｓｃａｐｅやｐｏｒｔｒａｉｔ）を設定している。
したがって，引用発明にＰｈｏｎｅＧａｐを適用することにより，設定ファイル
にネイティブ機能のパラメータをＧＵＩを用いて簡単に設定することで，アプリを
容易に生成するという課題を解決できることは当然に予測し得たものであるといえ
るから，原告の上記主張は誤りである。
ウ 原告は，
引用発明のアプリケーション生成システムにおいて，
「当該設定
ファイルを設定するためのパラメータ」
すなわちＧＵＩにて設定するパラメータを，
「携帯通信端末に固有のネイティブ機能を実行させるためのパラメータ」に置き換
えてしまうと，利用すべきウェブアプリケーションのロケーションを特定すること
ができなくなり，引用発明が前提とする「ウェブアプリケーションを利用するネイ
ティブアプリケーション」を生成することができなくなってしまうから，引用発明
と上記各周知技術との組合せに阻害要因がある旨主張する。
しかし，引用発明のアプリケーション生成システムにＰｈｏｎｅＧａｐを適用す
る場合には，
「当該設定ファイルを設定するためのパラメータ」を「携帯通信端末に
固有のネイティブ機能を実行させるためのパラメータ」に置き換えてしまうのでは
なく，ウェブサーバで提供されるコンテンツにアクセスする際に使用される「当該
設定ファイルを設定するためのパラメータ」とは別の「携帯通信端末に固有のネイ
ティブ機能を実行させるためのパラメータ」を追加設定するだけであるから，引用
発明が前提とする「ウェブアプリケーションを利用するネイティブアプリケーショ
ン」を生成することができなくなることはない。
したがって，原告の上記主張は誤りである。
前記１(4)ウのとおり，引用発明のアプリケーション生成システムとＰｈｏｎｅＧ
ａｐとの組合せに阻害要因はないから，本件補正前の発明は，当業者が引用発明と
引用文献２～５及び参考文献１等に記載された周知技術に基づいて容易に想到し得
たものである。
したがって，本件審決における，本件補正前発明についての容易想到性の判断に
誤りはない。
第５ 当裁判所の判断
本件明細書には，以下の記載がある（甲９の１・３）
。
【技術分野】
【０００１】本発明は，アプリケーション生成支援システムおよびア
プリケーション生成支援プログラムに関する。
【背景技術】
【０００２】モバイル用通信端末のアプリケーションとして，さまざ
まなアプリケーションが開発されている。モバイル用通信端末のアプリケーション
は，Ｗｅｂアプリケーション，ネイティブアプリケーション，およびハイブリッド
アプリケーションに分類される。Ｗｅｂアプリケーションは，演算処理をネットワ
ーク上のサーバで実行するタイプのアプリケーションである。ネイティブアプリケ
ーションは，演算処理を通信端末上でのみ実行するタイプのアプリケーションであ
る。ネイティブアプリケーションは，例えば，カメラ，ＧＰＳ，マイク，加速度セ
ンサなど，通信端末に固有のネイティブ機能を利用することができる，という特徴
を有するアプリケーションである。ハイブリッドアプリケーションは，ネイティブ
機能を利用することができ，マルチプラットフォームに対応したアプリケーション
を作成することができ，アプリケーションをｗｅｂブラウザのように使用するＷｅ
ｂ Ｖｉｅｗを用いることができるという特徴を有するアプリケーションである。
【０００３】上記のように，ハイブリッドアプリケーションは，Ｗｅｂアプリケ
ーションおよびネイティブアプリケーションのそれぞれの利点を備えるため，通信
端末用アプリケーションの主流となっている。例えば，業務用の通信端末に用いら
れるアプリケーションとしてもハイブリッドアプリケーションが広く用いられる。
業務用のハイブリッドアプリケーションを作成するためには，業務を行う各組織に
おいて業務目的に適したアプリケーションの開発を行う必要がある。
【０００４】ここで，アプリケーションを開発するためには，アプリケーション
をインストールする通信端末のＯＳに適合した専用端末を準備し，当該ＯＳに適し
たアプリケーション開発ツールを導入し，当該アプリケーション開発ツールにおけ
るプログラミング言語を用いたアプリケーション開発をする必要がある。このよう
に，アプリケーション開発のためには，専用端末の準備およびアプリケーション開
発ツールの導入などのアプリケーション開発環境の整備，ならびにプログラミング
言語などのスキル習得などの多様な初期投資が必要である。
【０００５】プログラミング言語のスキル習得の負担を軽減するために，プログ
ラム開発を支援するための技術が開発されている。例えば，プログラム開発をより
簡易化するために，特許文献１のようなプログラム開発装置が提案されている。
【発明が解決しようとする課題】
【０００７】
しかしながら，
通信端末上で動作し，
通信端末の動作に合わせて動作または画面表示するアプリケーションを作成するた
めには特許文献１に記載された技術に比べてはるかに高度なプログラミング技術が
必要である。さらに，アプリケーションの用途に応じて多様な機能をアプリケーシ
ョンに組み込む必要があるため，上記のような通信端末上で動作するアプリケーシ
ョンの開発のために，アプリケーション開発者に費用および時間の面で大きな負担
がかかる。
【０００８】本発明は，上記実情に鑑み，アプリケーション開発者への開発負担
を軽減することができるアプリケーション生成支援システムおよびアプリケーショ
ン生成支援プログラムを提供することを目的とする。
【課題を解決するための手段】
【０００９】
本発明の一実施形態に係るアプリケー
ション生成支援システムは，通信端末の動作に関連するパラメータに応じてアプリ
ケーションの動作を規定する設定ファイルを設定する設定部と，前記設定ファイル
に基づいてアプリケーションパッケージを生成する生成部と，を有する。
【００２０】前記設定ファイルは，前記通信端末に固有のネイティブ機能を前記
通信端末に実行させるプラグインファイルを含んでもよい。
【００３７】前記設定ファイルは，前記通信端末に固有のネイティブ機能を前記
通信端末に実行させるプラグインファイルを含んでもよい。
【００４３】本発明によれば，アプリケーション開発者への開発負担を軽減する
ことができるアプリケーション生成支援システムおよびアプリケーション生成支援
プログラムを提供することができる。
【発明を実施するための形態】
〈第 1 実施形態〉
【００６２】
・・・端末通信部３３
（Ｇｌｏｂａｌ Ｐｏｓｉｔｉｏｎｉｎｇ Ｓｙｓｔｅｍ
；
ＧＰＳ）機能を有していてもよい。ＧＰＳ機能は第２通信端末３００のネイティブ
機能の一つである。ＧＰＳ機能を有効にするアプリケーションを起動すると，端末
通信部３３０は上空の衛星からの信号を受信し，第２通信端末３００の現在位置を
知ることができる。
【００６４】カメラ３５０は，ディスプレイ３４０と反対側に設けられている。
つまり，ディスプレイ３４０が設けられた側を表面とすると，カメラ３５０は裏面
に設けられている。なお，カメラ３５０とは別個のカメラが表面に設けられていて
もよい。カメラ３５０は，レンズユニットおよび撮像素子を有している。カメラ３
機能を有効にするアプリケーションを起動すると，レンズユニットを介して撮像素
子で検知される映像がディスプレイ３４０に表示される。この映像が撮像素子で検
知されている間にユーザによって作動指示が入力されると，端末制御部３２０は，
その作動指示に応じて撮像素子で検知された映像の静止画像を取得する。
【０１０１】
「ＬＡＮＤＳＣＡＰＥ＿ＬＥＦＴ」
，
「ＬＡＮＤＳＣＡＰＥ＿ＲＩＧＨ
Ｔ」は，第２通信端末３００を左横，右横に回転した場合の画面制御を指定する項
目である。これらの項目では，第２通信端末３００の画面を左横，右横に回転した
ときに，第２通信端末３００の画面上でアプリケーションを正面表示させるか否か
をチェックの有無で設定される。
【０１０２】
「ＰＯＲＴＲＡＩＴ＿ＵＰＳＩＤＥ＿ＤＯＷＮ」は，第２通信端末３
第２通信端末３００の画面を上下逆さに回転したときに，第２通信端末３００の画
面上でアプリケーションを正面表示させるか否かをチェックの有無で設定される。
【０１０３】
「ＡＰＰ＿ＳＴＡＲＴ＿ＰＡＧＥ＿ＵＲＬ」は，アプリケーションの
スタートページとして指定されるＷｅｂページのＵＲＬを指定する項目である。こ
の項目では，アプリケーションを起動したときに表示されるＷｅｂページのＵＲＬ
を設定するための文字列が設定される。この項目では，ＵＲＬを表示するために，
『ｈｔｔｐ：／／』や『ｈｔｔｐｓ：／／』などの規定の形式の文字列が設定され
る。
【０１０４】
「ＡＰＰＬＩＣＡＴＩＯＮ＿ＰＬＩＳＴ」は，アプリケーション設定
ファイルを指定する項目である。この項目では，アプリケーションに搭載したいア
プリケーション設定ファイルを設定し，当該設定ファイルをサーバ１００にアップ
ロードする。
「ＡＰＰＬＩＣＡＴＩＯＮ＿ＰＬＩＳＴ」
において設定されるアプリケ
ーション設定ファイルは，第１通信端末２００を操作する第１ユーザによって作成
された設定ファイルであってもよく，他の第３ユーザによって作成された設定ファ
イルであってもよい。
【０１０９】図１０は，本発明の一実施形態に係るアプリケーション生成支援シ
ステムのパラメータチェックのシーケンスを説明する図である。図１０に示すよう
に，ステップ５２１で受信されたパラメータのチェックが行われる（ステップ５２
。ステップ５２３１では，例えば，設定されたパラメータの形式が規定の形式
に適合しているか否か，およびアプリケーション設定ファイルの形式が規定の形式
に適合しているか否かなどの設定状態がチェックされる。図８および図９に示した
例では，
「ＡＰＰ＿ＳＴＡＲＴ＿ＰＡＧＥ＿ＵＲＬ」に入力されたＵＲＬが『ｈｔｔ
ｐ：／／』または『ｈｔｔｐｓ：／／』の形式になっているか否かがチェックされ
る。同様に，
「ＡＰＰＬＩＣＡＴＩＯＮ＿ＰＬＩＳＴ」でアプリケーション設定ファ
イルが規定のファイル形式になっているか否かがチェックされる。また，詳細は後
述するが，アプリケーションに搭載される機能として第２通信端末３００のネイテ
ィブ機能に関連するプラグインファイルが規定のファイル形式になっているか否か
がチェックされる。
【０１１５】図１３は，本発明の一実施形態に係るアプリケーション生成支援シ
ステムの設定ファイルの一例を説明する図である。図１３の「アイコン指定」
，
「ア
プリケーション名指定」
，および「画面の回転制御指定」はＯＳ設定ファイルに該当
する。
つまり，
図８および図９の
「ＣＦＢＵＮＤＬＥ＿ＤＩＳＰＬＡＹ＿ＮＡＭＥ」
，
「ＩＮＦＯ＿ＣＦＢＵＮＤＬＥ＿ＶＥＲＳＩＯＮ」
，
「ＬＡＮＤＳＣＡＰＥ＿ＬＥＦ
Ｔ」
，
「ＰＯＲＴＲＡＩＴ＿ＵＰＳＩＤＥ＿ＤＯＷＮ」
，および「ＬＡＮＤＳＣＡＰＥ
＿ＲＩＧＨＴ」はＯＳ設定ファイルに該当する。これらのＯＳ設定ファイルに係る
動作は，複数の第２通信端末３００に共通する動作である。図１３の「アドレスバ
ー表示」
，
「画面のコピー＆ペースト制御」
，
「通信プロトコル制限」
，
「無操作タイム
アウト指定」
，
「シングルサインオン設定」
，および「バックボタンの利用制限」はア
プリケーション設定ファイルに該当する。つまり，上記の項目は「ＡＰＰＬＩＣＡ
ＴＩＯＮ＿ＰＬＩＳＴ」の一例である。これらのアプリケーション設定ファイルに
係る動作は，第１通信端末２００によって入力された第２通信端末３００の動作で
あり，複数の第２通信端末３００に共通する動作であってもよく，特定の第２通信
端末３００に固有の動作であってもよい。
【０１１６】換言すると，本実施形態の設定ファイルは，ＯＳ設定ファイルおよ
びアプリケーション設定ファイルを含む。ＯＳ設定ファイルは，ビルドシェル１５
プリケーションの動作を規定する設定ファイルである。アプリケーション設定ファ
イルは，ビルドシェル１５０が受信したパラメータに関連し，第１通信端末２００
を操作する第１ユーザによって入力された情報に基づくアプリケーションの動作を
規定する設定ファイルである。なお，図１３に示すＯＳ設定ファイルおよびアプリ
ケーション設定ファイルは一例であり，本発明の「ＡＰＰＬＩＣＡＴＩＯＮ＿ＰＬ
ＩＳＴ」を限定するものではない。
〈第３実施形態〉
【０１３５】
［サーバ１００Ｂの機能構成］本実施形態のアプリ
ケーション生成支援システム１０Ｂにおけるサーバ１００Ｂの各機能の構成は，第
してサーバ１００Ｂの機能部について説明する。アプリケーション生成支援システ
ム１０Ｂのビルドシェル１５０Ｂに含まれるファイル設定部１５５Ｂは，ＯＳ設定
ファイルおよびアプリケーション設定ファイルに加えて，第２通信端末３００Ｂの
ネイティブ機能に関連するプラグインファイルを設定する点において，第１実施形
態のファイル設定部１５５とは相違する。ファイル設定部１５５Ｂは，パラメータ
受信部１５１Ｂが受信したパラメータにプラグインファイルに関連するパラメータ
が設定されている場合に，ＯＳ設定ファイルやアプリケーション設定ファイルと同
様にプラグインファイルを設定する。
【０１３６】ファイル設定部１５５Ｂは，図６に示すように，パラメータ確認部
形態のテンプレート関連付け部１５５３と同様の機能に加え，プラグインファイル
用のテンプレートをパラメータ確認部１５５１Ｂによって選択された他のテンプレ
ートに関連付ける。プログラム更新部１５５５Ｂは，第１実施形態のプログラム更
新部１５５５と同様の機能に加え，プラグインファイル用のテンプレートによって
規定された動作の各々が，第２通信端末３００にインストールされたアプリケーシ
ョン上で実現可能となるように，当該テンプレートの一部を更新する。
【０１３７】上記のように，プラグインファイルは，例えば，カメラ，ＧＰＳ，
マイク，加速度センサなど，第２通信端末３００Ｂの機器に固有のネイティブ機能
をアプリケーションによって第２通信端末３００Ｂに実行させるための設定ファイ
ルである。プラグインファイルは，ＯＳ設定ファイルおよびアプリケーション設定
ファイルと同様に，ビルドシェル１５０Ｂが受信したパラメータに関連する設定フ
ァイルである。
【０１３９】
［アプリケーション生成支援システム１０Ｂの動作フロー］
図１７～
図２１を用いて，本実施形態のアプリケーション生成支援システム１０Ｂの各機能
ブロックの動作について，フローチャートおよびユーザに表示されるインターフェ
ースの一例を用いて詳しく説明する。
【０１４０】まず，図１７～図１９を用いて，第１通信端末２００Ｂによって設
定されたパラメータに基づいてアプリケーションを生成し，当該アプリケーション
をダウンロード可能に提供する動作について説明する。図１７は，本発明の一実施
形態に係るアプリケーション生成支援システムのアプリケーション生成動作を示す
フローチャートである。図１７のフローチャートは図７のフローチャートと類似し
ているが，図１７のフローチャートでは，ステップ５２７Ｂとステップ５２９Ｂと
の間にプラグインファイルを設定するステップ５２８Ｂが設けられている点におい
て，図７のフローチャートとは相違する。また，ステップ５２８Ｂが設けられてい
ることに伴い，ステップ５１１Ｂで第１通信端末２００Ｂに提供されるインターフ
ェース６００Ｂが図８のインターフェース６００とは相違する。以下の説明におい
て，図７の動作フローと同じ動作については説明を省略し，図７の動作フローと異
なる動作について説明する。
【０１４１】まず，図１７のステップ５１１Ｂで第１通信端末２００Ｂに提供さ
れるパラメータ設定ＧＵＩについて説明する。図１８は，本発明の一実施形態に係
るアプリケーション生成支援システムのパラメータ入力動作におけるインターフェ
ースである。図１８に示すインターフェース６００Ｂは図８のインターフェース６
「ＡＰＰＬＩＣＡＴＩＯＮ＿ＰＬＩＳＴ」の下に「ＰＬＵＧＩＮ＿ＦＩＬＥＳ」が
設けられている点において，図８のインターフェース６００とは相違する。
【０１４２】
「ＰＬＵＧＩＮ＿ＦＩＬＥＳ」
の入力欄６３０Ｂはプラグインファイ
ル用のテンプレートが格納された位置を示すアドレスを受け付ける。この入力欄６
ユーザが直接アドレスを入力してもよく，
ブランクボックスの右の
「参
照」をクリックすることで，参照するアドレスを指定してもよい。なお，プラグイ
ンファイル用のテンプレートは，指定されたアドレスに圧縮ファイル形式で格納さ
れている。ただし，当該ファイルは圧縮ファイル形式以外の形式で格納されていて
もよい。
【０１４５】図１７に示すように，ステップ５２７Ｂのアプリケーション設定フ
ァイルの上書き処理に続いて，プラグインファイルの設定が行われる（ステップ５
。
プラグインファイルの設定は，
ＯＳ設定ファイルの置換およびアプリケー
ション設定ファイルの上書き処理と同様に，設定ファイルを更新するという場合が
ある。ここで，ステップ５２８Ｂにおいて，プラグインファイルの設定するシーケ
ンスについて図１９を用いて説明する。
【図１】
【図１０】
【図１３】
【図１７】
【図１８】
【図１９】
。
【技術分野】
【０００１】本発明は，アプリケーション生成装置，アプリケーション
生成システム及びアプリケーション生成方法に関する。
【背景技術】
【０００２】
近年，
コンテンツマネジメントシステム
（以下，
ＣＭＳ
（Ｃ
ｏｎｔｅｎｔ Ｍａｎａｇｅｍｅｎｔ Ｓｙｓｔｅｍ）という）によりウェブアプ
リケーションとして公開するコンテンツを構築し，
管理することが行われている
（例
えば，特許文献１参照）
。
【発明が解決しようとする課題】
【０００４】ところで，近年，ネイティブアプリケ
ーションをダウンロードしてインストールすることができるスマートフォンが普及
している。スマートフォンのユーザは，ネイティブアプリケーションをインストー
ルする場合，アプリケーションを提供する所定のアプリケーションサーバにアクセ
スし，所望のネイティブアプリケーションを検索する。
【０００５】
しかしながら，
ＣＭＳによって構築されるウェブアプリケーションは，
ウェブサイトとして構築されるため，検索サイトの検索結果として表示されること
があるものの，
アプリケーションサーバから検索することができない。
したがって，
アプリケーションサーバにおいてネイティブアプリケーションを検索したユーザに，
ＣＭＳにより開発したウェブアプリケーションを利用してもらうことができないと
いう問題がある。
【０００６】これに対して，ＣＭＳによって構築したウェブアプリケーションと同
等の機能を有するネイティブアプリケーションを開発し，当該ネイティブアプリケ
ーションをアプリケーションサーバにアップロードすることも考えられる。しかし
ながら，ネイティブアプリケーションを新規に開発するには，多大な開発工数が必
要であった。
【０００７】本発明は，ネイティブアプリケーションを容易に生成することができ
るアプリケーション生成装置，アプリケーション生成システム及びアプリケーショ
ン生成方法を提供することを目的とする。
【課題を解決するための手段】
【０００８】
本発明の第１の態様に係るアプリケーシ
ョン生成装置は，端末にインストールされると，所定のアクセス先にアクセスして
情報を取得し，前記端末の表示部に表示させるネイティブアプリケーションを生成
するアプリケーション生成装置であって，前記ネイティブアプリケーションのテン
プレートであるテンプレートアプリケーションを記憶する記憶部と，ウェブアプリ
ケーションのアドレスとともに，ネイティブアプリケーションの生成要求を示すリ
クエストを受け付ける受付部と，前記受付部が前記リクエストを受け付けたことに
応じて，前記テンプレートアプリケーションの前記アクセス先を前記受付部が受け
付けた前記アドレスに設定することで前記ネイティブアプリケーションを生成する
生成部と，を備えることを特徴とする。
【０００９】この発明によれば，アプリケーション生成装置は，生成部がテンプレ
ートアプリケーションのアクセス先を，受付部が受け付けたウェブアプリケーショ
ンのアドレスに設定することで，当該テンプレートアプリケーションを，ウェブア
プリケーションが表示する情報を表示するネイティブアプリケーションとして機能
させることができる。したがって，アプリケーション生成装置は，受付部がウェブ
アプリケーションのアドレスを受け付けることで，当該ウェブアプリケーションと
同等の機能を有するネイティブアプリケーションを容易に生成することができる。
【００１０】また，前記テンプレートアプリケーションは，前記アクセス先を設定
する設定情報を含み，前記生成部は，前記受付部が前記リクエストを受け付けたこ
とに応じて，前記テンプレートアプリケーションをコピーし，コピーされた前記テ
ンプレートアプリケーションに含まれる前記設定情報の前記アクセス先を前記受付
部が受け付けた前記アドレスに設定することで前記ネイティブアプリケーションを
生成することを特徴とする。
この発明によれば，アプリケーション生成装置は，設定情報に含まれているアク
セス先を，受付部が受け付けたアドレスに変更するという単純な処理によってネイ
ティブアプリケーションを容易に生成することができる。
【発明を実施するための形態】
【００２２】以下，本発明の実施形態について，図面を参照しながら説明する。
＜第１の実施形態＞
［アプリケーション生成システムＳの概要］
図１は，第１の実施形態に係るアプリケーション生成システムＳの概要を示す図
である。アプリケーション生成システムＳは，アプリケーション生成装置１と，ア
プリケーション生成装置１とインターネット等のネットワークＮを介して通信可能
に接続された開発用端末２とを備え，ネイティブアプリケーションを生成するシス
テムである。
【００２３】ネイティブアプリケーションは，例えば，スマートフォン等の携帯端
末にインストールされるアプリケーションプログラムである。例えば，携帯端末の
ユーザは，アプリケーション提供サーバ３にアクセスして所望のネイティブアプリ
ケーションを検索する。そして，携帯端末のユーザは，検索結果から所望のネイテ
ィブアプリケーションを選択し，アプリケーション提供サーバ３から当該ネイティ
ブアプリケーションを取得して携帯端末にインストールする。
【００２４】アプリケーション生成システムＳのアプリケーション生成装置１は，
例えば，開発用端末２の操作に応じて，ウェブアプリケーションを構築するコンテ
ンツマネジメントシステムである。ここで，ウェブアプリケーションは，ネットワ
ークＮを介して実行されるアプリケーションであり，ＨＴＭＬやＪａｖａＳｃｒｉ
ｐｔ（登録商標）で記述される１以上のウェブページから構成されている。ウェブ
アプリケーションは，例えば，ブログ，有名人等のファンサイト，ゲームサイト，
ショッピングサイト等である。
【００２５】アプリケーション生成装置１は，例えば，ウェブアプリケーションの
アドレスと，ネイティブアプリケーションの生成要求を示すリクエストとを受け付
けると，受け付けたアドレスをアクセス先とするネイティブアプリケーションを生
成して出力する。開発用端末２は，出力されたネイティブアプリケーションを取得
し，
ネットワークＮを介して，
アプリケーション提供サーバ３にアップロードする。
これにより，携帯端末のユーザは，アプリケーション提供サーバ３において，ウェ
ブアプリケーションの情報を表示するネイティブアプリケーションを検索すること
ができる。
【００２６】その後，携帯端末のユーザが，当該ネイティブアプリケーションをア
プリケーション提供サーバ３からダウンロードしてインストールを行うと，携帯端
末の画面にアプリケーションのアイコンが表示される。携帯端末のユーザが，当該
アイコンを実行するとネイティブアプリケーションが実行される。ネイティブアプ
リケーションは，起動すると，先に設定されたウェブアプリケーションのアドレス
にアクセスしてウェブページを取得して表示する。そして，ネイティブアプリケー
ションは，表示されているウェブアプリケーションのリンク等が選択されると，当
該リンク等にアクセスし，ウェブアプリケーションを構成する他のウェブページを
取得して表示する。
【００２７】
［アプリケーション生成装置１の機能構成］続いて，アプリケーション
生成装置１の機能構成について説明する。図２は，第１の実施形態に係るアプリケ
ーション生成装置１及び開発用端末２の機能構成図である。
アプリケーション生成装置１は，記憶部１１と，受付部１２と，生成部１３と，
変換部１４と，送信部１５とを備える。ここで，受付部１２，生成部１３，変換部
【００２８】記憶部１１は，例えば，ＲＯＭ（Read Only Memory）
，ＲＡＭ（Random
Access Memory）
，ハードディスク等により構成される。記憶部１１は，ネイティブ
アプリケーションのテンプレートであるテンプレートアプリケーション１１１を記
憶する。
【００２９】テンプレートアプリケーション１１１は，スマートフォン等の携帯端
末にインストールされると，所定のアクセス先にアクセスして情報を取得し，当該
端末の表示部に表示させるネイティブアプリケーションのテンプレートである。テ
ンプレートアプリケーション１１１は，設定情報１１２と，１以上のプログラムフ
ァイル１１３とを含んでおり，記憶部１１の所定のフォルダ内に格納されている。
テンプレートアプリケーション１１１は，インストールされる端末のＯＳに対応し
て複数種類記憶されている。
【００３０】設定情報１１２は，ネイティブアプリケーションのアクセス先，メニ
ュー画面情報，及び表示態様情報に係る設定項目が含まれている。
メニュー画面情報に係る設定項目には，ネイティブアプリケーションのメニュー
画面に用いられるメニュー画像と，ネイティブアプリケーションのメニュー画面に
表示させるリンク先とが含まれている。
【００３１】表示態様とは，背景色，フォントの形状及びアイコン画像の形状等で
あり，ネイティブアプリケーションの表示態様情報に係る設定項目には，背景色，
フォント及びアイコン画像を選択する項目が含まれている。背景色は，ネイティブ
アプリケーションが端末の表示部に情報を表示させる際の背景色であり，アイコン
画像は，ネイティブアプリケーションのアイコンを示す画像である。
【００３２】１以上のプログラムファイル１１３は，例えば，汎用性の高い複数の
関数プログラムをまとめたライブラリファイルや，設定情報１１２の各設定項目に
基づいて情報を取得するためのプログラムファイル等から構成されている。
【００３３】受付部１２は，開発用端末２から，ウェブアプリケーションのアドレ
スとともに，ネイティブアプリケーションの生成要求を示すリクエストを受け付け
る。具体的には，受付部１２は，まず，開発用端末２から，リクエスト用ページの
取得要求を受け付けると，
リクエスト用ページを開発用端末２に送信する。
図３は，
第１の実施形態に係る開発用端末２の表示部２３に表示されたリクエスト用ページ
【００３４】図３に示すように，リクエスト用ページ３０には，入力欄として，ネ
イティブアプリケーションがアクセスするウェブアプリケーションのロケーション
を示すアドレスの入力欄３１，ネイティブアプリケーションのメニュー画面に用い
られるメニュー画像の入力欄３２，及びネイティブアプリケーションのメニュー画
面に表示されるリンク先の入力欄３３が設けられている。ここで，入力欄３２及び
入力欄３３は，複数設けられていてもよいし，当該リクエスト用ページに入力欄追
加ボタンを設け，当該ボタンが押下されたことに応じて追加表示されてもよい。ま
た，リクエスト用ページ３０には，ネイティブアプリケーションの表示態様情報に
係る入力欄として，背景色の入力欄３４，及びアイコン画像の入力欄３５が設けら
れている。
【００３５】例えば，入力欄３１には，ウェブアプリケーションのメインページの
ＵＲＬが入力される。メニュー画像の入力欄３２には，メニューページに表示する
メニュー画像のファイルの格納先アドレスが入力され，
リンク先の入力欄３３には，
当該メニュー画像に対応するリンク先のページのアドレスが入力される。
【００３６】背景色の入力欄３４には，カラーコード（ＲＧＢ値を十六進法で表記
した文字列）や背景画像を示すアドレスが入力される。アイコン画像の入力欄３５
には，画像ファイルのアドレスが入力される。ここで，入力欄３２から入力欄３５
に入力する情報は，任意入力であってもよい。
【００３７】リクエスト用ページ３０には，入力欄の他に，ネイティブアプリケー
ションを出力するための画像である，出力ボタン３６及び３７が設けられている。
出力ボタン３６は，第１種別のＯＳ用のアプリケーションを生成して出力するた
めのボタンであり，出力ボタン３７は，第２種別のＯＳ用のアプリケーションを生
成して出力するためのボタンである。なお，リクエスト用ページ３０には，他の種
別のＯＳ用のアプリケーションを生成して出力するためのボタンが設けられていて
もよい。
【００３８】開発用端末２のユーザが，入力欄３１から入力欄３５に各種情報を入
力し，ネイティブアプリケーションの出力ボタン３６又は３７を押下すると，開発
用端末２は，ウェブアプリケーションのアドレスを含む各種情報と，ネイティブア
プリケーションの生成要求を示すリクエストとを送信する。受付部１２は，開発用
端末２から，ウェブアプリケーションのメインページのアドレス，メニュー画面情
報，表示態様情報及びＯＳの種別を示す情報とともに，ネイティブアプリケーショ
ンの生成要求を示すリクエストを受け付ける。
【００３９】生成部１３は，受付部１２がネイティブアプリケーションの生成要求
を示すリクエストを受け付けたことに応じて，テンプレートアプリケーションのア
クセス先を受付部１２が受け付けたウェブアプリケーションのアドレスに設定する
ことでネイティブアプリケーションを生成する。
【００４０】具体的には，生成部１３は，受付部１２がリクエストを受け付けたこ
とに応じて，テンプレートアプリケーション１１１をコピーする。そして，生成部
ンプレートアプリケーション１１１から，当該ＯＳの種別に対応するテンプレート
アプリケーション１１１を特定する。そして，生成部１３は，特定したテンプレー
トアプリケーション１１１が格納されている所定のフォルダをコピーすることで，
テンプレートアプリケーション１１１をコピーする。
【００４１】そして，生成部１３は，コピーして新たに生成されたテンプレートア
プリケーション１１１に含まれる設定情報の内容を書き換え，ネイティブアプリケ
ーションを生成する。生成されたネイティブアプリケーションは，携帯端末にイン
ストールされて実行されると，設定情報に含まれているウェブアプリケーションの
アドレスに基づいて，
ウェブアプリケーションに対応するウェブページを取得する。
そして，ネイティブアプリケーションは，設定情報に含まれている表示態様情報に
基づいて取得したウェブページの表示態様を変更し，携帯端末の表示部に表示させ
る。
【００４２】より具体的には，生成部１３は，コピーされたテンプレートアプリケ
ーション１１１に含まれる設定情報の設定項目「ネイティブアプリケーションのア
クセス先」に，受付部１２が受け付けた，ウェブアプリケーションのアドレスを設
定する。
また，生成部１３は，設定情報の設定項目「表示態様情報」に，受付部１２が受
け付けた表示態様情報（背景色，フォント，アイコン画像）を設定する。
【００４３】また，生成部１３は，受付部１２が受け付けたメニュー画像，リンク
先のアドレスに基づいて，当該リンク先のアドレスに関連付けられたメニュー画像
を複数含むメニューページを生成する。生成部１３は，このメニューページを，ネ
イティブアプリケーションが実行された際に最初に表示されるページとしてもよい。
【００４４】また，生成部１３は，受付部１２が受け付けた，ウェブアプリケーシ
ョンのメインページのアドレスに基づいて，メインページを取得する。そして，生
成部１３は，取得したメインページに基づいて，ウェブアプリケーションのメニュ
ー情報を生成する。例えば，生成部１３は，取得したメインページに対応するウェ
ブページのタグを解析し，
重要度の高いリンクを抽出する。
そして，
生成部１３は，
抽出した重要度の高いリンクに含まれるメニュー情報を生成する。ここで，メニュ
ー情報は，グローバルナビゲーションであり，ネイティブアプリケーションを介し
て表示される各ウェブページとともに表示される情報である。例えば，メニュー情
報は，ネイティブアプリケーションを介して表示されたウェブアプリケーションの
ページの上部に付加される。端末のユーザは，ネイティブアプリケーションを介し
て表示されたウェブアプリケーションの各ページにおいて，グローバルナビゲーシ
ョンに含まれる複数のリンクのいずれかを選択することにより，当該リンク先のウ
ェブページに容易にアクセスすることができる。
【００４５】変換部１４は，生成部１３が生成したネイティブアプリケーションを
構成する設定情報と，１以上のプログラムファイルとを，端末がインストール可能
な形式のファイルに変換する。具体的には，変換部１４は，生成部１３がネイティ
ブアプリケーションを生成すると，当該ネイティブアプリケーションの設定情報及
び１以上のプログラムファイルを格納している所定のフォルダを所定の方式で圧縮
し，端末がインストール可能な形式のファイルに変換する。以下，変換したファイ
ルをネイティブアプリケーションファイルともいう。
【００４６】送信部１５は，ネイティブアプリケーションファイルを所定の記憶領
域に格納し，当該ファイルのアドレスを表示する送信用ページを開発用端末２に送
信する。図４は，第１の実施形態に係る開発用端末２の表示部２３に表示された送
信用ページ４０の一例を示す図である。図４に示される送信用ページ４０は，図３
に示されるリクエスト用ページにおいて，第１種別のＯＳ用のアプリケーションを
出力するための出力ボタン３６が押下されたときの表示例を示す。図４に示される
ように，送信用ページ４０には，第１種別のＯＳ用のアプリケーションが生成され
た旨を示す情報と，当該第１種別のＯＳ用のアプリケーションをダウンロードする
ための画像であるダウンロードボタン４１とが表示されている。送信部１５は，開
発用端末２において，送信用ページ４０に設けられているダウンロードボタン４１
が押下されると，生成したネイティブアプリケーションファイルを開発用端末２に
送信する。
【００５０】
［処理フロー］続いて，アプリケーション生成装置１の処理の流れにつ
いて説明する。図５は，第１の実施形態に係るアプリケーション生成装置１におい
て，ネイティブアプリケーションが開発用端末２に送信されるまでの処理の流れの
一例を示すフローチャートである。
【００５１】まず，受付部１２は，開発用端末２からリクエストを受け付ける（Ｓ
。具体的には，要求部２１が，アプリケーション生成装置１にリクエスト用ペー
ジ３０の取得要求を行うと，受付部１２は，開発用端末２に対してリクエスト用ペ
ージを送信し，開発用端末２から，ウェブアプリケーションのメインページのアド
レス，メニュー画面情報，表示態様情報，ＯＳの種別，及びネイティブアプリケー
ションの生成要求を示すリクエストを受け付ける。
【００５２】続いて，生成部１３は，受付部１２がリクエストを受け付けたことに
応じて，記憶部１１の所定のフォルダに記憶されているテンプレートアプリケーシ
ョン１１１をコピーする（Ｓ２）
。ここで，生成部１３は，Ｓ１において受け付けた
ＯＳの種別に対応したテンプレートアプリケーション１１１をコピーする。
【００５３】続いて，生成部１３は，Ｓ１において受け付けたウェブアプリケーシ
ョンのメインページのアドレス，メニュー画面情報，表示態様情報に基づいて，Ｓ
内容を書き換える（Ｓ３）
。これにより，コピーされたテンプレートアプリケーショ
ン１１１は，ネイティブアプリケーションになる。
【００５４】続いて，変換部１４は，Ｓ３において生成部１３が生成したネイティ
ブアプリケーションの設定情報及び１以上のプログラムファイルを格納している所
定のフォルダを所定の方式で圧縮し，ネイティブアプリケーションファイルに変換
する（Ｓ４）
。
【００５５】続いて，送信部１５は，ネイティブアプリケーションを開発用端末２
に送信する（Ｓ５）
。具体的には，送信部１５は，ネイティブアプリケーションファ
イルの格納先のアドレス及びダウンロードボタンを表示する送信用ページを開発用
端末２に送信し，
開発用端末２において，
当該ダウンロードボタンが押下されると，
ネイティブアプリケーションファイルを開発用端末２に送信する。
【００５６】
［第１の実施形態における効果］以上，第１の実施形態によれば，アプ
リケーション生成装置１は，記憶部１１が，ネイティブアプリケーションのテンプ
レートであるテンプレートアプリケーション１１１を記憶し，受付部１２が，ウェ
ブアプリケーションのアドレスとともに，ネイティブアプリケーションの生成要求
を示すリクエストを受け付け，生成部１３が，リクエストを受け付けたことに応じ
て，テンプレートアプリケーション１１１のアクセス先を受付部１２が受け付けた
アドレスに設定することでネイティブアプリケーションを生成する。
【００５７】このようにすることで，アプリケーション生成装置１は，生成部１３
がテンプレートアプリケーション１１１のアクセス先を，受付部１２が受け付けた
ウェブアプリケーションのアドレスに設定することで，当該テンプレートアプリケ
ーションを，ウェブアプリケーションが表示する情報を表示するネイティブアプリ
ケーションとして機能させることができる。したがって，アプリケーション生成装
置１は，受付部１２がウェブアプリケーションのアドレスを受け付けることで，当
該ウェブアプリケーションと同等の機能を有するネイティブアプリケーションを容
易に生成することができる。
【図１】
【図２】
【図３】
【図４】
【図５】
(2) 引用文献２には，以下のとおりの記載がある（甲２）
。
ア 「７．２ カメラの利用
カメラは，アプリケーション制作者がもっとも使いたいと思うハードウェアの一
つでしょう。カメラの機能は，単にその機能を呼び出すだけでなく，取り出される
映像の処理まで含めた知識が必要です。ここでその基本的な処理の仕方を身につけ
ていきましょう。
カメラも，アプリケーション内から利用できると応用範囲がグッと広がるハード
ウェア機能です。単に写真を撮影するだけでなく，ＡＲ（拡張現実）などのアプリ
にもカメラは利用されています。カメラ機能を利用したアプリというのは意外に多
いのです。
このカメラ機能は，もちろんアプリケーション内から利用することができます。
ただし，単に必要なソースコードを書けばＯＫというわけではないので注意が必要
です。
カメラを利用するためには，
アプリケーションに
「パーミッション
（アクセス権）
」
を用意する必要があります。これは，ＡｎｄｒｏｉｄＭａｎｉｆｅｓｔ．ｘｍｌに
記述します。ＡｎｄｒｏｉｄＭａｎｉｆｅｓｔ．ｘｍｌを開き，＜ｍａｎｉｆｅｓ
ｔ＞タグ内の適当なところに以下のタグを追記してください
（よくわからなければ，
最初の＜ｍａｎｉｆｅｓｔ＞の後を改行して記述してください）
。
リスト７．４
＜ｕｓｅｓ－ｐｅｒｍｉｓｓｉｏｎ ａｎｄｒｏｉｄ：ｎａｍｅ＝”ａｎｄｒｏ
ｉｄ．ｐｅｒｍｉｓｓｉｏｎ．ＣＡＭＥＲＡ”／＞
＜ｕｓｅｓ－ｐｅｒｍｉｓｓｉｏｎ ａｎｄｒｏｉｄ：ｎａｍｅ＝”ａｎｄｒｏ
ｉｄ．
ｐｅｒｍｉｓｓｉｏｎ．
ＷＲＩＴＥ＿ＥＸＴＥＲＮＡＬ＿ＳＴＯＲＡＧＥ”／
＞
＜ｕｓｅｓ－ｆｅａｔｕｒｅ ａｎｄｒｏｉｄ：ｎａｍｅ＝”ａｎｄｒｏｉｄ．
ｈ
ａｒｄｗａｒｅ．ｃａｍｅｒａ”／＞
これがカメラを利用する上で最低限必要なタグです。これらはそれぞれ以下のよ
うな役割を果たしています。
■＜ｕｓｅｓ－ｐｅｒｍｉｓｓｉｏｎ＞タグ
アプリケーションが必要とする許可を指定するものです。これはアプリケーショ
ンをインストールする際にチェックされます。
アプリケーションをインストールする際，
「以下のアクセス許可を必要としてい
ます」といった表示が現れることがあります。あれは，実はこの＜ｕｓｅｓ－ｐｅ
ｒｍｉｓｓｉｏｎ＞タグで記述されているものなのです。これにより，インストー
ル時にアプリケーションが必要とするアクセス許可が表示され，ユーザーがそれを
許可するとインストールされるようになります。
機能によっては，ユーザーが「これは勝手に使われたくないな」と思うようなこ
ともあります。そこで，この＜ｕｓｅｓ－ｐｅｒｍｉｓｓｉｏｎ＞タグにより「こ
のアプリはこれこれの重要な機能を使いますが，許可しますか？」ということを明
記し，
ユーザーがそれを許可しないとインストールできないようにしているのです。
■＜ｕｓｅｓ－ｆｅａｔｕｒｅ＞タグ
アプリケーションで必要とする機能を指定するものです。＜ｕｓｅｓ－ｐｅｒｍ
ｉｓｓｉｏｎ＞タグと異なり，これはユーザーが許可をするようなものではありま
せん。これは，アプリケーションヘのインストールが可能かどうかを決めるのに利
用されます。
例えば，この＜ｕｓｅｒｓ－ｆｅａｔｕｒｅ＞でカメラを指定してあれば，その
アプリはカメラ機能がない端末にはインストールできなくなります。つまり「これ
これの機能が用意されている端末でないと動かない」ということを指定するための
ものなのです。
ここでは，＜ｕｓｅｓ－ｐｅｒｍｉｓｓｉｏｎ＞にａｎｄｒｏｉｄ．ｐｅｒｍｉ
ｓｓｉｏｎ．ＣＡＭＥＲＡ，＜ｕｓｅｓ－ｆｅａｔｕｒｅ＞にａｎｄｒｏｉｄ．ｈ
ａｒｄｗａｒｅ．ｃａｍｅｒａを指定しています。これにより，このアプリはカメ
ラが搭載されている端末でのみ動作すること，カメラ機能を利用するための許可が
必要であることが指定されていたのですね。
また，ＷＲＩＴＥ＿ＥＸＴＥＲＮＡＬ＿ＳＴＯＲＡＧＥというのは，外部ストレ
ージヘの書き出しを許可するものです。イメージの保存を行うため，これも用意し
ておきましょう。
」
（３５６頁１５行～３５７頁３１行）
イ 「７．３．３ ＧＰＳ利用のパーミッション設定
では，実際にＧＰＳを利用したサンプルを作ってみましょう。まず最初に行うの
は，ＡｎｄｒｏｉｄＭａｎｉｆｅｓｔ．ｘｍｌの変更です。
ＧＰＳも，やはりパーミッション関係の情報を用意しなければ利用できないよう
になっています。ＡｎｄｒｏｉｄＭａｎｉｆｅｓｔ．ｘｍｌを開き，＜ｍａｎｉｆ
ｅｓｔ＞タグ内に以下のタグを追加してください。
リスト７．８
＜ｕｓｅｓ－ｐｅｒｍｉｓｓｉｏｎ ａｎｄｒｏｉｄ：ｎａｍｅ＝”ａｎｄｒｏ
ｉｄ．ｐｅｒｍｉｓｓｉｏｎ．ＡＣＣＥＳＳ＿ＦＩＮＥ＿ＬＯＣＡＴＩＯＮ”／＞
＜ｕｓｅｓ－ｆｅａｔｕｒｅ ａｎｄｒｏｉｄ：ｎａｍｅ＝”ａｎｄｒｏｉｄ．
ｈ
ａｒｄｗａｒｅ．Ｌｏｃａｔｉｏｎ”／＞
＜ｕｓｅｓ－ｆｅａｔｕｒｅ ａｎｄｒｏｉｄ：ｎａｍｅ＝”ａｎｄｒｏｉｄ．
ｈ
ａｒｄｗａｒｅ．Ｌｏｃａｔｉｏｎ．ｇｐｓ”／＞
＜ｕｓｅｓ－ｆｅａｔｕｒｅ ａｎｄｒｏｉｄ：ｎａｍｅ＝”ａｎｄｒｏｉｄ．
ｈ
ａｒｄｗａｒｅ．Ｌｏｃａｔｉｏｎ．ｎｅｔｗｏｒｋ”／＞
最初の＜ｕｓｅｓ－ｐｅｒｍｉｓｓｉｏｎ＞では，ＡＣＣＥＳＳ＿ＦＩＮＥ＿Ｌ
ＯＣＡＴＩＯＮへのパーミッションを設定しています。これにより，ユーザーが位
置情報へのアクセスを許可しないとアプリがインストールできないようになります。
残る３つのタグは，＜ｕｓｅｓ－ｆｅａｔｕｒｅ＞タグです。すなわち，これら
の機能を内蔵するＡｎｄｒｏｉｄ端末にしかインストールできないようにするもの
です。これにより，ＧＰＳやネットワーク機能がない端末にはアプリケーションを
インストールできないようになります。
これらのタグは，
ＧＰＳ利用には必須のものと考え，
必ず用意してください。
」
（３
(3) 引用文献３には，以下のとおりの記載がある（甲３，乙１）
。
ア 「第７章 ＨＴＭＬ５＋ＪａｖａＳｃｒｉｐｔでアプリ開発
はじめてのＰｈｏｎｅＧａｐ（その１）
ここまでできる
ＰｈｏｎｅＧａｐ」
（６６頁表題）
イ 「ＰｈｏｎｅＧａｐを利用すると，ｉＰｈｏｎｅやＡｎｄｒｏｉｄ，Ｗ
ｉｎｄｏｗｓＰｈｏｎｅなどのマルチプラットホームに対応するアプリを作成でき
ます．特にＧＰＳなどのネイティブ機能にアクセスできる点が注目されています．
」
（６６頁副題）
ウ 「現在同じコードから複数のプラットホームにアプリを生成できる表１
のようなフレームワークがあります．
ここでは，
数あるフレームワークの中からＰｈｏｎｅＧａｐを紹介します
（図１）
．
」
（６６頁中欄下から２行～右欄３行）
エ 「ＰｈｏｎｅＧａｐでできること
ＰｈｏｎｅＧａｐでできることは，以下の通りです．
①ＨＴＭＬ５＋ＣＳＳ＋ＪａｖａＳｃｒｉｐｔを使用してネイティブアプリを作
成
②プラグインの仕組みを使って，カメラやＧＰＳなど端末のネイティブ部分にア
クセス可能
③ｉＯＳ，Ａｎｄｒｏｉｄ，ＢｌａｃｋＢｅｒｒｙ，ＷｅｂＯＳ，Ｗｉｎｄｏｗ
ｓＰｈｏｎｅ７，Ｓｙｍｂｉａｎ，Ｂａｄａ向けにアプリを作成できる
①から分かるように，アプリを作るために必要な知識は，Ｗｅｂに関係する技術
のみになります．
もっとも注目すべき特徴は②のプラグインの仕組みがあることです．通常，ＨＴ
ＭＬ５やＪａｖａｓｃｒｉｐｔだけでは，スマートフォンで実現できないことがた
くさんあります．例えば，ＡｎｄｒｏｉｄのＩｎｔｅｎｔ機能を使うにはネイティ
ブの実装が必要です．そういった部分をプラグインがカバーすることで，ネイティ
ブの機能を使ってより良いアプリを作ることができます．
」
（６６頁右欄１３行～６
オ 「ＰｈｏｎｅＧａｐを使って，
地図とＧＰＳを組み合わせる
ＰｈｏｎｅＧａｐのすばらしさを体験するのに，地図とＧＰＳを組み合わせたア
プリを例に紹介します．
ここでは，Ｇｏｏｇｌｅ Ｍａｐｓ ＪａｖａＳｃｒｉｐｔ ＡＰＩ Ｖ３（ｈ
ｔｔｐ：／／以下略）を使ってスマートフォン上に地図を表示します．さらに，Ｐ
ｈｏｎｅＧａｐの「Ｇｅｏｌｏｃａｔｉｏｎ」を使用して，現在位置にマーカーを
表示します．
リスト４のソースを用意し，先ほど作成したプロジェクトのｉｎｄｅｘ．ｈｔｍ
ｌと置き換えます．マーカー用の２０ピクセルの画像をｐｉｎ．ｐｎｇという名前
で用意します．
各プラットホームでビルドし，実行すると，ｉＰｈｏｎｅ（図１４）
，Ａｎｄｒｏ
ｉｄ（図１５）
，ＷｉｎｄｏｗｓＰｈｏｎｅ（図１６）のように現在値の地図と，現
在値のマーカーが表示されます．また，地図をタップするとタップした場所にマー
カーが表示されます．
●仕組み
作成したリスト４を解説します．
＜ｓｃｒｉｐｔ ｔｙｐｅ＝”ｔｅｘｔ／ｊａｖａｓｃｒｉｐｔ”の部分でＧｏ
ｏｇｌｅ Ｍａｐのｊｓファイルを読み込んでいます．パラメータｓｅｎｓｏｒは
ＧＰＳがある端末の場合は，ｔｒｕｅを設定します．それ以外の場合は，ｆａｌｓ
ｅを設定します．アプリのターゲットであるスマートフォンではＧＰＳを搭載して
いるのでｔｒｕｅと設定しています．
」
（７０頁右欄６行～７２頁左欄２５行）
(4) 引用文献４には，以下のとおりの記載がある（甲４）
。
ア 「ソースコード，リソース，設定，ライブラリ
・・・
設定ファイルは，そのアプリのアプリ名やバージョン，対応言語（英語や日本語
ｅｔｃ．
）などを記述しておくファイルです。中身は細かな項目が多いといえます。
一見，そのような情報はソースコードに記述しておけば良いのではないかと思って
しまいますが，設定ファイルとして独立させておくことで，ｉＯＳやＡｎｄｒｏｉ
ｄはそのアプリがどのような属性を持つアプリなのかをすぐに把握できるようにな
るわけです。
」
（１０頁右欄２行～１１頁左欄６行）
イ 「設定ファイル「ｉｏｓ＿ｓａｍｐｌｅ－Ｉｎｆｏ．ｐｌｉｓｔ」
(5)のｉｏｓ＿ｓａｍｐｌｅ－Ｉｎｆｏ．ｐｌｉｓｔはアプリの設定ファイルです。
アプリの名前やバージョン，そのアプリが利用するＳｔｏｒｙｂｏａｒｄのファイ
ル等の情報が記述されています。ｉＯＳは（５）を読み取ることで，それらの情報
を取得します。
」
（１４頁左欄下から２行～右欄４行）
ウ 「超重要な設定ファイル「ＡｎｄｒｏｉｄＭａｎｉｆｅｓｔ．ｘｍｌ」
(5)のＡｎｄｒｏｉｄＭａｎｉｆｅｓｔ．ｘｍｌは，頻繁に編集することになる超
重要な設定ファイルです（図１４）
。この中ではアプリの名前やアイコン，対応する
Ａｎｄｒｏｉｄのバージョン，起動時に実行する○○Ａｃｔｉｖｉｔｙクラス，そ
のアプリをネットワークに接続できるようにするか？，ＳＤカードにファイルを保
存できるようにするか？などの，様々な項目を設定します。
」
（１６頁右欄下から８
行～末行）
(5) 引用文献５には，以下のとおりの記載がある（甲５，乙２）
。
ア 「ＪａｖａＳｃｒｉｐｔ／ＨＴＭＬ５＋ＰｈｏｎｅＧａｐの
組み合わせが一番
スマホアプリの作り方といっても，実はいろいろな方法があります（図１）
。それ
らはいずれも一長一短で，快適に動くアプリを作れるけれど作り方が難しい方法も
あれば，簡単にアプリを作れるけれど使い勝手の良いアプリは作りづらい方法もあ
ります。
日経ソフトウエア編集部では，様々ある方法を「ハードルが一番低そうなものは
どれか？」という点で吟味しました。その結果，この特集記事では「ＪａｖａＳｃ
ｒｉｐｔとＨＴＭＬ５＋ＰｈｏｎｅＧａｐの組み合わせ」を採用することにしまし
た。
ＪａｖａＳｃｒｉｐｔとＨＴＭＬ５は，主にＷｅｂページで使われるテクノロジ
ーです。Ｗｅｂブラウザとテキストエディタさえあればすぐにプログラミングがで
きるので，ハードルは低いと言えるでしょう。
ＰｈｏｎｅＧａｐ（フォンギャップ）はＪａｖａＳｃｒｉｐｔとＨＴＭＬ５のプ
ログラムをスマホアプリ化する無償のソフトウエアです。Ａｎｄｒｏｉｄ版もｉＯ
Ｓ版もあります。
要するに，ＪａｖａＳｃｒｉｐｔとＨＴＭＬ５＋ＰｈｏｎｅＧａｐは，最もとっ
つきやすく，それでいてちゃんとしたアプリを作れる組み合わせなのです。
」
（１６
頁左欄７行～２７行）
イ 「ステップ４
横画面に固定する
スマートフォンでは端末が縦の姿勢のときと，横の姿勢のときで画面が切り替わ
ります。ただ，ゲームでは画面が切り替わらない方が望ましいので，ここでは横画
面に固定する設定を施します。
Ａｎｄｒｏｉｄでは，ＡｎｄｒｏｉｄＭａｎｉｆｅｓｔ．ｘｍｌに「ａｎｄｒｏ
ｉｄ：ｓｃｒｅｅｎＯｒｉｅｎｔａｔｉｏｎ ＝”ｌａｎｄｓｃａｐｅ”
」の１行を
追加します（図５）
。
ｉＯＳでは，左側のリストの青いアイコンのプロジェクト名（Ｍａｔａｔａｂｉ
Ｐａｋｋｕｎ）を選択すると，その右側に「ＴＡＲＧＥＴＳ」という項目が現れる
ので，その下にある「ＭａｔａｔａｂｉＰａｋｋｕｎ」を選びます。すると，プロ
ジェクトの各種設定が表示されます。この中に「Ｓｕｐｐｏｒｔｅｄ Ｄｅｖｉｃ
ｅ Ｏｒｉｅｎｔａｔｉｏｎｓ」
という項目があるので，
「Ｌａｎｄｓｃａｐｅ Ｌ
ｅｆｔ」か「Ｌａｎｄｓｃａｐｅ Ｒｉｇｈｔ」を選びます。
これで，画面を横向きに固定できます。なお，ここでいうｏｒｉｅｎｔａｔｉｏ
ｎ は「方向」
，ｌａｎｄｓｃａｐｅは「横方向」という意味です。
」
（２９頁左欄１
～１６行）
ウ 「ステップ４
縦画面に固定する
この電子書籍アプリは縦画面に固定します。
そこで図６の設定を施してください。
Ａｎｄｒｏｉｄでは，ＡｎｄｒｏｉｄＭａｎｉｆｅｓｔ．ｘｍｌに「ａｎｄｒｏｉ
ｄ：ｓｃｒｅｅｎＯｒｉｅｎｔａｔｉｏｎ ＝”ｐｏｒｔｒａｉｔ”
」の１行を追加
します。
ｉＯＳでは，
「Ｓｕｐｐｏｒｔｅｄ Ｄｅｖｉｃｅ Ｏｒｉｅｎｔａｔｉｏ
ｎｓ」の項目で「Ｐｏｒｔｒａｉｔ」を選びます。なお，ｐｏｒｔｒａｉｔはここ
では「縦方向」の意味です。
」
（３６頁左欄下から１０行～末行）
(6) 参考文献１には，以下のとおりの記載がある（甲８）
。
ア 「３Ｄグラフィクスと
加速度センサ
今回のサンプルアプリケーションは，加速度センサとＯｐｅｎＧＬ ＥＳを用い
た３Ｄグラフィクス描画，それに，前のセクションで解説した音声再生を組み合わ
せたものになります（図１）
。
サンプルアプリケーションを起動すると，３Ｄグラフィクス界ではおなじみのテ
ィーポットの３Ｄモデルが表示されます。端末を傾けると視点が変化して，見る向
きを変えることができます。また，画面をタッチして左右に指を動かすと，ティー
ポットを回転させることができます。音声は画面をタップすると再生を開始し，再
生している間はティーポットの色が変わります。
なお，ネイティブコードのみで実装する関係で，対象となるデバイスはＧｉｎｇ
ｅｒｂｒｅａｄ（Ａｎｄｒｏｉｄ ２．３）
，ＮＤＫはＲｅｖｉｓｉｏｎ ５以降が対
象となります。
それでは，
今回もすべてのソースコードを含むプロジェクトファイルは，
「Ｓｏｆ
ｔｗａｒｅ Ｄｅｓｉｇｎ」２０１１年８月号の解説記事「Ａｎｄｒｏｉｄエンジ
ニアからの招待状」のサポートページ（ｈｔｔｐ：／／以下略）からダウンロード
できますので，そちらをご覧いただきながら本稿を読み進めてもらえればと思いま
す。
センサからの値の取得
デバイスに搭載されている各種センサの値をネイティブコードからも取得するこ
とができます。今回は表示するティーポットの向きを決めるために加速度センサを
使って重力の方向を求めます。
センサに関するＡＰＩと定数の定義はｉｎｃｌｕｄｅ／ａｎｄｒｏｉｄ／ｓｅｎ
ｓｏｒ．ｈにあります。
」
（１５７頁左欄１行～右欄末行）
イ 「■ＡｎｄｒｏｉｄＭａｎｉｆｅｓｔ．ｘｍｌ
加速度センサでデバイスの傾きを取得するため，傾けた際に画面のオリエンテー
ションが変わらないように，ａｎｄｒｏｉｄ：ｓｃｒｅｅｎＯｒｉｅｎｔａｔｉｏ
ｎ ＝”ｐｏｒｔｒａｉｔ”を追加してｐｏｒｔｒａｉｔで固定します。
＜ａｃｔｉｖｉｔｙ ａｎｄｒｏｉｄ：ｎａｍｅ＝
”ａｎｄｒｏｉｄ．ａｐｐ．ＮａｔｉｖｅＡｃｔｉｖｉｔｙ”
ａｎｄｒｏｉｄ：ｌａｂｅｌ＝
”＠ｓｔｒｉｎｇ／ａｐｐ＿ｎａｍｅ”
ａｎｄｒｏｉｄ：ｓｃｒｅｅｎＯｒｉｅｎｔａｔｉｏｎ＝
”ｐｏｒｔｒａｉｔ”＞」
（１６２頁左欄１３行～２３行）
(7) 乙３文献には，以下のとおりの記載がある（甲７，乙３）
。
ア 「ＰｈｏｎｅＧａｐは，ＨＴＭＬ５，ＣＳＳ３，ＪａｖａＳｃｒｉｐｔ
などのＷｅｂ標準技術を用いてｉＯＳやＡｎｄｒｏｉｄなどのスマートフォン向け
のネイティブアプリを開発するためのフレームワークです。
」
（１５５頁左欄１０行
～１４行）
イ 「カメラアプリの作成
ここからはＨＴＭＬファイルを１つ作成して，各ＯＳで動作することを確認しま
す。今回はカメラで写真を撮影（もしくは，すでにある写真から選択）して，写真
を画面に表示するカメラアプリを作ってみます。
ｉｎｄｅｘ．ｈｔｍｌファイルの作成
自分の好きなエディタを使って，リスト３のｉｎｄｅｘ．ｈｔｍ１ファイルを作
成します。ｊＱｕｅｒｙとｊＱｕｅｒｙ Ｍｏｂｉｌｅのファイルを使用していま
すので，必要なファイルをｊＱｕｅｒｙのＷｅｂサイトから取得して展開しておい
てください。
ポイントは，ＪａｖａＳｃｒｉｐｔ部分のｃａｐｔｕｒｅＰｈｏｔｏ（）関数と
ｇｅｔＰｈｏｔｏ（）関数の中です。ｎａｖｉｇａｔｏｒ．ｃａｍｅｒａ～とある
のは，ＰｈｏｎｅＧａｐのライブラリの関数を使用しています。
ＰｈｏｎｅＧａｐ側では，
ネイティブの対応する機能を呼び出します。
ここでは，
カメラの撮影機能とギャラリー機能を呼び出しています（実際に呼び出されるアプ
リは，ＯＳによって異なります）
。
これ以外にもＪａｖａＳｃｒｉｐｔでＰｈｏｎｅＧａｐのＡＰＩを呼び出せば，
センサーやＧＰＳの機能を使うことができます。
これでカメラアプリを作成する準備が整いました。
ｉＯＳ編
作成したｉｎｄｅｘ，ｈｔｍｌファイルやｊＱｕｅｒｙ関連のファイルを，Ｈｅ
ｌｌｏＷｏｒｌｄ作成時に作ったＸｃｏｄｅのプロジェクトの中に入れます。ｗｗ
ｗフォルダの下にはｉｎｄｅｘ．ｈｔｍ１ファイルがすでに存在していますので，
作成したファイルで置き換えます。
置き換えたらＸｃｏｄｅの実行ボタンを押して起動してみましょう。図１０のよ
うな画面が表示されれば成功です。エミュレータの場合カメラは起動しませんが，
その際はエラーが出ていることを確認できるかと思います。
ｉＰｈｏｎｅやｉＰａｄで実行するとカメラで写真を撮って，画面に表示するの
を確認できます。
」
（１５９頁左欄１行～右欄４行）
ウ 「Ａｎｄｒｏｉｄ編
Ｅｃｌｉｐｓｅを起動して，先ほどのＨｅｌｌｏ Ｗｏｒｌｄプロジェクトのａ
ｓｓｅｔｓ／ｗｗｗフォルダの中に「ｉｎｄｅｘ．ｈｔｍｌ」やｊＱｕｅｒｙ関連
のファイルをコピーします。実行ボタンを押して実行すると，ｉＯＳの環境と同じ
ように動いていることが確認できます（図１１）
。
」
（１６０頁右欄１行～７行）
いて
(1) 本件補正発明と引用発明との一致点及び相違点
ア 前記２(1)で認定した引用文献１の記載からすると，引用発明の構成は以
下のとおり認められる。
「アプリケーション生成装置１と開発用端末２とがインターネット等のネットワ
ークＮを介して通信可能に接続され，スマートフォン等の携帯端末にインストール
されるアプリケーションプログラムであるネイティブアプリケーションを生成する
アプリケーション生成システムであって，
アプリケーション生成装置１は，記憶部１１と，受付部１２と，生成部１３と，
変換部１４と，送信部１５とを備え，
記憶部１１は，ネイティブアプリケーションのテンプレートであるテンプレート
アプリケーション１１１を記憶し，
ここで，テンプレートアプリケーション１１１は，スマートフォン等の携帯端末
にインストールされると，所定のアクセス先にアクセスして情報を取得し，当該端
末の表示部に表示させるネイティブアプリケーションのテンプレートであり，
テンプレートアプリケーション１１１は，設定情報１１２と，１以上のプログラ
ムファイル１１３とを含んでいて，記憶部１１の所定のフォルダ内に格納されてお
り，
受付部１２は，開発用端末２から，リクエスト用ページ３０の取得要求を受け付
けると，リクエスト用ページ３０を開発用端末２に送信し，
ここで，リクエスト用ページ３０には，入力欄として，ネイティブアプリケーシ
ョンがアクセスするウェブアプリケーションのロケーションを示すアドレスの入力
欄３１が設けられ，また，ネイティブアプリケーションの表示態様情報に係る入力
欄として，
背景色の入力欄３４，
及びアイコン画像の入力欄３５が設けられており，
入力欄３１には，ウェブアプリケーションのメインページのＵＲＬが入力され，
背景色の入力欄３４には，カラーコードや背景画像を示すアドレスが入力され，ア
イコン画像の入力欄３５には，画像ファイルのアドレスが入力され，
受付部１２が，開発用端末２から，ウェブアプリケーションのメインページのア
ドレス，及び表示態様情報とともに，ネイティブアプリケーションの生成要求を示
すリクエストを受け付けると，生成部１３は，コピーして新たに生成されたテンプ
レートアプリケーション１１１に含まれる設定情報の内容を，受付部１２が受け付
けたウェブアプリケーションのメインページのアドレス，及び表示態様情報に基づ
いて書き換えてネイティブアプリケーションを生成し，
ここで，生成されたネイティブアプリケーションは，携帯端末にインストールさ
れて実行されると，設定情報に含まれているウェブアプリケーションのアドレスに
基づいて，ウェブアプリケーションに対応するウェブページを取得し，設定情報に
含まれている表示態様情報に基づいて取得したウェブページの表示態様を変更して，
携帯端末の表示部に表示させるものであり，
変換部１４は，生成部１３がネイティブアプリケーションを生成すると，当該ネ
イティブアプリケーションの設定情報及び１以上のプログラムファイルを格納して
いる所定のフォルダを所定の方式で圧縮し，端末がインストール可能な形式のネイ
ティブアプリケーションファイルに変換し，
送信部１５は，
ネイティブアプリケーションファイルを所定の記憶領域に格納し，
当該ファイルのアドレスを表示する送信用ページを開発用端末２に送信し，開発用
端末２において，送信用ページ４０に設けられているダウンロードボタン４１が押
下されると，生成したネイティブアプリケーションファイルを開発用端末２に送信
する，
アプリケーション生成システム。
」
イ 前記第２の２(2)で認定した本件補正発明の構成と前記アの引用発明の
構成を比較すると，両発明の一致点及び相違点は以下のとおりとなる。
(ｱ) 一致点
「携帯通信端末の所定の機能を実行させるためのパラメータに応じて，前記携帯
通信端末において実行されるアプリケーションの動作を規定する設定ファイルを設
定する設定部と，
前記設定ファイルに基づいてアプリケーションパッケージを生成する生成部と，
を有するアプリケーション生成支援システム」である点。
(ｲ) 相違点
ａ 相違点１
設定ファイルを設定するパラメータが，
本件補正発明では，
「携帯通信端末に固有のネイティブ機能を実行させるための
パラメータ」であるのに対して，
引用発明では，携帯通信端末の機能を実行させるためのパラメータではあるもの
の，携帯通信端末に固有のネイティブ機能を実行させるためのパラメータであるこ
とが特定されていない点。
ｂ 相違点２
設定ファイルが，
本件補正発明では，
「アプリケーションの，携帯通信端末の動きに伴う動作」を規
定する「設定ファイル」であるのに対して，
引用発明では，
「設定情報」が，ネイティブアプリケーションのウェブページ取得
動作や表示動作を規定するものの，
「携帯端末の動きに伴う」
動作を規定するもので
あることが特定されていない点。
(2) 相違点１についての判断
本件審決は，引用発明に引用文献２～５及び参考文献１記載の技術（同技術に乙
）を適用することに
より，本件補正発明に想到し得ると判断していることから，引用発明に被告主張周
知技術を適用する動機付けの有無について検討する。
ア 引用発明
前記２(1)のとおり，引用文献１には，
「近年，コンテンツマネジメントシステム
（以下，
ＣＭＳ
（Ｃｏｎｔｅｎｔ Ｍａｎａｇｅｍｅｎｔ Ｓｙｓｔｅｍ）
という）
によりウェブアプリケーションとして公開するコンテンツを構築し，管理すること
が行われている（例えば，特許文献１参照）
。ところで，近年，ネイティブアプリケ
ーションをダウンロードしてインストールすることができるスマートフォンが普及
している。スマートフォンのユーザは，ネイティブアプリケーションをインストー
ルする場合，アプリケーションを提供する所定のアプリケーションサーバにアクセ
スし，所望のネイティブアプリケーションを検索する。しかしながら，ＣＭＳによ
って構築されるウェブアプリケーションは，ウェブサイトとして構築されるため，
検索サイトの検索結果として表示されることがあるものの，アプリケーションサー
バから検索することができない。したがって，アプリケーションサーバにおいてネ
イティブアプリケーションを検索したユーザに，ＣＭＳにより開発したウェブアプ
リケーションを利用してもらうことができないという問題がある。これに対して，
ＣＭＳによって構築したウェブアプリケーションと同等の機能を有するネイティブ
アプリケーションを開発し，当該ネイティブアプリケーションをアプリケーション
サーバにアップロードすることも考えられる。しかしながら，ネイティブアプリケ
ーションを新規に開発するには，多大な開発工数が必要であった。本発明は，ネイ
ティブアプリケーションを容易に生成することができるアプリケーション生成装置，
アプリケーション生成システム及びアプリケーション生成方法を提供することを目
的とする。
」
（段落【０００２】
，
【０００４】～【０００７】
）と記載されており，同
記載からすると，引用発明は，ＣＭＳによって構築されるウェブアプリケーション
は，アプリケーションサーバから検索することができないため，アプリケーション
サーバにおいてネイティブアプリケーションを検索したユーザに，ＣＭＳにより開
発したウェブアプリケーションを利用してもらうことができないこと及びＣＭＳに
よって構築したウェブアプリケーションと同等の機能を有するネイティブアプリケ
ーションを新規に開発するには，多大な開発工数が必要となることを課題とし，同
課題を解決するためのネイティブアプリケーションを生成する装置であることが認
められる。
引用発明は，上記課題を解決するために，前記(1)アで認定したとおり，既存のウ
ェブアプリケーションのロケーションを示すアドレスや所望の背景画像を示すアド
レス等の情報を入力するだけで，当該ウェブアプリケーションの表示態様を変更し
て，同ウェブアプリケーションが表示する情報を表示するネイティブアプリケーシ
ョンを生成できるようにしたものと認められる。
イ 被告は，携帯通信端末の動きに伴う動作を行うネイティブアプリケーシ
ョンを生成すること，
特に，
ＰｈｏｎｅＧａｐに係る技術が周知であると主張する。
(ｱ) 前記アのとおり，
引用発明は，
アプリケーションサーバにおいて検索で
きるネイティブアプリケーションを簡単に生成することを課題として，同課題を，
既存のウェブアプリケーションのアドレス等の情報を入力するだけで，同ウェブア
プリケーションが表示する情報を表示できるネイティブアプリケーションを生成す
ることができるようにすることによって解決したものであるから，ブログ等の携帯
通信端末の動きに伴う動作を行わないウェブアプリケーションの表示内容を表示す
るネイティブアプリケーションを生成しようとする場合，生成しようとするネイテ
ィブアプリケーションを携帯通信端末の動きに伴う動作を行うようにする必要はな
く，したがって，設定ファイルを設定するパラメータを「携帯通信端末に固有のネ
イティブ機能を実行するためのパラメータ」とする必要はない。もっとも，引用文
献１の段落【００２４】には，ブログ等と並んで「ゲームサイト」が掲げられてお
り，ゲームにおいては，加速度センサにより横画面と縦画面が切り替わらないよう
に制御する必要がある場合が考えられる（引用文献５参照）が，ウェブアプリケー
ションとして提供されるゲームは，①常に携帯通信端末の表示画面を固定する必要
があるとはいえないこと，②加速度センサにより，携帯通信端末の姿勢に対応した
画面回転表示を制御する機能は携帯通信端末側に備わっており，端末側の操作によ
って，表示画面を固定することができ，そのような操作は一般的に行われているこ
と，③引用文献１の段落【００２４】の「ゲームサイト」は，携帯通信端末の表示
画面を固定する必要のないブログ，ファンサイト，ショッピングサイトと並んで記
載されており，また，引用文献１には，加速度センサについて何らの記載もないこ
とからすると，当業者は，上記の「ゲームサイト」の記載から，パラメータを「携
帯通信端末に固有のネイティブ機能を実行するためのパラメータ」とすることの必
要性を認識するとまではいえないというべきである。
また，引用発明によって生成されるネイティブアプリケーションは，ＨＴＭＬや
ＪａｖａＳｃｒｉｐｔで記述されるウェブページを表示できるから，引用発明によ
り，乙４に記載されたＨＴＭＬ５ ＡＰＩのＧｅｏｌｏｃａｔｉｏｎを用いて携帯
通信端末の動きに伴う動作を行うウェブアプリケーションの表示内容を表示するネ
イティブアプリケーションを生成しようとする場合も，生成されるネイティブアプ
リケーションは，設定情報に含まれているウェブアプリケーションのアドレスに基
づいて，同ウェブアプリケーションに対応するウェブページを取得し，取得したウ
ェブページのＨＴＭＬやＪａｖａＳｃｒｉｐｔの記述に基づいて，同ウェブアプリ
ケーションの内容を表示でき，したがって，ネイティブアプリケーションの生成に
際して，設定ファイルを設定するパラメータを「携帯通信端末に固有のネイティブ
機能を実行させるためのパラメータ」とする必要はない。
さらに，被告主張周知技術に係る各種文献にも，引用発明の上記の構成の技術に
おいて，
「携帯通信端末に固有のネイティブ機能を実行させるためのパラメータ」
に
応じて設定ファイルを設定することの必要性等については何ら記載されていない
（甲２～５，７，８，乙１～３）
。
(ｲ) 前記アのとおり，
引用発明は，
簡易にネイティブアプリケーションを生
成することを課題として，既存のウェブアプリケーションのアドレス等の情報を入
力するだけで，当該ウェブアプリケーションが表示する情報を表示するネイティブ
アプリケーションを生成できるようにしたのであり，具体的には，前記(1)アのとお
り，入力しようとするウェブアプリケーションのロケーションを示すアドレス及び
表示態様に基づいて，テンプレートアプリケーション１１１に含まれる設定情報の
内容を書き換えるだけで目的とするウェブアプリケーションの表示する情報を表示
できるネイティブアプリケーションを生成でき，テンプレートアプリケーション１
必要はないところ，証拠（甲３，５，７，乙１～３）によると，ＰｈｏｎｅＧａｐ
によってネイティブアプリケーションを生成するためには，ＨＴＭＬやＪａｖａＳ
ｃｒｉｐｔ等を用いてソースコード（プログラム）を書くなどする必要があるもの
と認められるから，引用発明に，上記のように，新たにソースコードを書くなどの
行為が要求されるＰｈｏｎｅＧａｐに係る技術を適用することには阻害事由がある
というべきである。
被告は，①ＰｈｏｎｅＧａｐでは，ＰｈｏｎｅＧａｐのプラグインの仕組みを使
って，ＧＰＳなど端末のネイティブ部分にアクセス可能であり，端末のＧＰＳ機能
にアクセスすることで，ＧＰＳで取得した端末の現在位置が中心となるように地図
を表示することが可能となるから，引用発明において地図表示アプリケーションを
生成する際に，ＰｈｏｎｅＧａｐのフレームワークを採用することで，ネイティブ
機能であるＧＰＳ機能が利用可能となり，携帯通信端末の動きに伴う動作を設定可
能となり，また，②ＡｎｄｒｏｉｄＭａｎｉｆｅｓｔ．ｘｍｌに「ａｎｄｒｏｉｄ：
ｓｃｒｅｅｎＯｒｉｅｎｔａｔｉｏｎ ＝”
ｌａｎｄｓｃａｐｅ”
」
の１行を追加し
たり（Ａｎｄｒｏｉｄの場合）
，
「Ｌａｎｄｓｃａｐｅ Ｒｉｇｈｔ」又は「Ｌａｎ
ｄｓｃａｐｅ Ｌｅｆｔ」のアイコンを選択すること（ｉＯＳの場合）で，スマー
トフォンの画面を横画面に固定可能となり，縦画面に固定する設定を施す場合，Ａ
ｎｄｒｏｉｄＭａｎｉｆｅｓｔ．ｘｍｌに「ａｎｄｒｏｉｄ：ｓｃｒｅｅｎＯｒｉ
ｅｎｔａｔｉｏｎ ＝”ｐｏｒｔｒａｉｔ”
」の１行を追加したり（Ａｎｄｒｏｉｄ
の場合）
，
「ｐｏｒｔｒａｉｔ」のアイコンを選択すること（ｉＯＳの場合）で，ス
マートフォンの画面を縦画面に固定可能となるから，引用発明において，アプリケ
ーションを生成する際に，ＰｈｏｎｅＧａｐのフレームワークを利用することで，
「携帯通信端末に固有のネイティブ機能を実行させるためのパラメータ」
に応じて，
携帯通信端末において実行される「アプリケーションの，携帯通信端末の動きに伴
う動作」を規定する設定ファイルを備えることとなると主張する。
しかし，上記のとおり，引用発明にＰｈｏｎｅＧａｐの技術を適用することの動
機付けはないから，
被告の上記主張は，
その前提を欠くものであって，
理由がない。
(ｳ) 以上からすると，
引用発明に，
被告主張周知技術を適用することの動機
付けは認められないというべきである。
ウ 以上のとおり，引用発明に被告主張周知技術を適用することの動機付け
はないから，引用発明に被告主張周知技術を適用して，相違点１の構成について，
本件補正発明の構成とすることは容易に想到することはできず，したがって，本件
補正発明は，引用発明及び被告主張周知技術に基づいて容易に発明することができ
たということはできない。
(3) したがって，取消事由１は理由がある。
第６ 結論
よって，主文のとおり判決する。
知的財産高等裁判所第２部
裁判長裁判官
森 義 之
裁判官
佐 野 信
裁判官
熊 谷 大 輔

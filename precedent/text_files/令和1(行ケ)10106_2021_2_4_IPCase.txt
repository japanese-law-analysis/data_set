令和３年２月４日判決言渡
令和元年（行ケ）第１０１０６号 審決取消請求事件
口頭弁論終結日 令和２年１１月２５日
判 決
原 告 ソフトバンクロボティクス株式会社
同訴訟代理人弁護士 鮫 島 正 洋
和 田 祐 造
森 下 梓
被 告 株式会社パッセルインテグレーション
同訴訟代理人弁護士 中 村 隆 夫
加 藤 伸 樹
我 妻 崇 明
主 文
事 実 及 び 理 由
第１ 請求
特許庁が無効２０１８－８００１０４事件について令和元年６月２５日に
した審決を取り消す。
第２ 事案の概要
(1) 被告は，平成１６年８月１３日，発明の名称を「情報管理方法，情報管理
プログラム，及び情報管理装置」とする発明について特許出願（特願２００
年７月２８日。甲１８）をし，平成１７年１２月２２日，特許権の設定登録
（特許第３７５４４３８号。請求項の数１５。）を受けた（以下，この特許
を「本件特許」という。甲２９）。
(2) 原告は，
平成３０年８月２０日，
本件特許の請求項１及び１４について特
許無効審判を請求した（甲２９）。
特許庁は，上記請求を無効２０１８－８００１０４号事件として審理を行
い，令和元年６月２５日，「本件審判の請求は，成り立たない。」，との審
決（以下「本件審決」という。）をし，その謄本は，同年７月４日，原告に
送達された。
⑶ 原告は，令和元年８月１日，本件審決の取消しを求める本件訴訟を提起し
た。
請求項１項及び１４項の特許請求の範囲の記載は，次のとおりである（甲１
わけではないが，本件審決において便宜のためこれらの記号が付されたもので
ある。
【特許請求の範囲】
【請求項１】
Ａ コンピュータが情報を管理する情報管理方法であって，
Ｂ 前記コンピュータに複数のノードそれぞれに対応付けて入力された管理す
べき情報を，前記ノードを識別するノード識別情報に対応付けられた複数の
ノードデータを含む文書ファイルとして前記コンピュータが記憶する情報記
憶ステップと，
Ｃ 前記情報記憶ステップで記憶された前記文書ファイルの情報を前記コンピ
ュータが表示する情報表示ステップと，
Ｄ 前記ノードデータに含まれるスクリプトを前記コンピュータが実行する情
報評価ステップとを備え，
Ｅ 前記ノードデータは，ルートノードを除いて，当該ノードの親ノードを特
定する親ノード識別情報を含んでおり，
Ｆ 前記スクリプトは，当該ノードデータに含まれる変数データである自ノー
ド変数データと，当該ノードの直系上位ノードのノードデータに含まれる変
数データである上位ノード変数データを利用した演算を行って，前記自ノー
ド変数データの値を求める代入用スクリプトを含んでおり，
Ｇ 前記情報表示ステップは，前記親ノード識別情報を利用して，前記ノード
の木構造を表示する木構造表示ステップと，前記表示された木構造のノード
のうちの選択されたノードの前記自ノード変数データ，前記上位ノード変数
データ及び前記スクリプトを表示するノードデータテーブル表示ステップを
含み，
Ｈ 前記情報評価ステップは，前記代入用スクリプトの実行により，前記自ノ
ード変数データの値を更新するステップを含む情報管理方法。
【請求項１４】
請求項１ないし１３のいずれか１項記載の情報管理方法における各ステッ
プを，コンピュータに実行させるための情報管理プログラム。
(1) 本件審決の理由の要旨は，①本件特許の請求項１に係る発明（以下「本件
発明１」という。）及び本件特許の請求項１４に係る発明（以下「本件発明
第１号証（特開平６－１７５８５２号公報。以下，単に「甲１」という。そ
の他の刊行物についても同様に単に「甲２」等という。）に記載された発明
ではないから，原告主張の新規性欠如（特許法２９条１項３号）の無効理由
は理由がない，②本件発明１及び本件発明１４は，甲１に記載された発明に
おいて，相違点に係る構成を想起することは，当業者が容易になし得たもの
でないから，原告主張の進歩性欠如（同条２項違反）の無効理由は理由がな
い，③本件発明１及び本件発明１４に係る本件明細書（甲１８）の発明の詳
細な説明は，当業者に実施可能なように記載されており，同法３６条４項１
号に規定する要件（以下「実施可能要件」という。）に適合するから，原告
主張の実施可能要件違反の無効理由は理由がない，④本件発明１及び本件発
明１４は，本件明細書の発明の詳細な説明に記載されたものであり，発明の
詳細な説明の記載により当業者が当該発明の課題を解決できる範囲のもので，
同条６項１号に規定する要件（以下「サポート要件」という。）に適合する
から，原告主張のサポート要件違反の無効理由は理由がないというものであ
る。
(2) 本件審決が認定した甲１に記載された発明
（以下
「甲１発明」
という。
）
，
並びに本件発明１と甲１発明の一致点及び相違点は，次のとおりである。
ア 甲１発明
甲１－ａ コンピュータが知識ベースを構築する知識ベース構築方法で
あって，
甲１－ｂ 前記コンピュータに複数のノードそれぞれに対応付けて入力
された知識を，前記ノードを定義するノード名称に対応付けら
れた複数のノードデータを含むデータベースに前記コンピュー
タが記憶し，更に前記知識を知識記述言語に変換して知識ベー
スとして記述する記憶ステップと，
甲１－ｃ 前記記憶ステップで記憶された知識を前記コンピュータが表
示する表示ステップと，
甲１－ｄ 前記ノードデータに含まれる属性値の数式の計算を前記コン
ピュータが実行する実行ステップとを備え，
甲１－ｅ 前記ノードデータは，最上位のノードを除いて，当該ノード
の親ノードを特定する親ノードの名称を含み，前記ノードデー
タには前記数式のほか条件分岐も含み得，
甲１－ｆ 前記数式は，当該ノードの親ノードのノードデータに含まれ
る属性値である親ノード属性値（『内箱の本体の高さ』）を当
該ノードデータに含まれる属性値である自ノード属性値（『高
さ』）として代入する数式を含んでおり，
甲１－ｇ 前記表示ステップは，前記親ノードの名称を利用して，前記
ノードのツリーを表示するツリー表示ステップと，前記表示さ
れたツリーのノードのうちの選択されたノードの前記自ノード
属性値，前記親ノード属性値を表示する属性値表示ステップを
含み，
甲１－ｈ 前記実行ステップは，前記数式の計算により，親ノード属性
値を自ノード属性値として代入して，自ノード属性値を求める
ステップを含む知識ベース構築方法。
イ 本件発明１と甲１発明の一致点及び相違点
（一致点）
「コンピュータが情報を管理する情報管理方法であって，
前記コンピュータに複数のノードそれぞれに対応付けて入力された管
理すべき情報を，前記ノードを識別するノード識別情報に対応付けられ
た複数のノードデータを含む情報として前記コンピュータが記憶する情
報記憶ステップと，
前記情報記憶ステップで記憶された前記情報を前記コンピュータが
表示する情報表示ステップと，
前記ノードデータに含まれる値に係る演算をコンピュータが実行す
る実行ステップとを備え，
前記ノードデータは，ルートノードを除いて，当該ノードの親ノード
を特定する親ノード識別情報を含んでおり，
前記情報表示ステップは，前記親ノード識別情報を利用して，前記ノ
ードの木構造を表示する木構造表示ステップと，前記表示された木構造
のノードのうちの選択されたノードの前記自ノード変数データ，前記上
位ノード変数データを表示するノードデータテーブル表示ステップを
含み，
前記実行ステップは，前記自ノード変数データの値を更新するための
演算を実行する情報管理方法。」である点。
（相違点１）
本件発明１が，
「管理すべき情報」を「文書ファイル」として記憶し，
当該「文書ファイルの情報」をコンピュータが表示するものであるのに
対し，甲１発明は，「知識」を「データベース」に記憶し，「更に前記
知識を知識記述言語に変換して知識ベースとして記述」
し，
当該
「知識」
をコンピュータが表示するものである点。
（相違点２）
本件発明１が，「ノードデータ」に「スクリプト」を含み，当該スク
リプトは「当該ノードデータに含まれる変数データである自ノード変数
データと，当該ノードの直系上位ノードのノードデータに含まれる変数
データである上位ノード変数データを利用した演算を行って，前記自ノ
ード変数データの値を求める代入用スクリプト」を含むものであり，情
報表示ステップでは，前記「スクリプト」も表示されるのに対し，甲１
発明では，ノードデータにスクリプトが含まれることは特定されておら
ず，更に当該スクリプトを表示することも特定されていない点。
（相違点３）
本件発明１が，「情報評価ステップ」で「前記代入用スクリプトの実
行により，前記自ノード変数データの値を更新する」ものであるのに対
し，甲１発明は，「実行ステップ」において「ノードデータに含まれる
属性値の数式の計算」が行われ，計算されたノードデータに基づき「知
識ベース」の更新が行われるものの，「情報評価ステップ」で「代入用
スクリプト」の実行によって「自ノード変数データの値を更新」を行う
ものではない点。
第３ 当事者の主張
⑴ 原告の主張
ア 相違点２の認定に誤りがあることについて
(ア)ａ 甲１発明にはスクリプトが存在するから，本件審決の相違点２の
認定は誤りである。
ｂ 本件明細書では，「次に，代入用スクリプト及び生成用スクリプト
の具体例を，図８の「＊」を付したノードをターゲットノードとして
説明する。図９に示すように，ターゲットノードは，要計算の公開変
数として，「スライス数」と「色」を有しており，代入用スクリプト
として，「スライス数＝同一面数；」と「色＝同一面数」を有してい
る。評価前は，図１０に示すように，公開変数「スライス数」と「色」
の値は空欄となっている。」とし（【００７２】），スクリプトの具
体的実施態様として，
「スライス数＝同一面数；」
及び
「色＝巾木色；」
という２つの数式を開示する。
本件発明１において，
スクリプトとは，
単なる代入表現をその範囲に含むものである。
一方，甲１発明では，「“内箱”のノードでは，“内箱本体”に入
力すべき３つの属性(“高さ” “幅” “長さ”)を自己の大きさから
決定する。又，
“内箱”自身の大きさは，親ノードである“引き出し”
にその決定を委ねる。」（【００３０】），「この様にして全てのデ
ータ入力作業が終了すれば，データベース内には，図６に示す如きイ
メージでデータ構造が登録され，最上位のノードである“引き出し”
の“高さ” “幅” “長さ”が，知識ベースに対する入力データとな
る。」（【００３１】）として，例えばコンピュータが，「内箱本体
の高さ」（自ノードである「内箱本体」の入力属性である「高さ」を
意味する属性値の名称である。）に対し，内箱の「自己の高さ」（親
ノードである「内箱」の入力属性である「高さ」を意味する属性値の
名称である。）の値を代入する態様が記載されている。具体的には，
甲１の【図６】の
内箱本体の高さ 自己の高さ
との記載がそれに該当する。これは，「自己の高さ」という名称を持
つ属性の値を，「内箱本体の高さ」という名称を持つ属性の値に代入
することを示す表記であるから，単なる代入表現をスクリプトの範囲
に含む本件発明１との関係では，このような記載もまたスクリプトを
開示するものということができ，プログラム言語で表現すると，実質
的に，
内箱本体の高さ＝自己の高さ；
という代入式が記載されているに等しいと考えることができる。
さらに，甲１には，「属性値の定義（Ｓ６）では，決定属性に分類
された属性に対して属性値（“黒”，“スチール”）の入力が行なわ
れる。ここで，属性値としては，数値に限らず，数式や条件分岐が入
力可能である。」（【００２２】）との記載もあり，属性値として，
数式だけでなく，条件分岐も記載することができ，これがスクリプト
であることに疑いはない。
(イ) さらに，甲１に，本件発明１の構成要件Ｆの「当該ノードデータに
含まれる変数データである自ノード変数データと，当該ノードの直系上
位ノードのノードデータに含まれる変数データである上位ノード変数デ
ータを利用した演算を行って，前記自ノード変数データの値を求める代
入用スクリプト」が開示されていることは，以下のとおりである。
甲１発明では，自ノードを「内箱本体」とした場合，この直系上位ノ
ード「内箱」の変数データ「高さ」の値を，自ノード「内箱本体」の変
数データ「高さ」に代入する甲１の【図６】の
内箱本体の高さ 自己の高さ
との表記が，上位ノード変数データ「自己の高さ」（＝直系上位ノード
「内箱」の入力属性「高さ」）を，自ノード変数データ「内箱本体の高
さ」（＝自ノード「内箱本体」の入力属性「高さ」）に代入して，その
値を求める代入用スクリプトである。仮に，「内箱本体の高さ」，「内
箱本体の幅」
及び
「内箱本体の長さ」
は上位ノード変数データに該当し，
自ノード「内箱本体」の入力属性である「高さ」，「幅」及び「長さ」
は自ノード変数データに該当すると解したとしても，上位ノード変数デ
ータ「内箱本体の高さ」を，自ノード「内箱本体」の自ノード変数デー
タ「高さ」に代入して，その値を求めていることになる。
ところで，この代入用スクリプトは，自ノード変数データ「高さ」が
含まれている自ノード「内箱本体」ではなく，直系上位ノード「内箱」
に記載されている。しかし，本件発明１において，代入用スクリプトと
自ノード変数データとが，同一のノードデータに含まれることは要件と
されていないから，この点が，本件発明１と甲１発明との相違点となる
ことはない。すなわち，本件発明１では，構成要件Ｂで「複数のノード
データを含む文書ファイル」
が規定されていることから，
本件発明１は，
文書ファイル中に，１つではなく，２つ以上のノードデータを具備する
ものであり，これを受けた構成要件Ｄの「前記ノードデータ」，構成要
件Ｆの「当該ノードデータ」は，いずれも構成要件Ｂの「複数のノード
データ」を意味する。構成要件Ｄは，①「複数のノードデータのいずれ
かがスクリプトを含む」ことを規定し，構成要件Ｆは，②「代入用スク
リプトが，複数のノードデータのいずれかに含まれる自ノード変数デー
タと，その上位ノード変数データとを利用した演算により自ノード変数
データを求める」ことと，③「スクリプトが代入用スクリプトを含む」
こととを規定している。代入用スクリプトも，自ノード変数データも，
共に複数のノードデータのいずれかに含まれていれば足りるものであり，
両者が同じノードに含まれていることは，一切規定されていない。
仮に甲１発明において，代入用スクリプトと自ノード変数データとが
同じノードに含まれることが要件であるとしても，甲１には代入用スク
リプトの開示がある。すなわち，甲１の【図６】の自ノード「内箱本体」
における，
入力属性 高さ
…
…
との記載は，自ノード「内箱本体」の変数「高さ」に対し，上位ノード
変数の値を入力するスクリプトを意味する。そして，その際に入力に用
いられるのは，
内箱本体の高さ 自己の高さ
との代入用スクリプトである。そうすると，甲１の【図６】における自
ノード「内箱本体」には，結局のところ，
「高さ」＝（「内箱本体の高さ」＝「自己の高さ」）；
という，親ノード変数データの値「内箱本体の高さ」を，自ノード変数
データ「高さ」に代入するための，代入用スクリプトが含まれている。
(ウ) このように，甲１には，代入用スクリプトの開示があることを前提
とすれば，甲１発明は，正しくは以下のとおり認定されるべきである。
甲１－ａ コンピュータが知識ベースを構築する知識ベース構築方法
であって，
甲１－ｂ 前記コンピュータに複数のノードそれぞれに対応付けて入
力された知識を，前記ノードを定義するノード名称に対応付
けられた複数のノードデータを含むデータベースに前記コ
ンピュータが記憶し，更に前記知識を知識記述言語に変換し
て知識ベースとして記述する記憶ステップと，
甲１－ｃ 前記記憶ステップで記憶された知識を前記コンピュータが
表示する表示ステップと，
甲１－ｄ 前記ノードデータに含まれる属性値のスクリプトを前記コ
ンピュータが実行する実行ステップとを備え，
甲１－ｅ 前記ノードデータは，最上位のノードを除いて，当該ノー
ドの親ノードを特定する親ノードの名称を含み，前記ノード
データには前記スクリプトを含み，
甲１－ｆ 前記スクリプトは，当該ノードの親ノードのノードデータ
に含まれる属性値である親ノード属性値（『内箱の本体の高
さ』）を当該ノードデータに含まれる属性値である自ノード
属性値
（
『高さ』
）
として代入するスクリプトを含んでおり，
甲１－ｇ 前記表示ステップは，前記親ノードの名称を利用して，前
記ノードのツリーを表示するツリー表示ステップと，前記表
示されたツリーのノードのうちの選択されたノードの前記
自ノード属性値，前記親ノード属性値を表示する属性値表示
ステップを含み，
甲１－ｈ 前記実行ステップは，前記スクリプトにより，親ノード属
性値を自ノード属性値として代入して，自ノード属性値を求
めるステップを含む
知識ベース構築方法。
(エ) 本件審決が，相違点２を本件発明１と甲１発明の実質的相違点とし
た根拠は，専ら甲１の「数式や条件分岐」が「スクリプト」とは異なる
という点に依拠したものであるから，甲１の数式や条件分岐がスクリプ
トに該当するものである以上，本件審決の相違点２の判断には誤りがあ
る。
この点は，本件発明１４についても同様である。
イ 相違点３の認定に誤りがあることについて
(ア) 本件審決が，相違点３を本件発明１と甲１発明の実質的な相違点と
した理由の１つは，甲１にスクリプトが開示されていないというもので
あり，これが誤りであることは，前記アで主張したとおりである。
(イ) 本件審決は，本件発明１の構成要件Ｈについて，「シミュレーショ
ン動作のために具体的には，図６の「操作ボタン表示領域２０ａ」にあ
る，「「評価」ボタン」を押下し，その結果として「自ノード変数デー
タの値」の値が更新されることを意味するものと解される。」とし，こ
の点が甲１発明に記載されていないことも，実質的な相違点と認定して
いる。
ａ 本件発明１の記載を正しく解釈すれば，構成要件Ｈの「更新」ステ
ップは，文書ファイルに含まれている自ノード変数データの値を変更
するものであれば足りる。本件審決が，本件発明１の更新ステップが
「操作ボタン表示領域２０ａにある評価ボタンを押下する」との態様
に限定される根拠とする本件明細書の記載は，いずれも実施例にすぎ
ない。
ｂ 甲１発明では，構成要件１－ｈは「前記実行ステップは，前記スク
リプトにより，親ノード属性値を自ノード属性値として代入して，自
ノード属性値を求めるステップを含む」というものであるが，ここで
スクリプトにより代入された自ノード属性値は，甲１の「…最上位の
ノードに入力属性として定義されている属性名が，知識ベース運用の
際にデータを入力すべき項目であり，該データ入力によって知識ベー
スが動作を開始することになる。」（【００２３】），「…あるノー
ドの知識を変更する場合は，詳細知識定義装置(６)を用いてデータベ
ース(４)の該当箇所を書き換えるだけで，これが知識ベース(１)の知
識に反映される。」（【００２６】）との記載から明らかなように，
知識ベースの知識に反映されることとなる。
そして，知識ベースが文書ファイルであることについては，審決に
おいて，相違点１が実質的相違点でないとして適切に認定されたとお
りであるから，甲１には，文書ファイルに記載された自ノード属性値
をスクリプトにより変更することが開示されている。
ウ 新規性の判断に誤りがあることについて
前記ア及びイのとおり，正しく認定された甲１発明を前提とすれば，本
件発明１と甲１発明の相違点２及び相違点３は存在しない。
同様に，
本件発明１４と甲１発明の相違点２及び相違点３も存在しない。
したがって，本件審決の判断は誤りである。
エ 小括
以上のとおり，本件発明１と甲１発明に相違点は存在しないから，本件
発明１は，本件特許出願の優先日前に頒布された刊行物である甲１に記載
された発明ではないとした本件審決の判断は誤りである。また，同様に，
本件発明１の発明特定事項を全て含む本件発明１４について，本件特許出
願の優先日前に頒布された刊行物である甲１に記載された発明ではない
とした本件審決の判断は誤りである。
⑵ 被告の主張
ア 相違点２の認定に誤りがないことについて
(ア) 本件発明１における「スクリプト」の意義
ａ スクリプトとは「コンピューターで，一連の処理手順を記述した簡
易プログラム」（甲１４），「プログラムやマクロを記述したテキス
トファイル」，「コンピュータに処理を自動的に実行させるための命
令を記述したファイル」（乙１）を意味し，このようなスクリプトを
記述する言語を「スクリプト言語」という（乙２）。
ｂ 本件発明１において，「スクリプト」は，スクリプト言語として使
用されている任意の言語を使用して作成されるものである（本件明細
書【００１６】，【００１９】，【００３４】，【００５７】）。
ｃ 本件発明１の構成要件Ｇの「…スクリプトを表示するノードデータ
テーブル表示ステップ」の記載及び本件明細書【００４６】の記載か
ら明らかなとおり，スクリプトは画面に表示される。
ｄ 本件明細書【００５７】の記載から，「スクリプト」は，本件発明
を利用する者がスクリプト領域又は別のウィンドウを通して直接入力
できるものである。
ｅ 本件明細書【００６７】以下及び【図１２】のとおり，「スクリプ
ト」はそのまま実行される。
ｆ 以上によれば，本件発明における「スクリプト」は，①任意のスク
リプト言語を使用して作成される簡易なプログラムであって，②作業
者が，スクリプトの画面表示を通じて，直接入力し，実行できるプロ
グラムをいう。
(イ) 本件発明１における「代入用スクリプト」の意義
本件明細書【００３２】の記載から，本件発明１における「代入用ス
クリプト」
は，
(ア)のとおりの性質を有する簡易なプログラムであって，
かつ，自ノードの変数の値を演算するために，自ノードの変数の値であ
る自ノード変数データと，そのノードの直系上位ノードの公開変数の値
である上位ノード変数データを利用して記述されるものをいう。
(ウ) 甲１発明における「スクリプト」ないし「代入用スクリプト」の不
存在
ａ 甲１発明において，「知識ベース」は「知識記述言語」で記述され
るところ，この「知識ベース」は，所定の「知識記述言語」で記述さ
れた一種のコンピュータプログラムであり，「知識記述言語」はプロ
グラミング言語である。
甲１発明において，
データベース内のデータは，
「データ変換装置」
により「知識記述言語」に変換されるから，データベース内のデータ
は，「知識記述言語」すなわちプログラミング言語，スクリプト言語
で記載されたものではなく，「スクリプト」に当たらない。
ｂ 原告は，甲１の【図６】がスクリプトであると主張するが，そこか
ら読み取れるのは，「内箱」ノードの「内箱本体の高さ」と「自己の
高さ」が同じ値となるという限度であり，「内箱」ノードの「高さ」
を「内箱本体」ノードの「高さ」に代入しているとはいえない。
また，甲１には，原告の指摘する記載（内箱本体の高さ・自己の高
さ）が，知識記述言語，すなわちプログラミング言語，スクリプト言
語であるとの記載も示唆もない。
甲１発明は，
「知識ベースを構築する際には， 知識記述言語につい
ての知識や経験が必要である」（【０００２】）という従来技術の課
題に対し，「知識記述言語（すなわちプログラミング言語，スクリプ
ト言語）についての知識や経験を有しない知識所有者であっても，階
層構造定義装置(５)，詳細知識定義装置(６)及び知識参照装置(７)を
操作することによって，容易に知識ベース(１)を構築することが出来
る」ことを作用効果とするものであり（【００３２】），データベー
ス内に知識記述言語（すなわち，プログラミング言語，スクリプト言
語）の記載を求めることは，上記作用効果を阻害するものであって，
甲１発明の
【図６】
に
「スクリプト」
が開示されているとはいえない。
イ 相違点３の認定に誤りがないことについて
本件審決において，相違点３は，「情報評価ステップ」で「代入用スク
リプト」の実行によって「自ノード変数データの値を更新」する点に求め
られており，ボタンの押下についてのみ指摘する原告の主張は失当である。
ウ 新規性の判断に誤りがないことについて
原告主張の甲１発明を認定することはできないから，本件発明１と甲１
発明の間には，本件審決認定のとおり相違点２及び相違点３が存在し，こ
れらは実質的なものである。
同様に，本件発明１４と甲１発明の間には相違点２及び相違点３が存在
し，これらは実質的なものである。
エ 小括
以上のとおり，本件発明１と甲１発明には相違点が存在し，それは実質
的なものであるから，本件発明１は，本件出願の優先日前に頒布された刊
行物である甲１に記載された発明ではないとした本件審決の判断には誤
りがない。また，同様に，本件発明１の発明特定事項を全て含む本件発明
された発明ではないとした本件審決の判断には誤りがない。
したがって，原告主張の取消事由１は理由がない。
⑴ 原告の主張
ア 相違点２及び相違点３に係る容易想到性判断に誤りがあることについて
甲１発明は，正しくは前記１(1)ア(ウ)のとおり認定されるべきである
ところ，この場合，本件発明において，代入用スクリプトと自ノード変数
データとが，同一のノードデータに含まれるのに対し，甲１発明ではそう
ではないことが，本件発明１と甲１発明の相違点に当たることになり，甲
トを，直系上位ノードではなく，自ノードに含ませることとすることの容
易想到性が問題となる。
(ア) 甲３には，代入用スクリプトを，当該スクリプトによって値が代入
されることになる変数データを含んだ自ノードに記載することが開示さ
れ，甲７には，階層構造を有するデータにおいて，スクリプトを，当該
スクリプトによって値が演算されることになるノード変数データを含ん
だ自ノードに記載することが開示されている。さらに，甲２には，ノー
ドデータにおいて，代入用スクリプトを，当該代入用スクリプトによっ
て値が代入されることになる変数データを含んだ自ノードに記載するこ
とが示唆されている。
したがって，当業者において，甲１発明について，本件発明１との相
違点に係る構成である「代入用スクリプトが自ノードに含まれる」もの
とすることは，設計事項にすぎないものであり，容易に想到できる。
(イ) 被告は，甲１発明では下位から上位への順に定義する旨が記載され
ており，これを上位から下位という順に変更することについて動機付け
がなければ構成の変更は容易とはいえないと主張するが，被告の指摘す
る「下位ノードから上位ノードに向かって，必要な属性値の定義等を行
っていく」という態様は，甲１発明の一実施例にすぎないものである。
イ 本件審決認定に係る相違点２の容易想到性判断に誤りがあることについ
て
相違点２を本件審決のとおりに認定したとしても，本件審決の相違点２
の容易想到性の判断には誤りがある。
本件審決は，知識記述言語についての知識や経験を持たない知識所有者
自身によって操作されるデータベースを介して操作することにより，知識
ベース構築者自身が知識ベースを容易に構築することが出来るようにす
るという甲１発明の課題や目的に照らせば，「ノードデータ」に「スクリ
プト」を含ませ，さらに当該スクリプトに「代入用スクリプト」を含むよ
う構成することは，その動機付けを欠き阻害要因を有するとか，数式や条
件分岐を「スクリプト」に変換して表示させる必要性はないと判断した。
しかし，甲１発明によって達成されるのは，システム開発者が間に立つ
ことなく，知識をデータベース経由で知識ベースに入力可能となる点及び
知識の体系化が自動的に行われる点に限られるのであり
（
【００１２】
）
，
甲１発明において，ノードデータに記載される数式や条件分岐をスクリプ
トで記載し，表示することができることとしても，①知識を知識所有者が
自らデータベースに入力可能である，②知識の体系化が自動的に行われる，
という甲１発明の効果が阻害されることはない。
また，本件発明１の「スクリプト」は，単なる代入表現をその範囲に含
むものであり，かかる表現であれば，知識記述言語についての知識や経験
を有することのない知識所有者であっても，容易に記述することができる。
仮に，甲１発明が，プログラムの知識や経験がない知識所有者が直接知
識を追加・修正することができるよう，データベースに記載する数式や条
件分岐をスクリプトで記述することを認めないものであるとしても，知識
記述言語についての知識や経験を有するシステム開発者が，知識ベースの
知識を直接見ることができることとするため，知識ベースにスクリプトと
して反映された数式や条件分岐等の属性値を表示するための機能を付加
することは，上記甲１発明の課題や目的に反するものではない。
したがって，本件審決における相違点２に関する容易想到性の判断は誤
りである。
ウ 本件審決認定に係る相違点３の容易想到性判断に誤りがあることについ
て
甲１発明において，
ノードデータにスクリプトを記載し，
表示すること，
及び
「評価」
ボタンにより
「自ノード変数データの値を更新」
することは，
いずれも当業者の設計事項であり，阻害要因はない。
したがって，本件審決の相違点３の容易想到性の判断は誤りである。
エ 小括
以上によれば，本件発明１は，甲１発明及び甲２ないし１０に記載され
た発明に基づいて，当業者が容易に発明をすることができたものであるか
ら，これを否定した本件審決の判断は誤りである。また，同様に，本件発
明１の発明特定事項を全て含む本件発明１４についても，甲１発明及び甲
とができたものであるから，これを否定した本件審決の判断は誤りである。
⑵ 被告の主張
ア 原告主張のとおりに甲１発明を認定したとしても，本件審決の容易想到
性判断に誤りがないことについて
仮に，甲１発明が前記１(1)ア(ウ)のとおり認定されるべきであるとし
ても，甲３には，本件発明１における意義の「ノード」，すなわち「ノー
ドの木構造」を「表示」できる態様のノードの記載はないし，甲２及び甲
したがって，当業者において，甲１発明について，本件発明１との相違
点に係る構成である「代入用スクリプトが自ノードに含まれる」ものとす
ることが設計事項にすぎないとはいえない。
また，甲１発明では下位から上位への順に定義する旨が記載されており，
これを上位から下位という順に変更することについて動機付けがなけれ
ば，
原告のいうような構成の変更は容易とはいえないし，
甲１
【００２９】
及び
【００３０】
が，
自ノードの属性を
「親ノード…にその決定を委ねる」
旨記述し，【図６】で「親ノード…にその決定を委ねる」態様として，親
ノード側に代入関係を記載していること，甲１【００２８】のとおり，当
初のデータ作成において下位から上位にデータを入力していく態様が取
られていることからすれば，甲１発明において上位ノードから下位ノード
に数値を引き継ぐ場合の代入関係は上位ノードに記述されることが予定
され，下位ノードに記述することは想定していないと考えるのが自然であ
り，当業者がソフトウェアの効率性を犠牲にしてまで代入関係を上位ノー
ドに記述する態様に加えて下位ノードに記述できる態様を加える技術的
意義はない。
イ 本件審決認定に係る相違点２の容易想到性判断に誤りがないことについ
て
ノードデータにスクリプトを記載させるということは，甲１発明の利用
者がスクリプトを記載できることを意味するところ，甲１発明は，プログ
ラミング言語を扱えない知識所有者による利用を想定した技術なのであ
るから，甲１発明の数式や条件分岐をスクリプトとして記載することはむ
しろ甲１発明の目的に反する。
ウ 本件審決認定に係る相違点３の容易想到性判断に誤りがないことについ
て
相違点３に関する事項は，当業者の設計事項であり，阻害要因はない旨
の原告の主張は，その前提を誤り，かつ理由がないものであり，本件審決
における相違点３に関する容易想到性の判断に誤りはない。
エ 小括
以上によれば，本件発明１及び本件発明１４は，甲１発明及び甲２ない
し１０に記載された発明に基づいて，当業者が容易に発明をすることがで
きたものではないから，本件審決の判断に誤りはない。
したがって，原告主張の取消事由２は理由がない。
⑴ 原告の主張
ア 本件発明１は，被告の主張によれば，文書ファイルの内容を変更しない
態様を含むものであるが，この態様は，明細書に一切記載がない。
したがって，本件明細書は，当業者が過度の試行錯誤を行う必要なく，
本件発明を実施することができる程度に記載されたものとはいえず，本件
審決の判断には誤りがある。
イ なお，原告は，審判手続において，被請求人（被告）の主張によれば，
本件発明は，文書ファイルに含まれる自ノード変数データの値を書き換え
ない態様を含むものであるから，実施可能要件違反であるとの内容を主張
したが，本件審決は，上記原告の主張が「専ら本件無効審判事件と関連す
る侵害訴訟においてなされる，被請求人の主張に基づくものであり，当該
訴訟は，本件無効審判事件と関連するものであることは推察されるものの，
本件無効審判事件の，とりわけ無効理由３について検討するにあたっては
考慮されない」と判断している。しかし，本来，本件審決は，本件発明が
文書ファイルに含まれる自ノード変数データの値を書き換えない態様を
含むものであるか，それとも含まないものであるかについて判断した上で，
無効理由３についての結論を示すべきであったものであり，不当である。
ウ 本件発明１は実施可能要件に適合しないから，本件発明１４も実施可能
要件に適合しない。
したがって，これと異なる本件審決の判断は誤りである。
⑵ 被告の主張
ア 本件明細書には，自ノード変数データの値を書き換えない実施例が開示
されており，原告の主張には理由がない。
すなわち，実施例では，表示画面（【図６】）がツリービューアとデザ
インテーブルから構成される（【００４４】）。デザインテーブルは，ツ
リービューアに表示されたノードのうち選択されたノードが有する情報
を表示する領域であり，このうち操作ボタン表示領域２０ａには，デザイ
ンテーブルに関する各種操作を行うための操作ボタンが表示されている
（【００４６】）。表示ボタンには，「更新」ボタンと「評価」ボタンが
含まれている。
「評価」ボタンは，代入用スクリプトを実行するものである（【００６
される。これにより，公開変数「スライス数」の値に，上位ノードの公開
変数である「同一面数」の値「１」が代入される（「色」「巾木色」も同
様）（【００７３】）。そして，その結果はデザインテーブルに表示され
る（【図１３】）。
このようにして変更されたデザインテーブルの編集内容は，「更新」ボ
タンを押すことによって，文書情報に反映される（【００５８】）。
構成要件Ｈの文言は「前記情報評価ステップは，前記代入用スクリプト
の実行により，前記自ノード変数データの値を更新するステップを含む」
であり，特許請求の範囲としてクレームされているのは代入用スクリプト
の実行による情報評価ステップである。
これは，
上記実施例でいえば，
「評
価」ボタンの機能を指すものであり，「更新」ボタンの機能を含むもので
はない。すなわち，情報を表示画面（実施例ではデザインテーブル）に表
示するところまでをクレームしているのであり，その後の文書情報に反映
する機能はクレームには含んでいない。
この点は，本件審決も「評価」ボタンの押下が，「代入用スクリプト」
の実行に該当することを適切に認定しているところである。
本件審決は，構成要件Ｈの「更新」が，「評価」ボタンの押下により実
行されるものであり，文書ファイルの書換えを伴うものではないことを前
提に実施可能性要件を判断したものであり，本件発明１が実施可能要件に
適合するとした本件審決の判断に誤りはない。
イ 本件発明１は，実施可能要件に適合するから，本件発明１が実施可能要
件に適合することを前提に，本件発明１４が実施可能要件に適合するとし
た本件審決の判断に誤りがあるとの原告の主張も理由がない。
したがって，原告主張の取消事由３は理由がない。
⑴ 原告の主張
ア 本件発明１は，被告の主張によれば，文書ファイルの内容を変更しない
態様を含むものである。ところが，本件明細書を参酌しても，文書ファイ
ルに含まれる自ノード変数データの値を書き換えることなく，どのように
して情報の更新を行うのか，どのように多数の利用者間で更新した情報を
共有し，再利用することができるのか全く明らかでない。
イ 本件審決は，被請求人（被告）の主張によれば，本件発明が文書ファイ
ルに含まれる自ノード変数データの値を書き換えない態様を含むもので
あるにもかかわらず，サポート要件違反であるとの原告の主張について判
断を示しておらず，不当である。
ウ 本件明細書は，当業者が本件発明１により，その課題を解決できるもの
と認識できる程度に記載されたものとはいえず，本件発明１はサポート要
件に適合しない。
本件発明１はサポート要件に適合しないから，本件発明１４もサポート
要件に適合しない。
したがって，これと異なる本件審決の判断は誤りである。
⑵ 被告の主張
ア 原告の主張は，本件明細書において，文書ファイルに含まれる自ノード
変数データの値を書き換えることなく，どのようにして情報の更新を行う
のかが明らかでないというものであるが，
前記３⑵で主張したとおり，
「評
価」ボタンの押下による更新が文書ファイルの書換えを含まないことは，
本件明細書の記載から明らかであるから，原告の主張は前提を欠く。
イ 以上のとおり，本件発明１は，サポート要件に適合するから，本件発明
に適合するとした本件審決の判断に誤りがあるとの原告の主張も理由が
ない。
したがって，原告主張の取消事由４は理由がない。
第４ 当裁判所の判断
⑴ 本件明細書（甲１８）の発明の詳細な説明には，別紙１の記載がある。
(2) 前記(1)の記載事項によれば，本件明細書には，本件発明に関し，次のよ
うな開示があることが認められる。
ア コンピュータを用いて各種情報の管理を行う場合，それぞれの情報を記
憶したファイルを，所定のフォルダに保管することによって行うのが一般
的であるが，作成したフォルダの構造及びそれぞれのフォルダに保管する
ファイルの種類等は，任意であってフォルダの作成者に依存するため，作
成者以外の者が必要な情報に適確にアクセスすることは，必ずしも簡単で
はない（【０００２】）。このような問題に対処するため，案件（プロジ
ェクト）毎にツリーを作成して表示し，作成した文書ファイルを，表示さ
れたツリーの任意のノードに付随させて，サーバコンピュータに保管する
文書情報管理システムや，異なる計算機やアプリケーションで共通に取扱
うことができるＸＭＬのような構造化文書規格を用いた構造化文書を木
構造として捉えて処理する構造化文書処理システムも存在したが，木構造
のノードに含まれる情報は，相互に関連するものが多いにもかかわらず，
これらの管理システムにおいては，それぞれの文書の該当する部分を個別
に更新する必要があり，十分効率的とはいえなかった（【０００３】ない
し【０００５】）。
イ 「本発明」は，上記事情に鑑み，管理すべき情報の更新を，簡単かつ効
率的に行うことができる情報管理方法を提供することを目的とし，その課
題を解決する手段として，コンピュータが情報を管理する情報管理方法で
あって，前記コンピュータに複数のノードそれぞれに対応付けて入力され
た管理すべき情報を，前記ノードを識別するノード識別情報に対応付けら
れた複数のノードデータを含む文書ファイルとして前記コンピュータが
記憶する情報記憶ステップと，前記情報記憶ステップで記憶された前記文
書ファイルの情報を前記コンピュータが表示する情報表示ステップと，前
記ノードデータに含まれるスクリプトを前記コンピュータが実行する情
報評価ステップとを備え，前記ノードデータは，ルートノードを除いて，
当該ノードの親ノードを特定する親ノード識別情報を含んでおり，前記ス
クリプトは，当該ノードデータに含まれる変数データである自ノード変数
データと，当該ノードの直系上位ノードのノードデータに含まれる変数デ
ータである上位ノード変数データを利用した演算を行って，前記自ノード
変数データの値を求める代入用スクリプトを含んでおり，前記情報表示ス
テップは，前記親ノード識別情報を利用して，前記ノードの木構造を表示
する木構造表示ステップと，前記表示された木構造のノードのうちの選択
されたノードの前記自ノード変数データ，前記上位ノード変数データ及び
前記スクリプトを表示するノードデータテーブル表示ステップを含み，前
記情報評価ステップは，前記代入用スクリプトの実行により，前記自ノー
ド変数データの値を更新するステップを含むという構成を採用した（【０
ウ 「本発明」においては，利用者が入力したデータに含まれるスクリプト
を利用して，ノードデータを更新することができるので，管理すべき情報
の更新を，簡単かつ効率的に行うことができ，複数のノードデータを含む
るので，多数の利用者による情報の共有化，再利用を，簡単かつ効率的に
行うことができるとともに，文書データに基づいて，簡単にノードの木構
造を表示させることができるため，業務や案件全体の把握を簡単に行うこ
とができ，さらに，表示された木構造の個々のノードに対応付けられた詳
細情報を簡単に表示することができる（【０００９】）ため，「本発明」
によれば，管理すべき情報の更新を，簡単かつ効率的に行うことができる
という効果を奏する（【００２４】）。
(1) 甲１の記載事項について
ア 甲１には，別紙２の記載がある。
イ 前記アの記載事項によれば，甲１には，次のような開示があることが認
められる。
(ア) 知識ベースを構築する際には，知識記述言語についての知識や経験
が必要であり，従来は，知識ベース(１)に接続した知識ベース構築装置
(13)は，知識記述言語についての知識や経験を有するシステム開発者
(14)が操作する運用形態を採っていた。システム開発者(14)は，知識ベ
ース構築に際して知識所有者(15)との口頭でのインタビューを行なっ
て，知識所有者(15)から知識を獲得し，これに基づいて資料を作成し，
知識を体系化した上，該資料に基づいて，知識ベース構築装置(13)を操
作し，知識ベース(１)を構築していた。しかし，インタビューが口頭で
行われるため，知識ベース(１)を一旦構築した後も，知識の追加や修正
が必要となり，また，資料作成のために多大な労力と時間を要し，その
上，知識所有者(15)の知識が知識体系化の際に作成された資料と知識ベ
ース(１)内に記述された知識とによって保存され，管理されているから，
知識を追加し，或いは修正する必要が生じた場合には，システム開発者
(14)が再度，
知識所有者(15)とのインタビューを行なって，
知識の獲得，
体系化，及び知識ベース構築のプロセスを繰り返さねばならず，一連の
処理が極めて煩雑となる問題があった
（
【０００２】
ないし
【０００６】
）
。
(イ) 「本発明」は，知識ベースと知識ベース構築者の間に，知識所有者
自身が操作可能なユーザインターフェースを設けることによって，知識
ベース構築者自身が知識ベースを容易に構築することが出来る知識ベ
ース構築システムを提供することを目的とし，課題を解決するための手
段として，複数のノードを互いに関係づけてなる階層構造を有して各ノ
ードには詳細な知識が定義されるデータ構造のデータベース(４)と，該
データベース(４)内のデータを前記知識記述言語に変換して知識ベー
ス(１)に記述するデータ変換装置(３)と，データベース(４)内に知識の
階層構造を定義するための階層構造定義装置(５)と，データベース(４)
内に定義された階層構造の各ノードに対して詳細な知識を定義するた
めの詳細知識定義装置(６)とを具えた構成を採り，これにより，知識所
有者自身が知識ベース構築者となって操作することができ，従来の知識
ベース構築者による知識獲得プロセスは不要となり，知識の体系化は自
動的に行なわれ，その結果が全てデータベースに登録されるため，知識
の統一的な保存，管理が可能となり，さらに，知識ベースの知識を変更
する必要が生じた場合にも，データベースを修正する処理だけで済むと
いう効果を奏する（【０００７】，【０００８】，【００１２】）。
⑵ 相違点２の認定の誤りについて
ア 原告は，甲１発明にはスクリプトが含まれているとして，本件審決が相
違点２を実質的なものと認定したのを誤りと主張する。
(ア) 甲１発明の実施例では，製品設計に関する知識ベースを作成する場
合，先ず階層構造定義装置(５)の操作によって，製品を構成する複数の
部品のそれぞれにノード名称を付し，これをツリー上に連結して親子関
係を定義する（【００１５】ないし【００１７】）。
次に，部品構成ツリー上の各ノード，すなわち部品や部位についての
知識が詳細知識定義装置(６)によって定義される。この作業は階層構造
の下位から上位へ向かってノード毎に行われ，各ノード毎に図３に示す
処理が実行される。まず，１つのノードが選択され（Ｓ３），選択され
たノードについて，必要な属性の定義(Ｓ４。例えば部品の高さ，幅，長
さ，色，材質等の属性名の定義)，属性の分類(Ｓ５。自己の親ノードか
らその属性値を入力すべき属性である入力属性
（部品の高さ，
幅，
長さ）
と，自己のノードで属性値を決定すべき決定属性（色，材質等）への分
類)及び属性値の定義（Ｓ６。決定属性への属性値（黒，スチール等）の
入力）が行われる（【００１９】ないし【００２２】）。この属性値の
入力について，「数値に限らず，数式や条件分岐が入力可能である。」
と明記されている（【００２２】）ところ，ここでいう数式や条件分岐
は，記述に基づいてコンピュータが処理を実行するためのものであり，
スクリプトの定義である「コンピューターで，一連の処理手順を記述し
た簡易プログラム」（甲１４）に当てはまり得る。
(イ) しかしながら，本件発明１の構成要件Ｆは，「前記スクリプトは，
当該ノードデータに含まれる変数データである自ノード変数データと，
当該ノードの直系上位ノードのノードデータに含まれる変数データであ
る上位ノード変数データを利用した演算を行って，前記自ノード変数デ
ータの値を求める代入用スクリプトを含んでおり，」というものである
ところ，甲１発明に「スクリプト」が開示されているとしても，これに
「代入用スクリプト」が含まれているかが問題となる。
ａ 甲１発明では，数式や条件分岐が含まれると明示されているのは，
自己のノードで属性値を決定すべき「決定属性」に分類された属性に
対する属性値の入力である
「属性値の定義」
のみである
（
【００２２】
）
。
甲１の【図６】の「引き出し」ノードの「決定属性」中の「内箱の高
さ」
欄の
「自己の高さ－外箱の肉厚×２」
との表記がこれに当たるが，
これは自ノード変数データと上位ノードの変数データを利用した演算
ではない。
甲１発明では，入力属性は，自己の親ノードからその属性値をその
まま入力すべき属性であり，例えば甲１の【図６】では，
「内箱本体」
ノードの入力属性欄の変数「高さ」に対し，上位ノード「内箱」の変
数「内箱本体の高さ」の値を入力しているが，これは入力がされてい
るだけで，これに加えて，自ノード変数データと上位ノードの変数デ
ータを利用した演算を行っているものではない。
そして，これ以外に，甲１において，自ノード変数データと，当該
ノードの直系上位ノードのノードデータに含まれる変数データである
上位ノード変数データを利用した演算を行っていることの開示はない。
ｂ 次に，原告は，甲１には，例えばコンピュータが，自ノードである
「内箱本体」の入力属性である「高さ」を意味する属性値の名称であ
る「内箱本体の高さ」に対し，親ノードである「内箱」の入力属性で
ある「高さ」を意味する属性値の名称である内箱の「自己の高さ」の
値を代入する態様が記載されているとし，
具体的には，
甲１の
【図６】
の「内箱」にある
内箱本体の高さ 自己の高さ
との記載がそれに該当すると主張する。
しかし，
甲１発明については，
部品構成ツリー上の各ノードを定義する作業は階層構造の下位から上
位へ向かってノード毎に行われるとされているのであり
（
【００１９】
）
，
上記記載の自ノードは「内箱本体」でなく「内箱」であり，内箱ノー
ドについての自ノード変数データである「「自己の高さ」の値」を，
同じく内箱ノードについての自ノード変数である「内箱本体の高さ」
に代入しているというべきである。上記記載が，自己のノードにて属
性値を決定すべき（【００２１】）「決定属性」の欄にあることもこ
れを裏付ける。換言すれば，同記載は，「内箱」ノードに対する「引
き出し」
ノードのような親
（上位）
ノードで定義された属性の属性値，
すなわち上位ノード変数データを利用しておらず，「当該ノードデー
タに含まれる変数データである自ノード変数データと，当該ノードの
直系上位ノードのノードデータに含まれる変数データである上位ノー
ド変数データを利用した演算を行って，前記自ノード変数データの値
を求める代入用スクリプトを含んでおり」という本件発明の構成要件
Ｆと一致するとはいえない。
ｃ さらに，原告は，本件発明１では，代入用スクリプトも自ノード変
数データも，共に複数のノードデータのいずれかに含まれていれば足
りるものであり，両者が同じノードに含まれていることは，一切規定
されていないので，
甲１発明で，
本件記載が，
自ノード変数データ
「高
さ」が含まれている自ノード「内箱本体」ではなく，直系上位ノード
「内箱」に記載されていることは，本件発明と甲１発明との相違点と
なることはないと主張する。
しかしながら，構成要件Ｆに記載された「当該ノードデータ」を，
原告が主張するように文書ファイルに含まれる
「複数のノードデータ」
と解釈した場合，「複数のノードデータ」に対する「当該ノードの直
系上位ノードのノードデータ」がどのノードデータを意味するのか特
定できなくなり，「当該ノードデータに含まれる変数データである自
ノード変数データ」及び「当該ノードの直系上位ノードのノードデー
タに含まれる変数データである直系上位ノード変数データ」が特定で
きなくなることによって構成要件Ｆ「代入用スクリプト」が特定でき
なくなるから，原告が主張するように解釈する余地はない。また，特
許請求の範囲の記載を素直に読めば，本件発明１の構成要件Ｆの「当
該ノードデータ」とは，ある代入用スクリプトが値を求める変数デー
タ（自ノード変数データ）を含むノードデータであって，特定の一つ
のノードデータを意味することは明らかというべきである。さらに，
本件明細書の【図９】でも，「MW70 巾木（表）」とのラベルが付いた
ノードのノードデータとして，「スライス数＝同一面数；」との代入
用スクリプト，
及び上記代入用スクリプトが値を求める変数である
「ス
ライス数」が記載されている。そうすると，上記代入用スクリプトが
値を求める「スライス数」を含む「当該ノードデータ」が，「MW70 巾
木（表）」とのラベルが付いたノードのノードデータに該当すること
は明らかであるから，本件明細書及び図面に基づいても，特定の一つ
のノードデータを意味する構成要件Ｆの「当該ノードデータ」を，原
告が主張する「複数のノードデータ」と解釈することはできない。
なお，原告は，仮に，甲１発明において，代入用スクリプトと自ノ
ード変数データとが同じノードに含まれることが要件であるとしても，
甲１には代入用スクリプトの開示があるとし，甲１の【図６】におけ
る自ノード「内箱本体」には，結局のところ，
「高さ」＝（「内箱本体の高さ」＝「自己の高さ」）；
という，親ノード変数データの値「内箱本体の高さ」を，自ノード変
数データ「高さ」に代入するための，代入用スクリプトが含まれてい
ると主張する。
しかし，そもそも甲１の【図６】においては，「内箱本体」ノード
における「高さ」は「入力属性」とされており，「決定属性」とはさ
れていないのであるから，代入用スクリプトが含まれているものとは
解し難いものであるし，「内箱」ノードと「内箱本体」ノードが実質
的には同位で一体性の高いものであることを前提にその中に代入用ス
クリプトが含まれていると解する場合には，前記ｂで示したとおり，
上記代入用スクリプトが上位ノード変数データを利用するものではな
いことが一段と明確になるものというべきであるから，いずれにして
も原告の上記主張は結論を左右し得ない。
ｄ 以上によれば，
いずれの点からみても，
原告の主張は採用し得ない。
(ウ) まとめ
そうすると，「甲１発明では，ノードデータに当該ノードデータに含
まれる変数データである自ノード変数データと，当該ノードの直系上位
ノードのノードデータに含まれる変数データである上位ノード変数デー
タを利用した演算を行って，前記自ノード変数データの値を求める代入
用スクリプトが含まれることは特定されておらず，更に当該スクリプト
を表示することも特定されていない点。」が，本件発明１と甲１発明の
相違点となり，これは実質的なものであるから，結局本件発明１と甲１
発明は，相違点２に対応する相違点を有することになる。
そして，本件発明１４は，本件発明１を引用し，プログラムの発明と
して特定したものであり，
本件発明１と実質的に同じ構成を有するから，
本件発明１と同様，甲１発明と実質的な相違点を有することになる。
(3) 相違点３の認定の誤りについて
ア 原告は，甲１には，スクリプトの開示があり，また，文書ファイルに記
載された自ノード属性値をスクリプトにより変更することも開示されて
いるから，相違点３を実質的な相違点と認定した本件審決の判断は誤りで
あると主張する。
イ しかし，甲１発明には代入用スクリプトの開示がないことは上記(2)の
とおりであるし，甲１発明は，「「実行ステップ」において「ノードデー
タに含まれる属性値の数式の計算」が行われ，計算されたノードデータに
基づき「知識ベース」の更新が行われるものの，「情報評価ステップ」で
「代入用スクリプト」の実行によって「自ノード変数データの更新」を行
うものではない」から，いずれにしても原告の主張は採用し得ず，本件審
決の相違点３の認定に誤りはなく，
かつ，
相違点３は実質的なものである。
そして，本件発明１４は，本件発明１を引用し，プログラムの発明とし
て特定したものであり，本件発明１と実質的に同じ構成を有するから，本
件発明１と同様，甲１発明と実質的な相違点を有することになる。
(4) 小括
そうすると，本件発明１と甲１発明には相違点２及び相違点３に相当する
相違点があり，かつ，これらは実質的なものである。
したがって，本件発明１は甲１に記載された発明ではなく，本件発明１が
新規性を欠くということはできない。
同様に，本件発明１の発明特定事項を全て含む本件発明１４は，甲１に記
載された発明ではなく，
本件発明１４が新規性を欠くということもできない。
よって，本件審決の判断に誤りはない。
⑴ 原告は，本件発明１において，代入用スクリプトと自ノード変数データと
が，同一のノードデータに含まれるのに対し，甲１発明ではそうではないこ
とが相違点に当たるとした場合であっても，甲１発明において，直系上位ノ
ードに含まれている代入用スクリプトを，直系上位ノードではなく，自ノー
ドに含ませることとすることは，当業者の技術常識ないし周知技術に基づく
設計事項であるから，当業者は，相違点２及び相違点３に係る構成を容易に
想到することができると主張する。
しかし，前記２において判示したとおり，甲１には，本件発明１の構成要
件Ｆの代入用スクリプトに相当する事項自体が開示されていないから，原告
が主張するように，単に代入用スクリプトを自ノードに含むか含まないかと
いう点のみが相違点となるのではない。
そして，甲１には，ノードデータに当該ノードデータに含まれる変数デー
タである自ノード変数データと，当該ノードの直系上位ノードのノードデー
タに含まれる変数データである上位ノード変数データを利用した演算を行っ
て，前記自ノード変数データの値を求める代入用スクリプトが含まれるよう
にする方法について記載も示唆もない。
したがって，その他の点について判断するまでもなく，当業者が，甲１発
明において，「スクリプトは「当該ノードデータに含まれる変数データであ
る自ノード変数データと，当該ノードの直系上位ノードのノードデータに含
まれる変数データである上位ノード変数データを利用した演算を行って，前
記自ノード変数データの値を求める代入用スクリプト」を含む」という相違
点２に係る本件発明１の構成及び「前記代入用スクリプトの実行により，前
記自ノード変数データの値を更新する」という相違点３に係る本件発明１の
構成を容易に想到することができたとはいえない。
同様に，当業者が，甲１発明において，本件発明１の発明特定事項を全て
含む本件発明１４について，前記相違点２に係る本件発明１４の構成及び前
記相違点３に係る本件発明１４の構成を容易に想到することができたとはい
えない。
(2) 小括
以上によれば，相違点２及び相違点３についての容易想到性を否定した本
件審決の判断に誤りはないから，原告主張の取消事由２は理由がない。
⑴ 原告は，本件発明１（構成要件Ｈ）に，文書ファイルに含まれる自ノード
変数データの値を書き換えない態様が含まれることを前提に，
本件明細書に，
自ノード変数データの値を書き換えない態様の開示がないとして，実施可能
要件違反を主張する。
ア 本件発明１の実施例では，表示画面（【図６】）がツリービューアとデ
ザインテーブルから構成される（【００４４】）。デザインテーブルは，
ツリービューアに表示されたノードのうち選択されたノードが有する情報
を表示する領域であり，このうち操作ボタン表示領域２０ａには，デザイ
ンテーブルに関する各種操作を行うための操作ボタンが表示されている
（【００４６】）。本件明細書の【図６】をみると，表示ボタンには，「更
新」ボタンと「評価」ボタンが含まれ，２０ａに示された１０個の長方形
のうち，左上が「更新」ボタンであり，上段の右から２つ目が「評価」ボ
タンである。
本件明細書の
【００５８】
には，
「デザインテーブル２０の編集内容は，
領域２０ａの更新ボタンを押すことによって，文書情報に反映される。」
と記載されている。このように更新ボタンを押すのが，自ノード変数デー
タを書き換える態様に当たると解される。
イ 一方，代入用スクリプト及び生成用スクリプトは，操作ボタン表示領域
代入用スクリプト及び生成用スクリプトの具体例をみると，本件明細書
の
【図９】
に示すように，
ターゲットノードは，
要計算の公開変数として，
「スライス数」と「色」を有しており，代入用スクリプトとして，「スラ
イス数＝同一面数；」と「色＝ 同一面数」を有している。評価前は，同【図
ている（【００７２】）。
この状態で，このノードを選択し，評価ボタンを押し，評価条件として
代入用スクリプトの実行を設定すると，記憶された代入用スクリプトを実
行する。したがって，公開変数「スライス数」の値は，上位ノードの公開
変数である「同一面数」の値「１」となり，公開変数「色」の値は，同様
に上位ノードの公開変数である「巾木色」の値「Ｆ－２０５」となる。代
入用スクリプト実行後のデザインテーブルの公開変数表示領域２１の表示
例が，同【図１３】である（【００７３】）。
すなわち，本件明細書には，ノードを選択し，評価ボタンを押すことに
より代入用スクリプトが実行され，デザインエリア２０の公開変数表示領
域２１の表示が【図１０】から【図１３】に変化することが開示されてい
るが，
これは，
更新ボタンを押さないと文書情報に反映されないので
（
【０
ると解される。
ウ 本件明細書には，文書情報に反映せずに代入用スクリプトを実行し，公
開変数表示領域の表示を【図１０】から【図１３】のように変更する態様
が明確に記載されており，当業者がこれを実装することに特に困難性はな
いから，本件明細書の発明の詳細な説明の記載は実施可能要件に適合する
ものと解される。
(2) 原告は，
審判合議体は，
本件発明が文書ファイルに含まれる自ノード変数
データの値を書き換えない態様を含むものであるか，それとも含まないもの
であるかについて判断した上で，無効理由３についての結論を示すべきであ
ったと主張するが，本件審決は，本件発明１及び１４の構成要件ＡからＨの
全てについて，その方法を実施するための具体的な記載が発明の詳細な説明
にあるか，そのような記載がない場合には，本件明細書及び図面の記載及び
出願時の技術常識に基づき，当業者が過度の試行錯誤や複雑高度な実験等を
行う必要なく，その方法を実施することができる程度にその発明が記載され
ているかを検討しており，別個の手続である侵害訴訟において被告が主張し
た具体的な態様が本件発明１及び１４に属することを前提とする判断を示さ
なかったからといって不当とはいえないし，原告主張の前提において本件明
細書を検討しても，実施可能要件に適合することは前記(1)のとおりである。
⑶ 小括
以上によれば，本件発明１は実施可能要件に適合するものと認められ，本
件発明１４も同様であるから，原告主張の取消事由３は理由がない。
(1) 原告は，本件発明１は，被告の主張によれば，文書ファイルの内容を変更
しない態様を含むものであるところ，本件明細書を参酌しても，文書ファイ
ルに含まれる自ノード変数データの値を書き換えることなく，どのようにし
て情報の更新を行うのか，どのように多数の利用者間で更新した情報を共有
し，再利用することができるのか全く明らかでないとしてサポート要件違反
を主張する。
しかし，前記４(1)のとおり，本件明細書には，文書情報に反映せずに代入
用スクリプトを実行し，
公開変数表示領域の表示を
【図１０】
から
【図１３】
のように変更する態様が明確に記載されており，
当業者が本件発明１により，
その課題を解決できるものと認識できるから，本件発明１はサポート要件に
適合する。この点に関するその他の原告の主張については，原告は，別個の
手続である侵害訴訟において被告が主張した具体的な態様が本件発明１及び
るが，
この主張が理由がないことは，
前記４(2)において説示したところから
も明らかである。
(2) 小括
以上によれば，本件発明１は，サポート要件に適合するものと認められ，
本件発明１４も，これと同様であるから，原告主張の取消事由４は理由がな
い。
以上のとおり，原告主張の取消事由はいずれも理由がないから，本件審決を
取り消すべき違法は認められない。
したがって，原告の請求を棄却することとして，主文のとおり判決する。
知的財産高等裁判所第４部
裁判長裁判官
菅 野 雅 之
裁判官
本 吉 弘 行
裁判官
岡 山 忠 広
（別紙１）
【０００１】
本発明は，コンピュータを用いて情報を管理する情報管理方法，情報管理プロ
グラム，及び情報管理装置に関する。
【０００２】
コンピュータを用いて各種情報の管理を行う場合，それぞれの情報を記憶した
ファイル（文書ファイル，画像ファイル等）を，所定のフォルダに保管すること
によって行うのが一般的である。しかし，作成したフォルダの構造及びそれぞれ
のフォルダに保管するファイルの種類等は，任意であってフォルダの作成者に依
存するため，作成者以外の者が必要な情報に適確にアクセスすることは，必ずし
も簡単ではない。すなわち，多数の者が情報を共有化し，再利用できるように，
情報管理を行うことは容易ではない。
【０００３】
特許文献１には，情報の共有化，再利用を効率よく実現することができる文書
情報管理システムが記載されている。この文書情報管理システムは，案件（プロ
ジェクト）毎にツリーを作成して表示し，作成した文書ファイルを，表示された
ツリーの任意のノードに付随させて，サーバコンピュータに保管するものである。
【０００４】
また，異なる計算機やアプリケーションで共通に取扱うことができるデータ形
式として，
ＸＭＬ
（Extensible Markup Language）
等の構造化文書規格があるが，
特許文献２には，このような構造化文書を木構造として捉えて処理する構造化文
書処理システムが記載されている。
【０００５】
しかし，管理される各種情報の更新については，上記した管理システムにおい
ても，効率化が十分図られているとはいえない。すなわち，木構造のノードに含
まれる情報は，
相互に関連するものが多いが，
上記した管理システムにおいては，
それぞれの文書の該当する部分を個別に更新する必要があり，十分効率的とはい
えない。
【０００６】
【特許文献１】特開２００２－２０７７７２号公報
【特許文献２】特開２００３－１７８０４９号公報
【発明の開示】
【０００７】
本発明は，上記事情に鑑みなされたもので，管理すべき情報の更新を，簡単か
つ効率的に行うことができる情報管理情報を提供することを目的とする。
【０００８】
本発明の情報管理方法は，コンピュータが情報を管理する情報管理方法であっ
て，前記コンピュータに複数のノードそれぞれに対応付けて入力された管理すべ
き情報を，前記ノードを識別するノード識別情報に対応付けられた複数のノード
データを含む文書ファイルとして前記コンピュータが記憶する情報記憶ステッ
プと，前記情報記憶ステップで記憶された前記文書ファイルの情報を前記コンピ
ュータが表示する情報表示ステップと，前記ノードデータに含まれるスクリプト
を前記コンピュータが実行する情報評価ステップとを備え，前記ノードデータは，
ルートノードを除いて，当該ノードの親ノードを特定する親ノード識別情報を含
んでおり，前記スクリプトは，当該ノードデータに含まれる変数データである自
ノード変数データと，当該ノードの直系上位ノードのノードデータに含まれる変
数データである上位ノード変数データを利用した演算を行って，前記自ノード変
数データの値を求める代入用スクリプトを含んでおり，前記情報表示ステップは，
前記親ノード識別情報を利用して，前記ノードの木構造を表示する木構造表示ス
テップと，前記表示された木構造のノードのうちの選択されたノードの前記自ノ
ード変数データ，前記上位ノード変数データ及び前記スクリプトを表示するノー
ドデータテーブル表示ステップを含み，前記情報評価ステップは，前記代入用ス
クリプトの実行により，前記自ノード変数データの値を更新するステップを含む
ものである。
【０００９】
本発明によれば，利用者が入力したデータに含まれるスクリプトを利用して，
ノードデータを更新することができるので，管理すべき情報の更新を，簡単かつ
効率的に行うことができる。また，複数のノードデータを含む１つの文書データ
を用いて，個々の業務や案件に関する情報を管理しているので，多数の利用者に
よる情報の共有化，再利用を，簡単かつ効率的に行うことができるとともに，文
書データに基づいて，簡単にノードの木構造を表示させることができ，業務や案
件全体の把握を簡単に行うことができる。さらに，表示された木構造の個々のノ
ードに対応付けられた詳細情報を簡単に表示することができる。
【００１０】
本発明の情報管理方法は，前記木構造表示ステップが，前記ノードを示すノー
ドラベルと，前記親ノードの前記ノードラベルとの間を接続する階層リードとの
表示を含むものを含む。本発明によれば，ノードの階層関係を容易に識別するこ
とができる。
【００１１】
本発明の情報管理方法は，前記情報評価ステップが，前記表示された木構造の
ノードのうちの選択されたノードの前記代入用スクリプトを実行するに際して，
前記選択されたノードの直系下位ノードの前記代入用スクリプトを合わせて実
行するものを含む。本発明によれば，関連するノードの評価を同時に行うことが
できる。また，上位ノードの変数値を変更した時の，下位ノードの変数値を簡単
に出力することができるので，シミュレーション動作を簡単に行うことができる。
【００１５】
本発明の情報管理方法は，前記ノードデータテーブル表示ステップが，当該ノ
ードの直系下位ノードの前記スクリプトでも利用される公開変数と，当該ノード
の前記スクリプトでのみ利用される限定変数を含むものを含む。本発明によれば，
必要な変数データのみを下位ノードに継承させることができる。
【００１６】
本発明の情報管理方法は，前記ノードデータテーブル表示ステップが，前記公
開変数の表示に際して，前記自ノード変数データと前記上位ノード変数データと
を区別して認識可能な態様で表示するものを含む。本発明によれば，自ノードの
変数の入力及び確認，スクリプトの作成を容易に行うことができる。
【００１７】
本発明の情報管理方法は，前記情報記憶ステップで記憶される文書が，前記コ
ンピュータに入力された参照元ノードと参照先ノードとの関連を示す参照情報
を含んでおり，前記参照元ノードの前記代入用スクリプトは，前記自ノード変数
データと前記上位ノード変数データに加えて，前記参照情報によって特定される
前記参照先ノードの変数データを利用した演算を行って，前記自ノード変数デー
タの値を求めるものであるものを含む。本発明によれば，参照先ノードの変数デ
ータを一次的な変数として利用することができ，代入用スクリプトの演算機能を
拡張することができる。
【００１８】
本発明の情報管理方法は，前記木構造表示ステップが，前記参照元ノードと前
記参照先ノードとを接続するリードを選択的に表示するものであるものを含む。
本発明によれば，参照先の有無，及び参照先ノードを簡単に確認することができ
る。
【００１９】
本発明の情報管理方法は，前記ノードデータテーブル表示ステップが，前記参
照先ノードの変数データを合わせて表示するものであるものを含む。本発明によ
れば，代入用スクリプトに利用される変数データの確認を確実に行うことができ，
代入スクリプトの作成及び確認が容易になる。
【００２２】
本発明の情報管理プログラムは，上記した情報管理方法における各ステップを，
コンピュータに実行させるための情報管理プログラムである。
【００２３】
本発明の情報管理装置は，上記した情報管理プログラムをインストールしたコ
ンピュータを含むものである。
【００２４】
以上の説明から明らかなように，本発明によれば，管理すべき情報の更新を，
簡単かつ効率的に行うことができる。
【００２５】
以下，本発明の実施の形態について，図面を用いて説明する。
【００２６】
本発明の情報管理方法及び情報管理装置は，所定の情報管理プログラムをイン
ストールしたコンピュータを用いて実施する。ここで利用されるコンピュータは，
スタンドアローン型のものでもよいし，クライアント－サーバ型のものでもよい。
【００２７】
コンピュータにインストールする情報管理プログラムは，管理すべき情報をノ
ードに対応付けて入力する情報入力ステップ，情報入力ステップで入力されたデ
ータを，各ノードを識別するノード識別情報に対応付けられた複数のノードデー
タを含む文書として記憶する情報記憶ステップ，情報記憶ステップで記憶された
文書の情報を表示する情報表示ステップ，及びノードデータに含まれるスクリプ
トを実行する情報評価ステップを実行するためのプログラムを含んでいる。
【００２８】
図１に，
ノードデータとして記憶される情報の一例を示す。
記憶される情報は，
ノード番号，ページ番号，親ノード番号，ノードラベル，ノード表示属性情報，
変数情報，代入用スクリプト，生成用スクリプト，リンク情報を含む。
【００２９】
ノード番号は，ノードを識別する情報であり，ノード生成時に自動的に一意の
番号が付与される。ページ番号は，文書に含まれるノードを複数の木構造として
表示するためのもので，そのノードが所属するページを識別する所属ページ番号
に，そのノードが別のページを形成する場合にそのページを識別する自己ページ
番号を含む。したがって，両方のページ番号が記憶されているノードは，２つの
ページに属することになる。親ノード番号は，そのノードの親ノードを識別する
番号であり，ノード生成時に親ノードを指定することにより，その指定された親
ノードのノード番号が自動的に記憶される。
【００３０】
ノードラベルは，木構造表示時にそのノードを示す情報であり，ノード名称等
任意の情報を記憶することができる。ノード表示属性情報は，ノード表示時の背
景，文字の色，フォント等の文字属性，枠の形状，大きさ等の枠属性等を指定す
る情報である。ここで，ＪＰＧ画像等をノードに表示したい場合は，その画像フ
ァイルの場所を指定するＵＲＬ等が記憶される。
【００３１】
変数情報は，各ノードが保持するデータであって，変数名に対応させて記憶さ
れる。記憶される変数は，下位ノードから参照される公開変数と，自ノード内で
のみ使用する限定変数を含む。また，変数の値（ 「変数データ」と記述する場合
もある。） は，固定値が設定されても，スクリプトの実行によって演算された値
が設定されてもよい。また，ＵＲＬが設定されてもよい。どのような値が設定さ
れるかは任意である。
【００３２】
代入用スクリプトは，自ノードの変数の値を演算するためのものである。代入
用スクリプトは，自ノードの変数の値である自ノード変数データと，そのノード
の直系上位ノードの公開変数の値である上位ノード変数データを利用して記述
することが可能である。
【００３３】
生成用スクリプトは，辞書に登録してある別のノードやノード群（木構造の複
数ノード） を利用して，
新規にそのノードの下位のノードを生成するものである。
生成用スクリプトを条件文と併用することにより，代入用スクリプトの実行によ
り求められた変数データの結果によって，子ノードや孫ノードを生成することが
できる。
生成用スクリプトを利用することにより，
例えば，
部品管理を行う場合，
親部品のサイズによって子部品が変わるケースの子部品のデータを簡単に生成
することができる。
【００３４】
なお，代入用スクリプト及び生成用スクリプトに使用する言語としては，スク
リプト言語として使用されている任意の言語を使用することができる。
【００３５】
リンク情報は，各ノードにリンクするファイルに関する情報である。スタンド
アローン型のコンピュータで実施する場合，この情報はリンクファイルのインデ
ックス情報である。また，クライアント－サーバ型のコンピュータで実施する場
合，リンクファイルをサーバに転送後，インデックス情報を作成し，記憶する。
リンク情報を記憶することにより，各ノードをフォルダとして利用することが可
能となる。
【００３６】
ノードデータは，例えばタグ付き文書情報として記憶される。図２に，ノード
データの一例を示す。
図２のデータは，
ルートノードのノードデータの例であり，
ノード番号（nodeNo）が「3450」，自己ページ番号（ownPageNo）が「10」，ノー
ドラベル(label)が「パッセル操作マニュアル」である。所属ページ番号を示す
（belongPageNo）が「0」，親ノード番号を示す（parentNodeNo）が「0」である
ことで，ルートノードであることを示している。図２の「x =”100”」から「color
=”0”」までは，ノードの表示位置等のノード表示属性情報である。
【００３７】
この形式では，変数情報が，「<DataDivision>」と「</DataDivision>」の間に
挿入され，代入用スクリプトが，「<ProcesureDivision>」と「</Procesure
Division>」
の間に挿入され，
生成用スクリプトが，
「<GenerateDivision>」
と
「</
GenerateDivision>」
の間に，
リンク情報が，
「<LinkageDivision>」
と
「</<Linkage
Division>」の間に挿入される。ただし，図２の例では，変数情報，代入用スクリ
プト，生成用スクリプトは，記憶されていない。
【００３８】
図３に，ノードデータの別の例を示す。図３のデータは，ルートノード以外の
ノードデータの例である。所属ページ番号が「3484」，親ノード番号が「3488」
となっており，ルートノード以外のノードのノードデータであることが把握でき
る。また，自己ページ番号が「3526」となっていることから，別ページの木構造
の先頭ノードであることも把握できる。
【００３９】
図４に，管理すべきデータを複数のノードデータを含む文書情報として記憶さ
せたものの一例を示す。図４の文書は，ヘッダ部４０，ノードデータ部４１ａ～
【００４０】
ヘッダ部４０は，管理される案件等を指すプロジェクトのプロジェクト番号，
名称（プロジェクト名）等を示す情報を含んでいる。図４の例では，プロジェク
ト名が「Manual ver2」，プロジェクト番号が「10」であることを示している。
【００４１】
ノードデータ部４１ａは，ルートノードのノードデータを示し，ノードデータ
部４１ｂ～４１ｎは，ルートノード以外のノードのノードデータである。
【００４２】
ライン部４２は，ノード間を接続するリードを定義する情報が記憶される領域
である。
ノード間を接続するリードは，
親子のノード間を接続する階層リードと，
階層関係とは無関係に一時的に変数を参照する参照元ノードと参照先ノード間
を接続する参照リードがあるが，
ライン部４２は，
参照リードの存在及び，
位置，
表示属性等を規定する。
【００４３】
次に，記憶された文書情報の表示について説明する。図５に，文書情報の表示
を行う場合の概略動作フローを示し，図４に示す文書の表示を行った場合の表示
画面の例を図６に示す。
【００４４】
図６の表示画面は，ツリービューア１０とデザインテーブル２０を有する。ツ
リービューア１０は，ノードの木構造を表示する領域であり，情報管理時の各種
操作を行うためのプルダウンメニュー，及びポップアップメニューを表示する領
域も兼ねる。ノードの木構造の表示は，ラベルとリードの表示によって行い，図
ベル表示１１ｂ，１１ｃ，１１ｄと，それらの間を接続する階層リード１２ｂ，
【００４５】
ラベル表示１１ａ～１１ｄは，ノード表示属性情報に基づいて表示されるが，
ルートノードのラベル表示１１ａには，ルートノードであることを示すマーク１
ノードは，その旨を示すマーク１４ｂ，１４ｄが付加される。マーク１４ｂ，１
ることができる。
【００４６】
デザインテーブル２０は，ツリービューア１０に表示されたノードのうちの選
択されたノードが有する情報を表示する領域であり，公開変数表示領域２１，限
定変数表示領域２２，代入用スクリプト表示領域２３，生成用スクリプト表示領
域２４，操作ボタン表示領域２１ａ，２２ａ，２０ａを有する。操作ボタン表示
領域２１ａの各操作ボタンは，公開変数に対する各種操作を行うためのものであ
り，操作ボタン表示領域２２ａの各操作ボタンは，限定変数に対する各種操作を
行うためのものである。また，操作ボタン表示領域２０ａの各操作ボタンは，デ
ザインテーブル２０に関する各種操作を行うためのものである。
【００４７】
プロジェクト毎に作成された文書ファイルを選択し，開くと，図５に示す手順
で表示処理が行われる。ステップＳ１０１では，文書データからルートノードを
認識する。既述のように，ルートノードのノードデータは，所属ページ番号及び
親ページ番号が「０」であるので，そのようなノードを探すことにより，ルート
ノードを認識することができる。なお，文書番号を一義的に割り当て，ルートノ
ードの自己ページ番号を文書番号と一致させておくと，ルートノードの認識がさ
らに簡単になる。
【００４８】
ステップＳ１０２では，認識したルートノードの自己ノード番号を認識し，ス
テップＳ１０３では，認識したページ番号のページに属するノードを認識する。
すなわち，ルートノードの自己ページ番号を所属ページ番号として有するノード
を認識する。
【００４９】
次いで，
ステップＳ１０３で認識したノードのラベル表示を行う
（ ステップＳ
基づいて表示する。そして，表示したノードの親子関係に基づいて階層リードを
表示し，さらに，文書のライン部４２の情報を参考にして，参照リードを表示す
る（ステップＳ１０５） 。
【００５０】
この状態では，ツリービューア１０に木構造が表示された状態である。ステッ
プＳ１０６では，ツリービューア１０に表示されたノードが選択されたかどうか
を判定し，選択されている場合，デザインテーブル２０の表示を行い（ステップ
Ｓ１０７），
そのノードの変数，
スクリプト等を表示する
（ ステップＳ １０８）
。
図６は，ルートノードを選択した場合の例であり，ルートノードには，変数情報
等が記憶されていないので，デザインテーブル２０に，データの表示はない。こ
の状態で，別のノードを選択すると，そのノードの変数等が表示される。
【００５１】
記憶された変数の値が，ＵＲＬ又はファイルパスである場合は，その変数を選
択した状態で領域２１ａ，２２ａの「実行」ボタンをおすことにより，そのＵＲ
Ｌ又はファイルパスの内容を表示する。
【００５２】
デザインテーブル２０は，ノードを選択することで表示されるが，各ノードの
リンク情報，及びノードレポートの表示は，ノード選択後メニューを表示させて
行う。リンク情報表示が指示されると，そのノードのノードデータのリンク情報
のリストを別ウィンドウで表示する。リンク情報が記憶されていない場合は，リ
ストが空欄である。表示されたリストの中のファイルが選択されると，そのファ
イルの内容に応じた情報の表示を行う。ノードレポート表示が指示されると，別
ウィンドウに表示するとともに，レポート領域４３を参照し，該当ノードの情報
が記憶されている場合には，その情報を表示した別のウィンドウに表示する。
【００５３】
ノードのリンク情報，及びノードレポートは，リンク情報のリスト，あるいは
レポート表示ウィンドウを表示した状態で，追加，削除を行うことができる。
【００５４】
図６に示した状態で，表示された木構造及びノードデータの編集が可能であり，
編集操作に対応した表示を行う（ステップＳ１０９）。ツリービューア１０上で
は，ノードの追加，削除，表示位置移動，表示属性変更，ノードラベル変更等を，
プルダウンメニュー，ポップアップメニューの設定により行う。例えば，表示位
置の変更は，ラベル表示をドラッグすることによって行い，ノードラベル及び表
示属性の変更は，
変更用のウィンドウを表示させて行う。
また，
ノードの削除は，
削除したいノードを選択した状態で，メニューを表示させて削除する。ノードの
追加は，メニューで追加モードに設定後，追加したいノードの親となるノードを
選択し，そのままドラッグすることにより，新規ノードを生成する。また，ノー
ドの繋ぎ換えは，繋ぎ換えたいノードを選択し，メニューを表示させて「ノード
繋ぎ換え」を選択し，変更したい繋ぎ先のノード（親ノードとしたいノード）を
選択することによって行う。
生成されたノードのノードラベル，
表示属性情報は，
修正用のウィンドウを表示させて設定する。
【００５５】
それぞれのノードに関するデータは，ノードデータとして１まとまりになって
いるので，これらの編集を行った場合でも，編集を行ったノードのノードデータ
に反映させるだけでよく，軽い処理負担で編集作業を行うことができる。
【００５６】
デザインテーブルの情報を追加，修正する場合は，領域２１ａ ，２２ａ ，２
変数の追加は，
領域２ １ａ又は
入力する。変数の入力は，別ウィンドウで入力フォームを表示させて行ってもよ
い。
【００５７】
代入用スクリプト及び生成用スクリプトは，公開変数領域２１および限定変数
領域２２に表示された変数を利用して作成する。公開変数領域２１には，自ノー
ドの公開変数だけでなく，直系上位のすべてのノードの公開変数が表示される。
直系上位のノード以外のノードの変数を参照したい場合は，参照リードを生成し
て，参照先のノードと関連付けておく。代入用スクリプト及び生成用スクリプト
は代入用スクリプト領域２３及び生成用スクリプト領域２４に直接入力しても
よいし，別のウィンドウを開いて入力するようにしてもよい。
【００５８】
なお，デザインテーブル２０の編集内容は，領域２０ａの更新ボタンを押すこ
とによって，文書情報に反映される。
【００５９】
続いて，ステップＳ１１０では，表示終了，すなわち文書クローズが指示され
たかどうかを判定し，表示終了が支持されていない場合は，階層移動指示がされ
ているか否かを判定する（ステップＳ１１１）。階層移動は，マーク１４ｂ，１
ニューから指示する。
【００６０】
階層移動が指示されていると判定した場合，ステップＳ１１２で別ページの木
構造を表示する。木構造の表示は，表示すべきページ番号を認識後，ステップＳ
ドに対して階層移動が指示される（階層を降りる旨の指示）と，そのノードを先
頭とするノードを表示する。その時のページ番号は，そのノードの自己ページ番
号である。木構造の先頭ノードを選択して階層移動を指示すると，そのノードの
所属ページ番号が示すページの木構造を表示する。
【００６１】
別ページの木構造についても，
ノードの追加，
削除は同様に行うことができる。
また，特定のノードを先頭ノードとする新規の木構造を作成する場合は，先頭と
なるノードを選択し，メニューから別ページ生成を指示する。そして，別ページ
に表示された先頭ノードに，下位ノードを追加して，木構造とする。
【００６２】
次に，新規プロジェクトの作成について，図７を用いて説明する。図示しない
プロジェクトツリーを表示させ，新規プロジェクトの作成が指示されると，新規
プロジェクト作成用のダイアログボックスを表示する（ステップＳ ２０１） 。
次いで，ダイアログボックスを介して少なくとも新規プロジェクトのプロジェク
ト名が入力されると（ステップＳ２０２），ツリービューア１０にルートノード
のラベル表示を行う（ステップＳ２０３）。次いで，ルートノードのノードデー
タを入力する（ステップＳ２０４）。そして，ルートノードに下位ノードを順次
追加し，ノードデータを入力する（ステップＳ ２０５）。ノードデータの入力，
及びノードの追加は，図６で説明した編集処理と同様の手順で行う。
【００６３】
続いて，ノードデータに含まれる変数情報，代入用スクリプト，生成用スクリ
プトについて，部品管理を例に説明する。図８は，部品管理に適用した場合の木
構造の一例を示す図である。図８の木構造は，製品番号「990070」，品名「ＭＷ
－７０」の製品の部品管理に適用したもので，製品は，「fore」，「center」，
「bone」，「back」の部分からなり，さらにそれぞれの部分が，複数の部品から
構成されることを示している。ただし，図８では，部分「fore」の部品のみを記
載し，他の部分については，省略してある。
【００６４】
図８から明らかなように，部分「fore」は，３つの「ＭＷ70 巾木(表)」と３つ
の
「ＭＷ70 パネル(表)」
から構成される。
図９に，
「Ｍ Ｗ7 巾木(表)」
に対応するノード（図８では，便宜的に右肩に「＊」を付してある。）のノード
データの一部を示し，図１０に，そのノードが選択された場合の公開変数表示領
域２１の表示例を，図１１に，限定変数表示領域の表示例を示す。
【００６５】
公開変数表示領域に表示される公開変数は，自ノードの公開変数５１と，直系
上位ノードの公開変数５２を含み，
直系上位のノードの公開変数５２ は，
自ノー
ドの公開変数５１と異なる色で表示される（図１０では，フォントを変えて示し
てある。）。また，公開変数には，固定値が入力される公開変数と，代入用スク
リプトの実行によって計算される公開変数があり，修飾領域に「なし」あるいは
「要計算」を表示することによりに区別される。
【００６６】
要計算の公開変数の値は，後述するように代入用スクリプトが実行されるまで
は空欄であり，
図９及び図１０は，
代入用スクリプト実行前の状態を示している。
なお，直系上位ノードに要計算の公開変数が含まれ，その公開変数の値が代入ス
クリプトの実行前で定まっていない場合，その公開変数は，下位ノードの公開変
数領域２１に表示されない。
すなわち，
他のノードからの参照が一時停止される。
【００６７】
代入用スクリプト及び生成用スクリプトは，
操作ボタン表示領域２０ａ の
「評
価」ボタンを押すことにより実行される。図１２に，スクリプト実行時の概略動
作フローを示す。スクリプトを実行したいターゲットのノード選択し，「評価」
ボタンが押されると，評価条件設定用のダイアログボックスを表示する（ステッ
プＳ ３０１）。このダイアログボックスでは，評価対象スクリプトの種類と，評
価階層が少なくとも可能となっている。
すなわち，
代入用スクリプトのみの実行，
生成用スクリプトの実行，両スクリプトの実行の設定と，自ノードのみを評価す
るか直系下位ノードの指定階層まで評価するかを設定する。
【００６８】
ステップＳ３０２では，ダイアログボックスの設定内容にしたがって，評価条
件を認識する。そして，代入用スクリプトの実行が設定されているかどうかを判
断し（ステップＳ３０３），設定されている場合は，代入用スクリプトを実行す
る（ステップＳ３０４） 。
【００６９】
代入用スクリプトの実行が終了した後，及び代入用スクリプトの実行が設定さ
れていない場合は，生成用スクリプトの実行が設定されているかどうかを判断す
る（ステップＳ３０６）。そして，生成スクリプトの実行が設定されている場合
は，その生成用スクリプトを実行する。
【００７０】
生成用スクリプトの実行が終了した後，及び生成用スクリプトの実行が設定さ
れていない場合は，ノードデータを参照して，直系下位のノードに評価対象ノー
ドがあるかどうかを判断する（ステップＳ３０７）。ここで，判断対象となるノ
ードには，生成用スクリプトの実行によって生成されたノードも含まれる。
【００７１】
ステップＳ３０７で，スクリプトを実行すべきノードが残っていると判断され
た場合は，ステップＳ３０３に戻り，下位のノードについて同様の判断を行い，
スクリプトの実行を行う。
【００７２】
次に，代入用スクリプト及び生成用スクリプトの具体例を，図８の「＊」を付
したノードをターゲットノードとして説明する。図９に示すように，ターゲット
ノードは，要計算の公開変数として，「スライス数」と「色」を有しており，代
入用スクリプトとして，「スライス数＝同一面数；」と「色＝同一面数」を有し
ている。評価前は，図１０に示すように，公開変数「スライス数」と「色」の値
は空欄となっている。
【００７３】
この状態で，このノードを選択し，「評価ボタン」を押し，評価条件として代
入用スクリプトの実行を設定すると，記憶された代入用スクリプトを実行する。
したがって，公開変数「スライス数」の値は，上位ノードの公開変数である「同
一面数」の値「１」となり，公開変数「色」の値は，同様に上位ノードの公開変
数である「巾木色」の値「Ｆ－２０５」となる。代入用スクリプト実行後のデザ
インテーブルの公開変数表示領域２１の表示例を，図１３に示す。
【図１】
【図２】
【図３】
【図４】
【図５】
【図６】
【図７】
【図８】
【図９】
【図１０】
【図１１】
【図１２】
【図１３】
（別紙２）
【産業上の利用分野】本発明は，知識所有者自身が知識ベース構築者となって操
作することが可能な知識ベース構築システムに関するものである。
【従来の技術】知識ベースは，所定の知識記述言語で記述された一種のコンピュ
ータプログラムであって，知識ベースを構築する際には，知識記述言語について
の知識や経験が必要である。そこで，従来は図７に示す如く，知識ベース(１)に
接続した知識ベース構築装置(13)は，知識記述言語についての知識や経験を有す
るシステム開発者(14)が操作する運用形態を採っている。
【０００３】システム開発者(14)は，知識ベース構築に際して知識所有者(15)と
の口頭でのインタビューを行なって，知識所有者(15)から知識を獲得する。更に
システム開発者(14)は，獲得した知識に基づいて資料を作成し，知識を体系化す
る。そして，該資料に基づいて，知識ベース構築装置(13)を操作し，知識ベース
(１)を構築するのである。
【発明が解決しようとする課題】ところが，従来の知識ベース構築方法では，イ
ンタビューは口頭で行なわれるから，一度のインタビューでの完全な知識獲得は
困難であり，特に大規模なシステムの構築においては，口頭のインタビューでは
完全な知識獲得は不可能に近い。
この結果，
知識ベース(１)を一旦構築した後も，
知識の追加や修正が必要となる。
【０００５】又，知識を体系化するプロセスでは，資料作成のために多大な労力
と時間を要する問題がある。
【０００６】更に，知識所有者(15)の知識は，知識体系化の際に作成された資料
と知識ベース(１)内に記述された知識とによって保存され，管理されているから，
知識を追加し，或いは修正する必要が生じた場合には，システム開発者(14)が再
度，知識所有者(15)とのインタビューを行なって，知識の獲得，体系化，及び知
識ベース構築のプロセスを繰り返さねばならず，一連の処理が極めて煩雑となる
問題がある。
【０００７】本発明の目的は，知識ベースと知識ベース構築者の間に，知識所有
者自身が操作可能なユーザインターフェースを設けることによって，知識ベース
構築者自身が知識ベースを容易に構築することが出来る知識ベース構築システ
ムを提供することである。
【課題を解決する為の手段】本発明に係る知識ベース構築システムは，複数のノ
ードを互いに関係づけてなる階層構造を有して各ノードには詳細な知識が定義
されるデータ構造のデータベース(４)と，該データベース(４)内のデータを前記
知識記述言語に変換して知識ベース(１)に記述するデータ変換装置(３)と，デー
タベース(４)内に知識の階層構造を定義するための階層構造定義装置(５)と，デ
ータベース(４)内に定義された階層構造の各ノードに対して詳細な知識を定義
するための詳細知識定義装置(６)とを具えている。
【作用】
階層構造定義装置(５)及び詳細知識定義装置(６)は，
例えばキーボード，
マウス等の入力操作によってデータ入力が可能であり，階層構造定義装置(５)の
データ入力操作によって，データベース(４)内に知識の階層構造のみが定義され，
階層構造定義装置(５)のデータ入力操作によって，データベース(４)内に定義さ
れた階層構造の各ノードに対して詳細な知識が定義される。
【００１０】この際，データベース(４)のデータ構造は，知識ベース(１)の知識
記述言語に比べて，人間の言語に近い形で表現することが可能であるため，知識
所有者自身が階層構造定義装置(５)及び詳細知識定義装置(６)を操作して，自己
の知識をデータベース(４)に容易に登録することが出来る。
【００１１】データベース(４)内に階層構造にて登録された知識は，データ変換
装置(３)により知識ベース(１)の知識記述言語に変換され，知識ベース(１)に記
述される。
【００１２】
【発明の効果】本発明に係る知識ベース構築システムは，知識所有者自身が知識
ベース構築者となって操作することが出来るから，従来の知識ベース構築者によ
る知識獲得プロセスは不要となる。又，知識の体系化は自動的に行なわれ，その
結果が全てデータベースに登録されるから，知識の統一的な保存，管理が可能で
ある。従って，知識ベースの知識を変更する必要が生じた場合にも，データベー
スを修正する処理だけで済む。
【実施例】以下，本発明の一実施例につき，図面に沿って詳述する。図１に示す
如く知識ベース構築システム(２)は，知識ベース(１)と知識ベース構築者(８)の
間に介在して，ユーザインターフェースの役割を果すものである。
【００１４】知識ベース構築システム(２)は，複数のノードを互いに関係づけて
なる階層構造を有して各ノードには詳細な知識が定義されるデータ構造のデー
タベース(４)と，該データベース(４)内のデータと前記知識記述言語の間の双方
向の変換を行なうデータ変換装置(３)と，データベース(４)内に知識の階層構造
を定義するための階層構造定義装置(５)と，データベース(４)内に定義された階
層構造の各ノードに対して詳細な知識を定義するための詳細知識定義装置(６)
と，詳細知識の定義の際に他のノード或いは他の知識ベースの知識を参照するた
めの知識参照装置(７)とから構成され，階層構造定義装置(５)，詳細知識定義装
置(６)及び知識参照装置(７)は夫々，知識ベース構築者(８)によるデータ入力操
作が容易な構成となっている。
【００１５】例えば，ある製品設計に関する知識ベースを作成する場合，先ず階
層構造定義装置(５)の操作によって，その製品の部品構成ツリーが作成される。
ここで，階層構造定義装置(５)による処理は，図２に示す如くノード名称の定義
(Ｓ１)と階層構造の定義(Ｓ２)から構成される。
【００１６】即ち，ノード名称の定義においては，図示の如く製品を構成する複
数の部品の夫々にノード名称(Ａ～Ｇ)が付与される(Ｓ１)。この段階では，各ノ
ードは相互に関連なく独立しており，例えば図示するイメージにて画面表示され
る。
【００１７】その後，階層構造の定義においては，例えば画面に表示された各ノ
ードをマウスの操作等によってツリー状に連結することにより，図示の如く相互
の親子関係が定義されることになる(Ｓ２)。
【００１８】この結果，図１のデータベース(４)内には，各ノードの親子関係，
即ち自己の名称，自己の親ノードの名称及び子ノードの名称が記述される。
【００１９】次に，部品構成ツリー上の各ノード，即ち部品や部位についての知
識が詳細知識定義装置(６)によって定義される。この作業は階層構造の下位から
上位へ向かってノード毎に行なわれ，各ノード毎に図３に示す処理が実行される。
【００２０】
先ず，
選択されたノードについて，
必要な属性の定義(Ｓ４)，属性の分類(Ｓ５)，及び属性値の定義(Ｓ６)が行なわ
れる。必要な属性の定義(Ｓ４)の際には，部品の“高さ”，“幅”，“長さ”，
“色”，“材質”等の属性名のみが定義され，これらの属性名が図示の如く各ノ
ードに付加される。
【００２１】属性の分類(Ｓ５)においては，定義された属性の性質に応じて，入
力属性と決定属性に分類される。ここで，入力属性は，自己の親ノードからその
属性値を入力すべき属性(例えば“高さ”，“幅”，“長さ”)であり，決定属性
は，自己のノードにて属性値を決定すべき属性(例えば“色”，
“材質”)である。
これによって，データベースには図示のイメージのデータ構造が形成される。
【００２２】属性値の定義(Ｓ６)では，決定属性に分類された属性に対して属性
値(“黒”，“スチール”)の入力が行なわれる。ここで，属性値としては，数値
に限らず，数式や条件分岐が入力可能である。
【００２３】上記の処理(Ｓ３～Ｓ６)が最上位のノードに至るまで繰り返される。
この結果，全てのノードについて，図３のステップＳ６に示す如きイメージのデ
ータ構造が形成される。ここで，最上位のノードに入力属性として定義されてい
る属性名が，知識ベース運用の際にデータを入力すべき項目であり，該データ入
力によって知識ベースが動作を開始することになる。
【００２４】上記の詳細知識定義装置(６)の操作の過程で，他の部品或いは他の
製品の知識を参照する必要が生じたときは，知識参照装置(７)を用いて，他のノ
ード或いは他の知識ベースを参照することが可能である。詳細知識定義装置(６)
は，他のノードの知識を検索してその結果を報知する処理と，他のノードの知識
を提示し或いはその知識の流用を許可する処理の２つの機能を有している。
【００２５】上記の処理によってデータベース(４)の登録が終了した後，その旨
を知識ベース構築システム(２)にデータ入力すれば，データ変換装置(３)がデー
タベース(４)内のデータを自動的に所定の知識記述言語に変換して，知識ベース
(１)に記述する。
【００２６】その後，知識の変更に際しては，例えば，知識の階層構造を変更す
る場合には，階層構造定義装置(５)を用いてデータベース(４)の該当箇所を書き
換えるだけで，知識ベース(１)の階層構造が変更されることになる。又，あるノ
ードの知識を変更する場合は，詳細知識定義装置(６)を用いてデータベース(４)
の該当箇所を書き換えるだけで，これが知識ベース(１)の知識に反映される。
【００２７】例えば，図４に示す如く取っ手(12)を具えた内箱(11)と外箱(10)か
らなる引き出し(９)を設計する場合，階層構造定義装置(５)の操作によって，図
体”)が定義され，これらのノードに図示の如き階層構造が定義される。
【００２８】その後，詳細知識定義装置(６)の操作によって，図６に示す如く各
ノードに詳細知識が定義される。この作業は，下位のノードから上位のノードへ
向かって進められる。例えば，“取っ手”は，予め規定された形状のものを用い
るので，全ての属性値を自己のノードにて決めることが出来る。従って，属性は
決定属性のみから構成される。
【００２９】一方，“内箱本体”は，その大きさが上位の部品の大きさから決定
されるべきものであるから，“高さ”“幅”“長さ”は親ノードである“内箱”
に委ねられる。“外箱”についても同様である。
【００３０】“内箱”のノードでは，“内箱本体”に入力すべき３つの属性(“高
さ”
“幅”
“長さ”)を自己の大きさから決定する。又，
“内箱”自身の大きさは，
親ノードである“引き出し”にその決定を委ねる。
【００３１】この様にして全てのデータ入力作業が終了すれば，データベース内
には，図６に示す如きイメージでデータ構造が登録され，最上位のノードである
“引き出し”の“高さ”“幅”“長さ”が，知識ベースに対する入力データとな
る。
【００３２】上記知識ベース構築システムは，データベース(４)のデータ構造が
知識ベースに比べて簡単であるため，知識記述言語についての知識や経験を有し
ない知識所有者であっても，階層構造定義装置(５)，詳細知識定義装置(６)及び
知識参照装置(７)を操作することによって，容易に知識ベース(１)を構築するこ
とが出来る。又，従来の如き知識獲得の作業が不要であるから，知識ベース構築
のための処理が簡略化される。更に，知識の体系化と知識の記述の両プロセスが
共に共通のデータベースを用いて行なわれるため，知識の追加や修正が従来に比
べて遥かに容易となる。
【００３３】上記実施例の説明は，本発明を説明するためのものであって，特許
請求の範囲に記載の発明を限定し，或は範囲を減縮する様に解すべきではない。
又，本発明の各部構成は上記実施例に限らず，特許請求の範囲に記載の技術的範
囲内で種々の変形が可能であることは勿論である。
【図１】
【図２】
【図３】
【図４】
【図５】
【図６】
【図７】

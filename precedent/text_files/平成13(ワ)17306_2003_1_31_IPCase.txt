平成１３年(ワ)第１７３０６号 著作権侵害差止等請求事件
平成１４年１０月２日口頭弁論終結
判 決
原 告 株式会社ワイビーエム
同訴訟代理人弁護士 伊 関 正 孝
同 高 橋 利 全
被 告 佐鳥電機株式会社
同訴訟代理人弁護士 真 山 泰
同 茶 谷 篤
同 吉 増 泰 實
同 南 雲 隆 之
主 文
事 実 及 び 理 由
第１ 請求
てはならない。
から支払済みまで年５分の割合による金員を支払え。
第２ 事案の概要
原告は被告に対し，別紙被告プログラム目録記載の各プログラムを（以下，
総称して「被告プログラム」という。）搭載した別紙被告製品目録記載の製品（以
下「被告製品」という。）を製造，販売するなどの被告の行為が，原告の有する原
告プログラム目録記載の各プログラム（以下，総称して「原告プログラム」とい
う。）に係る著作権（複製権，翻案権，譲渡権）を侵害すると主張して，被告の上
記各行為の差止及び損害賠償金の支払等を求めた。
(1) 原告プログラム
ア 吉沢ビジネス・マシンズ株式会社（以下「吉沢ビジネス・マシンズ」と
いう。）は，平成元年９月ころ，ＭＳ－ＤＯＳ３．１上で作動し，ＡｕｔｏＣＡＤ
ＧＸⅢ版に対応する別紙原告プログラム目録の１記載のプログラム（以下「原告
プログラム１」という。）を開発し，東日本旅客鉄道株式会社（以下「ＪＲ東日
本」という。）千葉支社等に対し，同プログラムを複製，格納した製品の納入を開
始した（甲１４，弁論の全趣旨）。
イ 吉沢ビジネス・マシンズは，平成８年１１月ころ，原告プログラム１を
バージョンアップし，Ｗｉｎｄｏｗｓ上で作動し，ＡｕｔｏＣＡＤ Ｒ１３Ｊ版に
対応する同目録の２記載のプログラム（以下「原告プログラム２」という。）を開
発し，ＪＲ東日本秋田支社等に，同プログラムを複製，格納した製品を納入した
（弁論の全趣旨）。
ウ 原告は，平成１２年１１月１日，吉沢ビジネス・マシンズから，代金２
億円で，原告プログラムに関する開発，販売，保守サービス等一切の事業を譲り受
けるとともに，原告プログラムの著作権及び同権利の侵害により同日までに発生し
た損害賠償請求権を譲り受けた（甲１１，１２）。
(2) 被告プログラム
ア 被告は，平成９年３月ころ，Ｗｉｎｄｏｗｓ上で作動し，ＡｕｔｏＣＡ
Ｄ Ｒ１３Ｊ版に対応する被告プログラム目録の１記載のプログラム（以下「被告
プログラム１」という。）を開発し，ＪＲ東日本の盛岡支社等に，これを複製，格
納した製品を納入した（乙３，弁論の全趣旨）。
イ 被告は，平成１０年１０月ころには，被告プログラム１をバージョンア
ップし，ＡｕｔｏＣＡＤ Ｒ１４版に対応する同目録の２記載のプログラム（以下
「被告プログラム２」という。）を開発し，さらに平成１３年１０月ころには，被
告プログラム２をバージョンアップし，ＡｕｔｏＣＡＤ ２０００ｉ版に対応する
同目録の３記載のプログラム（以下「被告プログラム３」という。）を開発し，そ
れぞれを複製，格納した製品をＪＲ東日本の盛岡支社等に納入した（乙３，弁論の
全趣旨）。
(3) 原告プログラムの内容
ア 原告プログラムは，ＡｕｔｏＣＡＤ上で作動し，鉄道電気設計及び設備
管理用の図面を作成するコンピュータ支援設計製図ソフトプログラムである。な
お，ＡｕｔｏＣＡＤとは，オペレーティングシステム（ＭＳ－ＤＯＳ又はＷｉｎｄ
ｏｗｓ）上で作動するオートデスク社製の汎用型ＣＡＤシステム（２次元又は３次
元の図面の作成，変更，削除，表示，印刷等を行うプラットフォーム）である。
原告が複製権侵害と主張する部分は，原告プログラムの，以下のイ及び
ウである。
イ 原告「電車線－基準線作成プログラム」
(ア) 原告「電車線－基準線作成プログラム」は，原告プログラムの一部
であるが，ユーザーの入力するデータに従って，電車線（電気機関車及び電車に動
力用の電気を供給するために使用する接触電線等）の設計図面の作図を補助するた
め，縦及び上下の基準線を描画するプログラムである。
(イ) 原告「電車線－基準線プログラム」は，各機能ごとに記述され，以
下の５つのファイルに分けられている（甲１７，２７）。
ａ メイン部 ＹＢＪーＴＲ６８．ｌｓｐファイル（別紙１）
ｂ 入力部 ＹＢＪ－ＴＱ０２．ｌｓｐファイル（別紙２）
ｃ 修正部 ＹＢＪ－ＴＲ８０．ｌｓｐファイル
ｄ 描画部 ＹＢＪ－ＴＲ７９．ｌｓｐファイル（別紙３）
ｅ 説明部 ＹＢＪ－ＴＲ７８．ｌｓｐファイル
(ウ) 原告「電車線ー基準線プログラム」は，ＡｕｔｏＬＩＳＰ言語（イ
ンタープリター方式のプログラム言語。同言語の記述は，コンパイルする必要がな
い。）で記述されている。なお，原告プログラムは，暗号化されたソースプログラ
ム形式によって，原告製品のハードディスク内に複製，格納され，同プログラムに
ついてのオブジェクトプログラムは存在しない（弁論の全趣旨）。
ウ シェイプ定義に係る記述
原告プログラムを複製，格納した製品のハードディスク内には，多数の
特殊文字（フォント）や特殊図形（シェイプ）についてのシェイプファイル（拡張
子ｓｈｘのバイナリデータファイル）が格納されている（甲１９，２４）。シェイ
プファイルは，シェイプ定義ファイル（拡張子がｓｈｐのファイル）をＡｕｔｏＣ
ＡＤのコマンドで機械語に翻訳（コンパイル）することによって生成されるファイ
ルである。シェイプ定義ファイルは，ＡｕｔｏＣＡＤのシェイプ定義文に従って記
述されている（乙２）。
(4) 被告プログラムの内容
ア 被告プログラムも，ＡｕｔｏＣＡＤ上で作動し，鉄道電気設計及び設備
管理用の図面を作成するコンピュータ支援設計製図ソフトプログラムである。
イ 被告「電車線－基準線作成プログラム」
被告「電車線－基準線作成プログラム」も，被告プログラムの一部を構
成し，ユーザーの入力するデータに従って，電車線（電気機関車及び電車に動力用
の電気を供給するために使用する接触電線等）の設計図面の作図を補助するため，
縦及び上下の基準線を描画するプログラムである。
被告「電車線ー基準線プログラム」は，別紙４のとおり，ＢＡＳＥＬＩ
ＮＥ．ｌｓｐファイル上に，ＡｕｔｏＬＩＳＰ言語で記述されている（甲１８）。
ウ シェイプ定義に係る記述
被告プログラムを複製，格納した製品のハードディスク内には，特殊文
字（フォント）や特殊図形（シェイプ）についてのシェイプファイル（拡張子ｓｈ
ｘのバイナリデータファイル）が格納されている（乙１）。シェイプ定義ファイル
は，ＡｕｔｏＣＡＤのシェイプ定義文に従って記述されている。
(1) 被告プログラムは，原告プログラムを複製ないし翻案したものに当たるか
（被告製品を製造，販売するなどの被告の行為は，原告プログラムに係る複製権，
翻案権，譲渡権を侵害するか。）。
(2) 被告は，被告プログラムを作成するに際して，原告プログラム１を，自己
のコンピュータ内の記憶媒体等に複製，格納したことがあるか。
(3) 原告の損害額はいくらか。
(1) 被告プログラムは，原告プログラムを複製ないし翻案したものに当たる
か。
（原告の主張）
被告は，以下のとおり，原告プログラムに依拠して，原告プログラムと実
質的に同一であるか，又は二次的著作物に当たる被告プログラムを作成した。被告
プログラムは原告プログラムを複製ないし翻案したものである。
したがって，被告プログラムを搭載した被告製品を製造，販売する被告の
行為は，原告プログラムについて原告が有する著作権（複製権，翻案権，譲渡権）
を侵害する。
ア 原，被告の「電車線－基準線作成プログラム」の同一性
(ア) メニュー表示部
原，被告のメニュー表示部は，処理手順ないしフローチャート等，その
基本的な構造が全く同一である。
(イ) 基準線のデータ入力部
ａ キロ行程最初の値の入力部
「電車線－基準線作成プログラム」のうち，キロ行程の最初の値を入
力する部分は，原告プログラムが「（setq V0（getreal"\n●キロ行程の最初の値を
ｍ単位で入力＜０＞："））」であるのに対して，被告プログラムが「（setq
fStartKiro(getreal"\nキロ行程の最初の値をｍ単位で入力＜０＞：")）」であり，
ほとんど同一である。また，上記「""」内に記述された日本語部分（画面表示メッ
セージ）もほとんど同じである。
ｂ キロ行程オフセット値の入力部
「電車線－基準線作成プログラム」のうち，キロ行程のオフセット値
（スタート地点から図面を書き出す地点までの距離）を入力する部分は，原告プロ
グラムが「（princ"\n\n\n●キロ行程のオフセット値（スタート値から最"）」
「（setqV1(getreal"\n 初のマークまでの距離)をｍ単位で入力＜０＞："））」で
あるのに対して，被告プログラムが，「（setq fOffsetKiro(getreal"\nキロ行程の
オフセット値（スタート値から最初のマークまでの距離）をｍ単位で入力＜０
＞：")）」であり，ほとんど同一である。また，画面表示メッセージは完全に一致
している。
ｃ 縮尺の入力部
「電車線－基準線作成プログラム」のうち，縮尺を入力する部分は，
原告プログラムが「（setq V２（getreal"\n\n\n●縮尺の分母のみ（例：1/500は
fScScaleC(getreal"\n尺度の分母のみ(１/500のときは500)を入力＜500＞：")）」
であり，ほとんど同一である。また，画面表示メッセージは，実質的に同一であ
る。
ｄ 用紙サイズの入力部
「電車線－基準線作成プログラム」のうち，用紙サイズを入力する部
分は，原告プログラムが「（princ“\n\n\n●キロ用紙サイズＡ４（高さ210ｍｍ）
Ａ３（高さ297ｍｍ）"）」「（setqV3(getstring“\nＡ２（高さ420ｍｍ）を入力＜
Ａ４＞：")）」であるのに対して，被告プログラムが「（setq
sPaSize(getreal“\n用紙サイズ（Ａ４，Ａ３，Ａ２，Ａ１，Ａ０）または高さをｍ
ｍ単位で入力＜Ａ４＞：")）」であり，ほとんど同一である。また，画面表示メッ
セージは，実質的に同一である。
ｅ スパン距離の入力部
「電車線－基準線作成プログラム」のうち，スパン距離を入力する部
分は，原告プログラムが「（setq V0（getstring"\n\nスパンを入力＜50＞"））」
であるのに対して，被告プログラムが「（initget 6）（setq
fSpan(getreal(strcat"\nスパン距離をｍ単位で入力＜"（DelLastZero fOldSpan）"
＞："))）」であり，ほとんど同一である。また，画面表示メッセージは，実質的に
同一である。
(ウ) 基準線の描画部
ａ 初期設定部
「電車線－基準線作成プログラム」のうち，基準線描画部の初期設定
部（変数に値を設定する部分）の構成は，原，被告プログラムのいずれも，「キロ
行程最初の値」，「キロ行程オフセット値」，「縮尺」，「用紙サイズ」の４項目
を採用しているという点で，全く同じである。また，原，被告プログラムの処理の
流れは，いずれも，上記４項目について入力されたデータを設定ファイルから読み
出した後，「キロ行程最初の値」，「キロ行程オフセット値」，「縮尺」，「用紙
サイズ」の順序で変数に値を設定する点において，全く同じである。
ｂ スパンの描画部
「電車線－基準線作成プログラム」のうち，スパン（縦基準線間の距
離）描画部の処理の流れは，原，被告プログラムのいずれも，「Ｌ（スパン線の左
側の補助線の描画）」，「Ｒ（スパン線の右側の補助線の描画）」，「スパン（前
回のスパン位置から，指示されたスパン距離分の間隔を空けた縦線の描画）」の順
に繰り返し処理を行うという点において，実質的に同一である。
ｃ 図面の上下基準線の描画部
「電車線－基準線作成プログラム」のうち，上下基準線を描画する部
分の変数設定の処理の流れは，原告プログラムが，上下基準線を描画するための変
数を設定する順序について，最下位の基準線，最上部の基準線，下から２番目の基
準線，それ以降は上から２番目の基準線まで昇順としているのに対して，被告プロ
グラムが，最下位の基準線，次いで昇順に一番上の基準線としている点において，
ほぼ同一である。
ｄ キロ行程の描画部
「電車線－基準線作成プログラム」のうち，キロ行程（１キロ，０．
のいずれも，①キロ行程の算出の方法，②アルゴリズム，③キロ行程に配置する図
形をシンボル化しているという点において，一致している。
イ シェイプ定義に係る記述の同一性
(ア) 特殊文字データ
被告の特殊文字データのソースプログラム（シェイプ定義）は，原告
の特殊文字データのソースプログラムと実質的に同一である。
例えば，文字コード「０Ｆ２７Ｃ」で表示される「 （（（ 」（甲３
の動き（特殊文字を書き始める起点や，書く順序）こそ異なるものの，相対的な移
動を指示する部分（１つ前の地点から移動する数値を，Ｘ座標，Ｙ座標で記述した
もの）はほぼ一致しており，その結果，画面上に表示される文字の形状（変化点の
座標値）は完全に一致する。このような文字が，実務で使用される文字の９０％を
占めている。
(イ) シェイプコードの割当領域
シェイプコードの割当領域については，被告プログラムと原告プログ
ラムとは実質的に同じである。
すなわち，原告プログラムでは，シェイプ定義ファイル先頭の宣言文
において，「５Ｆ，６０」「７Ｂ，Ａ０」及び「Ｅ０，ＦＥ」の３つの外字の割当
領域を設定している。これは，原告プログラム１を作成した当時は，ＯＳ（ＭＳ－
ＤＯＳ）上に外字領域がなかったため，原告が独自にＡＳＣＩＩ（アスキー）文字
を転換して「５Ｆから６０」「７Ｂから７Ｆ」を外字領域として採用していたが，
その後，原告プログラム２にバージョンアップする際に，Ｗｉｎｄｏｗｓ上に存在
する外字領域である「Ｆ２からＦＥ」に外字を割り当てるようになったためであ
る。したがって，原告プログラムでは，「Ｆ２からＦＥ」領域に割り当てられた文
字は，「５Ｆから６０」「７Ｂから７Ｆ」の領域に登録されたシェイプ定義と全く
同じものである。
これに対し，被告プログラムでも，外字領域として「５Ｆ，６０」
「７Ｂ，７Ｆ」「８１，９Ｆ」「Ｅ０，ＥＡ」「Ｆ２，ＦＥ」の５領域を設定して
いる。「７Ｂ，７Ｆ」「８１，９Ｆ」は，「８０」を境にして「７Ｂ，Ａ０」の領
域を分割したものであり，同様に，「Ｅ０，ＥＡ」「Ｆ２，ＦＥ」は，「Ｅ０，Ｆ
Ｆ」の領域を分割したものであるから，原，被告プログラムのシェイプコードの割
当領域は実質的に同じである。
ウ 依拠性について
原告プログラムを複製，格納した製品は，ＪＲ東日本に納入されてお
り，被告は，ＪＲ東日本の各支社に出入りする立場にあったから，ＪＲ東日本の従
業員らの協力を得て，原告プログラムを解析する機会があった。
また，被告プログラムと原告プログラムの間には，後記のとおり，被告
プログラムが独立して開発されたのであれば，あり得ないような一致点が数多く存
在する。このことからも，被告は，原告プログラムに依拠して，被告プログラムを
作成したことが明らかである。
（被告の反論）
原告プログラムのうち，原告が，被告プログラムとの類似性を指摘する部
分は，以下のとおり，すべて創作性を有しない。また，原，被告プログラムは，実
質的に同一ではないから，仮に，原告プログラムに創作性のある部分があったとし
ても，被告プログラムは，原告プログラムを複製ないし翻案したものではない。
ア 電車線－基準線作成プログラムの同一性
(ア) メニュー表示部
原告のメニュー表示部のプログラムは，「princ"\n1.データファイル
の作成"」というものにすぎず，何ら創作性を有しない。
また，原告プログラムと被告プログラムとでは，表示されるメニュー
の文言が異なり，実質的に同一とはいえない。
(イ) 基準線のデータ入力部
ａ キロ行程最初の値の入力部
原告のキロ行程の最初の値を入力するプログラムの記述は，創作性
を有しない。すなわち，原告のキロ行程の最初の値を入力するプログラムを簡単に
模式化すれば，「setq Ａ (getreal"メッセージ＜実数＞")」となるが，これは，
メッセージを画面に表示し，実数の入力を求め，入力された実数をＡという変数に
代入するという極めて基本的なプログラムであり，誰が作成しても同一の記述とな
る。
ｂ キロ行程オフセット値の入力部
原告のキロ行程オフセット値の入力部のプログラムの記述は，単純
なものであり，創作性を有しない。
また，原告プログラムでは，princ関数を使用しているのに対し，被
告プログラムでは，setq関数及びgetreal関数を使用している点において，両者は異
なる。
ｃ 縮尺の入力部
原告の縮尺の入力部のプログラムの記述は，創作性を有しない。す
なわち，縮尺の設定において，必要とされる要素は，縮尺の入力を求めるメッセー
ジ表示と実数値の入力であり，そのために必要な最低限のプログラムを模式化する
と，「setq Ａ (getreal"メッセージ＜実数＞"）」となる。原告のプログラム
は，この最低限必要なプログラムと同じものであって，創作性はない。
ｄ 用紙サイズの入力部
原，被告の用紙サイズの入力部のプログラムは，実質的に同一とは
いえない。すなわち，原告プログラムではgetstring関数を使用しているのに対し，
被告プログラムではinitget関数及びgetreal関数を使用している点において，両者
のプログラムは異なる。また，原告プログラムでは，入力されたデータを逐一ファ
イルに書き出しているのに対し，被告プログラムでは，リスト処理をしてからファ
イルに書き出している点において，データの処理方法が異なる。
ｅ スパン距離の入力部
原告のスパン距離の入力部のプログラムと被告の該当部分とのプロ
グラムとは，実質的に同一ではない。
(ウ) 基準線の描画部
ａ 初期設定部
原告プログラムの初期設定部において使用されている「キロ行程最初
の値」「キロ行程オフセット値」「縮尺」「用紙サイズ」の各入力項目は，ＣＡＤ
における製図の際の必要性及びユーザーであるＪＲ東日本の要請によって必然的に
決まるものであるから，その選択には創作性がなく，また，入力項目の変数の設定
の順序にも創作性はない。
被告プログラムと原告プログラムとは，入力されたデータをファイル
に書き出す順序及び使用する関数が異なっているから，実質的に同一ではない。
ｂ スパン線の描画部
原告のスパン線の描画部のプログラムの処理の流れには，創作性がな
い。すなわち，原告プログラムのスパン線描画部は，「Ｌ（左）側 → Ｒ（右）
側 → スパン」の順に繰り返し処理を行うものであるが，スパン線の描画部にお
いて入力されるデータは，スパン間の距離を表す数値又は左右の補助線を描画する
ことを表す「Ｌ」又は「Ｒ」だけであるから，その処理順序は，自ずから限られて
いる。
被告プログラムと原告プログラムとは，スパン線描画部のプログラム
の具体的記述において異なっているから，両者は実質的に同一ではない。
ｃ 図面の上下基準線の描画部
被告プログラムと原告プログラムとは，上下基準線を描画する上下基
準線を描画する順序及び使用する関数が異なっているから，両者は同一ではない。
ｄ キロ行程の描画部
被告プログラムと原告プログラムとは，キロ行程の描画部のアルゴリ
ズムが異なっているから，両者は同一ではない。
イ シェイプ定義に係る記述の同一性
(ア) 特殊文字データ
ａ 原告が主張する「特殊文字データのソースプログラム」は，著作権
法上の保護の対象となるプログラムではない。
すなわち，著作権法（以下「法」という場合がある。）が保護する
プログラム著作物とは，「電子計算機を機能させて一の結果を得ることができるよ
うにこれに対する指令の組み合わせたものとして表現したもの」（法２条１項１０
号の２）である。しかし，原告が主張する「特殊文字のソースプログラム」は，単
なる座標値データであって指令の組み合わせではない。
ｂ 仮に，特殊文字のシェイプ定義のうち，ペンの動き（文字を書く順
序）に関する指令情報が著作権法上のプログラムに該当するとしても，被告の特殊
文字のシェイプ定義と原告の特殊文字のシェイプ定義とは，ペンの動き及び変化点
の座標値において異なるから，両者は同一とはいえない。
(イ) シェイプコードの割当領域
原告プログラムのシェイプコードの割当領域の選択には，創作性がな
い。
ウ 依拠性について
被告プログラムは，被告がＪＲ東日本から開発依頼を受けて，平成７年
ころから，自ら開発を続けてきたものであり，原告プログラムに依拠したものでは
ない。
(2) 被告は，被告プログラムを作成するに際して，原告プログラム１を，自己
のコンピュータ内の記憶媒体等に複製，格納したことがあるか。
（原告の主張）
被告は，過去のいずれかの時点において，ＪＲ東日本の各支社に出入りす
る立場にあったことを利用するなどして，ＪＲ東日本に設置されているコンピュー
ター内のハードディスクに格納された原告プログラムを，自己のコンピュータ内の
記憶媒体等に複製して格納したことがある。被告がこのような行為を行ったこと
は，以下の事実に照らして明らかである。
被告の上記複製行為は，原告プログラムについて原告が有する著作権（複
製権，翻案権）を侵害する。
ア 特殊文字データの変化点の座標値の一致
原告プログラムの特殊文字の形状と，被告プログラムの特殊文字の形状
とは，約９０％以上がほぼ完全に一致している。このことは，これらの特殊文字の
フォント定義において記述されている変化点の座標値が一致していることを意味す
るが，変化点の座標値は，ソースプログラムを見なければ分からないものであるか
ら，被告プログラムの特殊文字のソースプログラムは，原告プログラムを複製し，
解析して作成したものである。
イ シェイプコードの割当領域の一致
原告プログラムと被告プログラムのシェイプコードの割当領域は，ほぼ
完全に一致している。また，原，被告プログラムのいずれにおいても，「Ｆ２から
ＦＥ」領域に割り当てられた文字は，「５Ｆから６０」「７Ｂから７Ｆ」の領域に
登録されたシェイプ定義と全く同じである。原告プログラムでは，特殊文字が二重
に定義されているのは，原告プログラム１のＯＳが外字領域を有しないＭＳ－ＤＯ
Ｓであったためであるが，Ｗｉｎｄｏｗｓ上で作動する被告プログラムでは，「５
Ｆから６０」「７Ｂから７Ｆ」の領域に登録された特殊フォントは不要であるにも
かかわらず，これらの文字が原告プログラムと同じく二重に定義されている点で不
自然である。
このような一致点が存在することは，被告が，原告プログラムを複製
し，これを解析して被告プログラムを作成したことを示している。
ウ 補助線の数の一致
原告の電車線－基準線プログラムと被告の電車線－基準線プログラムと
は，描画される横の補助線の数が一致している。補助線の数は，沿革的な理由で残
されているにすぎないにもかかわらず，この数が一致するということは，被告が，
原告プログラムを複製し，これを解析して被告プログラムを作成したことを示して
いる。
エ エスケープコードの一致
原，被告プログラムは，いずれも「"｝"」をエスケープコードとして使
用している。
原告は，信号設備台帳プログラムやキロ行程の描画部において，小さい
上付き文字を表記するためのエスケープコードとして，「"｝"」を採用しており，
たとえば「"Ｍ｝"」とＡｕｔｏＣＡＤに指令すれば，「Ｍ」の小さい上付き文字が
ＡｕｔｏＣＡＤ上に描かれる。原告プログラムで，このような方法を採用したの
は，ＯＳがＭＳ－ＤＯＳであった時代には，外字領域がなかったため，アスキー文
字の「"｝"」を転用して，特殊文字コントロール記号としたためである。
これに対し，被告プログラムでも，原告プログラムと同様に，「"｝"」
をエスケープコードとして「小さい上付き文字」を表示している。被告プログラム
が開発された当時，ＯＳはＷｉｎｄｏｗｓであり，Ｗｉｎｄｏｗｓには外字領域が
定義されているのであるから，アスキー文字を特殊文字コントロール記号として転
用する必要性が全くなかったことからすれば，被告プログラムで，このような方法
を採用するのは，不自然である。
このような一致点が存在することは，被告が原告プログラムを複製し，
これを解析したことを示している。
オ 改行コードの一致
原告の信号ケーブルプログラムでは，改行コード（入力した文字列を図
面上に表示する際の改行を制御するためのコード）として，「０８６ＢＡ」を使用
しているところ，被告プログラムでも，全く同じ「０８６ＢＡ」を改行コードとし
て使用している。また，改行量も同じであり，このため，原，被告プログラムで作
成した文字列の図面上の配置位置（座標値）は，完全に一致する。
このような改行コードが偶然一致することはあり得ず，これは，被告
が，原告プログラムを複製し，解析したことを示している。
カ 変数に値を設定する順序の一致
上記のとおり，電車線－基準線プログラムのうちの初期設定部は，原，
被告プログラムのいずれも，入力されたデータを設定ファイルから読み出した後，
変数に値を設定する順序が，「キロ行程最初の値」，「キロ行程オフセット値」，
「縮尺」，「用紙サイズ」の順であるという点において，全く同じである。
変数に値を設定する順序は，プログラマーが自由に決定できるものであ
るから，被告プログラムが独立して開発されたものであれば，両者において変数に
値を設定する順序が一致する確率は極めて小さい。特に，被告プログラムでは，入
力されたデータを設定ファイルに書き出す順序は，「縮尺」，「用紙サイズ」，
「キロ行程最初の値」，「キロ行程オフセット値」の順であるにもかかわらず，変
数に値を設定する順序がこれと異なるのは，不自然である。
このことは，被告が原告プログラムを複製し，解析したことを示してい
る。
（被告の反論）
被告は，被告プログラムを作成するに際して，原告プログラム１を自己の
コンピュータ内の記憶媒体等に複製して格納をしていない。
原告は，原，被告プログラムでは，「特殊文字の形状」，「シェイプコー
ドの割当領域」，「補助線の数」，「エスケープコード」，「改行コード及び改行
量」，「変数に値を設定する順序」等が一致することをもって，被告が原告プログ
ラムを複製したと主張する。しかし，以下のとおり，上記各一致点は，原告プログ
ラムを直接複製した上で解析しなくても，他の方法により認識し得る事項であるか
ら，被告が原告プログラムを複製した根拠とはならない。
ア 原告の主張ア及びイについて
特殊文字の形状及びシェイプコードの割当領域は，原告プログラム上で
フォント一覧表を作成するＬＩＳＰプログラムを実行し，印刷した文字フォント一
覧表から分かるものであり，被告は，被告プログラムと原告プログラムとの互換性
を図るために，同一覧表を作成し，これに基づいて，原告プログラムのシェイプコ
ードと同じコードの特殊文字を作成した。
イ 原告の主張ウについて
補助線の数は，原告プログラムが作成した図面上分かるものであり，被
告は，ＪＲ東日本から補助線の数について変更要請がなかったため，従前と同じ本
数を採用した。
ウ 原告の主張エについて
エスケープコードは，原告プログラムが作成した図面上から分かるもの
であり，被告は，原告プログラムと操作上の互換性を図るために，同じエスケープ
コードを採用した。
エ 原告の主張オについて
改行コードは，原告プログラムが作成した図面上から分かるものであ
り，改行量については，異なる改行量を数回図面上で試行することにより，原告プ
ログラムが定義した改行量を探し当てることができる。
(3) 原告の損害額はいくらか。
（原告の主張）
被告は，平成７年ころから現在まで，被告プログラムを複製，格納した製
品を少なくとも合計１００台製造し，販売した。上記製品の１台当たりの利益額は
したがって，原告プログラムに係る著作権を侵害されたことにより生じた
原告の損害額は，４０００万円を下らない。
（被告の反論）
否認ないし争う。
第３ 当裁判所の判断
たるか。）について
(1) プログラムの創作性の有無及び同一性の判断について
ある表現物が，著作権法の保護の対象になる著作物に当たるというために
は，思想，感情を創作的に表現したものであることが必要である。そして，創作的
に表現したものというためには，当該表現が，厳密な意味で独創性のあることを要
しないが，作成者の何らかの個性が発揮されたものであることは必要である。
この点は，プログラム（電子計算機を機能させて一の結果を得ることがで
きるようにこれに対する指令を組み合わせたものとして表現したもの）形式で表現
されたものであっても何ら異なることはない。プログラムは，具体的記述におい
て，作成者の個性が表現されていれば，著作物として著作権法上の保護を受ける。
ところで，プログラムは，その性質上，表現する記号が制約され，言語体
系が厳格であり，また，電子計算機を少しでも経済的，効率的に機能させようとす
ると，指令の組合せの選択が限定されるため，プログラムにおける具体的記述が相
互に類似することが少なくない。仮に，プログラムの具体的記述が，誰が作成して
もほぼ同一になるもの，簡単な内容をごく短い表記法によって記述したもの又は極
くありふれたものである場合においても，これを著作権法上の保護の対象になると
すると，電子計算機の広範な利用等を妨げ，社会生活や経済活動に多大の支障を来
す結果となる。また，著作権法は，プログラムの具体的表現を保護するものであっ
て，機能やアイデアを保護するものではないところ，特定の機能を果たすプログラ
ムの具体的記述が，極くありふれたものである場合に，これを保護の対象になると
すると，結果的には，機能やアイデアそのものを保護，独占させることになる。し
たがって，電子計算機に対する指令の組合せであるプログラムの具体的表記が，こ
のような記述からなる場合は，作成者の個性が発揮されていないものとして，創作
性がないというべきである。
さらに，プログラム相互の同一性等を検討する際にも，プログラム表現に
は上記のような特性が存在することを考慮するならば，プログラムの具体的記述の
中で，創作性が認められる部分を対比することにより，実質的に同一であるか否
か，あるいは，創作的な特徴部分を直接感得することができるか否かの観点から判
断すべきであって，単にプログラムの全体の手順や構成が類似しているか否かとい
う観点から判断すべきではない。
以下，上記のような点を総合考慮して，原告プログラムの創作性の有無及
び被告プログラムとの対比について検討する。
(2) 電車線－基準線作成プログラムについて
ア メニュー表示部
(ア) 原告プログラムの内容
原告プログラム１の電車線－基準線作成プログラムのメニュー表示部
の内容は，以下のとおりである（甲１７，２５）。
原告プログラム１の電車線－基準線作成プログラムのメインプログラ
ムは，画面上に，「１．データファイルの作成」，「２．データファイルの修
正」，「３．基本線作成」，「４．データファイルの文法説明」，「０．終了」と
いうメニュー一覧を表示し，ユーザーが入力したメニュー番号に応じて，各機能を
実行するファイルを呼び出す（ロードする）機能を有するものである。
そのプログラムの記述は，別紙１のとおりであり，１から２８行目ま
での合計２８行から構成されている（空行がある。また，１から４行目は，プログ
ラムの内容や作成年月日などのメモである。）。
ａ ６行目は，「(setq B1 0)」であり，変数Ｂ１を初期化することを指
示する。setq（セットキュー）関数は，ＡｕｔｏＬＩＳＰ言語における基本的な代
入関数である。
ｂ ８から２０行目は，主として，「(princ "\n【メニュー名】"」，
「(princ "\n"）」という構文を６回繰り返すものであり，【メニュー名】の部分に
は，順次，「＜＜ＪＲーＣＡＤ＞＞【電車線キロ行程，基準線作成】」，「１．デ
ータファイルの作成」，「２．データファイルの修正」，「３．基本線作成（デー
タファイル作成後）」，「４．データファイルの文法説明」，「０．終了」が表示
されている。princ（プリンシー）関数は，「" "」内の記述を，そのまま画面上に
表示することを指令する。「￥ｎ」はＭＳ－ＤＯＳ版ＡｕｔｏＣＡＤにおける改行
コードである。
ｃ ２１行目は，「（setq B0 (getint "\n目的の番号を入力<0>:"))(if
(=B0 nil)(setq B0 0)）」であり，「目的の番号を入力＜０＞：」というメッセー
ジを画面に表示した後，ユーザーが入力した整数値（メニュー番号）を，変数Ｂ０
に設定することを指令する。
ｄ ２３から２７行目は，「（if(=B0【メニュー番号】)(load "【ファ
イル名】"))」という構文を４回繰り返し，最後に「(if（=B0 0)(setq B1 1))」と
記述され，【ファイル名】の部分には，順次，データ入力部，修正部，描画部，説
明部を実行するファイル名が記述されている。この部分は，ユーザーの入力するメ
ニュー番号に応じてデータ入力部，修正部，描画部，説明部のいずれかのファイル
をＡｕｔｏＣＡＤに読み込み，ユーザーがメニュー番号「０」（終了）を選択した
場合には，変数Ｂ１に１を設定し，処理を終了することを指令する。
(イ) 創作性の有無
原告プログラムのメニュー表示部のプログラム記述は，全体として短
く，その大部分が，ＡｕｔｏＬＩＳＰ言語で定められた一般的な関数を用いて，簡
単な指令を組み合わせたものにすぎない。したがって，原告プログラムは，制作者
の個性が発揮された表現とはいえず，創作性がない。
また，原告プログラムのメニュー表示部における処理の流れは，①画
面上に，データ作成（入力），修正，描画，説明，終了の順に各メニューメッセー
ジを表示し，②ユーザーにいずれかのメニュー番号を選択（入力）させ，③ユーザ
ーが入力したメニュー番号に応じて，各機能を実行するファイルを呼び出すもので
あるが，これらの流れは，法１０条３項３号所定の「解法」に当たるというべきで
あって，著作権の保護が及ばない。
以上のとおり，原告プログラムのメニュー表示部は創作性がない。
イ 基準線のデータ入力部
(ア) キロ行程最初の値の入力部
ａ 原告プログラムの内容
原告プログラムのキロ行程最初の値の入力部の主たるプログラム記
述（原告が，被告プログラムの該当部分と同一であると主張する記述。後記(イ)な
いし(オ)においても同じである。）は，「(setq V0(getreal"\n●キロ行程の最初の
値をにｍ単位で入力＜０＞:"))」の１行であり（別紙２の１３行目），これによ
り，キロ行程の最初の値の入力を指令するメッセージを画面上に表示し，入力され
た実数を，変数Ｖ０に設定することを指令する（甲１７，２５）。
原告の記述部分を構文にすると「setq V0 (getreal"メッセー
ジ"))」となる。Getreal（ゲットリアル）関数は，ＡｕｔｏＬＩＳＰ言語で実数値
を入力させる際に使用される関数であり，関数の後に記述される「" "」で囲まれた
文字列を，そのまま画面に表示する。￥ｎは，改行を意味するコードである。
ｂ 創作性の有無
原告プログラムのキロ行程最初の値の入力部の記述は，画面上に
「●キロ行程の最初の値をにｍ単位で入力＜０＞：」という文字列を表示した上，
ユーザーが入力した実数値を，ＡｕｔｏＬＩＳＰ言語の一般的な関数を用いて，変
数に設定するという極めて簡単な内容を，ごく短い構文で表現するものである。
したがって，キロ行程最初の値の入力部の記述は，制作者の個性が
発揮された表現とはいえず，創作性はない。
(イ) キロ行程オフセット値の入力部
ａ 原告プログラムの内容
原告プログラムのキロ行程オフセット値の入力部の主たるプログラ
ム記述は，「(princ"\n\n\n●キロ行程のオフセット値（スタート値から最"）」
「(setq V1(getreal"￥ｎ初のマークまでの距離)をｍ単位で入力＜０＞："））」の
力を指令するメッセージを画面上に表示し，入力された実数を，変数Ｖ１に設定す
ることを指令する（甲１７，２５）。
原告の記述部分を構文にすると，「setq V0 (getreal"メッセー
ジ"))」となるが，画面表示メッセージがゲットリアル関数に続く「""」内にすべて
記載されておらず，メッセージの一部は，前行のプリンシー関数を用いて画面表示
する。
ｂ 創作性の有無
原告プログラムのキロ行程オフセット値の入力部の記述は，画面上
に「●キロ行程のオフセット値（スタート値から最初のマークまでの距離）をｍ単
位で入力＜０＞：」という文字列を表示した上，ユーザーが入力した実数値を，Ａ
ｕｔｏＬＩＳＰ言語の一般的な関数を用いて，変数に設定するという極めて簡単な
内容を，ごく短い構文で表現するものである。
したがって，キロ行程オフセット値の入力部の記述は，制作者の個
性が発揮された表現とはいえず，創作性はない。
(ウ) 縮尺の入力部
ａ 原告プログラムの内容
原告プログラムの縮尺の入力部の主たるプログラム記述は，
「（setq V2(getreal "\n\n\n●縮尺の分母のみ（例：1/500は500）入力＜
指令する「●縮尺の分母のみ（例：1/500は500）入力＜500＞：」というメッセージ
を画面上に表示し，入力された実数を，変数Ｖ２に設定することを指令する（甲１
原告の記述部分を構文にすると，上記「キロ行程最初の値の入力
部」及び「キロ行程オフセット値の入力部」の記述と同じく，「setq V0
(getreal"メッセージ"))」となる。
ｂ 創作性の有無
原告プログラムの縮尺の入力部の主たるプログラム記述は，キロ行
程最初の値の入力部及びキロ行程オフセット値の入力部の記述と同じく，制作者の
個性が発揮された表現とはいえず，創作性はない。
(エ) 用紙サイズの入力部
ａ 原告プログラムの内容
原告プログラムの用紙サイズの入力部の主たるプログラム記述は，
「(princ"\n\n\n●キロ用紙サイズＡ４（高さ210ｍｍ）Ａ３（高さ297ｍｍ）")」
「（setq V3（getstring"\n Ａ２（高さ420ｍｍ）を入力＜Ａ４＞:"))」の２行であ
り（別紙２の２６，２７行目），用紙サイズの入力を指示するメッセージとして，
「●キロ用紙サイズＡ４（高さ210ｍｍ）Ａ３（高さ297ｍｍ）Ａ２（高さ420ｍｍ）
を入力＜Ａ４＞：」を画面上に表示し，入力された文字列を，変数Ｖ３に設定する
ことを指令する（甲１７，２５）。
原告の記述部分を構文にすると，「setq V3 (getstring"メッセー
ジ"))」となり，用紙サイズに関しては，入力されるデータは，「Ａ４」「Ａ３」と
いった文字列であるため，文字列の入力に対応するＡｕｔｏＬＩＳＰ言語の関数で
あるgetstring（ゲットストリング）関数を使用している。また，メッセージの一部
は，前行において，プリンシー関数を用いて画面表示する。
ｂ 創作性の有無
原告プログラムの用紙サイズの入力部の記述は，画面上に「●キロ
用紙サイズＡ４（高さ210ｍｍ）Ａ３（高さ297ｍｍ）Ａ２（高さ420ｍｍ）を入力＜
Ａ４＞：」という文字列を表示した上，ユーザーが入力した文字列を，ＡｕｔｏＬ
ＩＳＰ言語で文字列の際に通常用いられる関数を用いて，変数に設定するという極
めて簡単な内容を，ごく短い構文で表現するものである。
したがって，原告の用紙サイズの入力部の記述は，制作者の個性が
発揮された表現とはいえず，創作性はない。
(オ) スパン距離の入力部
ａ 原告プログラムの内容
原告プログラムのスパン（縦の基準線間の距離）の入力部の主たる
プログラム記述は，「setq V0（getstring "\n\nスパンを入力＜50＞"))」の１行で
あり（別紙２の３６行目），これにより，スパンの入力を指示するメッセージとし
て，「スパンを入力＜50＞」を画面上に表示し，入力された文字列を，変数Ｖ０に
設定することを指令する（甲１７，２５）。
原告の記述部分を構文にすると，用紙サイズの入力部の記述と同じ
く，「setq V0 （getstring"メッセージ"))」である。スパンに関しては，入力され
るデータは，スパン（実数値）だけではなく，スパンの左右に補助線を描画するこ
とを指示する文字列（「Ｌ」又は「Ｒ」）も含まれるため，文字列の入力に対応す
るゲットストリング関数を使用している。
ｂ 創作性の有無
原告プログラムのスパンの入力部の記述は，画面上に「スパンを入
力＜50＞」という文字列を表示した上，ユーザーが入力した文字列を，ＡｕｔｏＬ
ＩＳＰ言語で文字列の際に通常用いられる関数を用いて，変数に設定するという極
めて簡単な内容を，ごく短い構文で表現するものである。
したがって，スパン距離の入力部の記述は，制作者の個性が発揮さ
れた表現とはいえず，創作性はない。
ウ 基準線の描画部
(ア) 初期設定部
ａ 原，被告プログラムの内容
(a) 原告プログラムの初期設定部は，ユーザーが入力部で入力したデ
ータに基づいて基準線を描画するため，入力部でデータファイルに書き込んだデー
タを読み出して，変数に設定する役割を有する。原告プログラムの初期設定部の記
述は，描画部ファイル（別紙３）の記述のうち２２から５３行目までの３２行であ
り，その構成は，以下のとおりである。
まず，「キロ行程の最初の値」について，①「(setq 【変
数】(read-line F1))」という構文により，データファイル内に書き込まれているデ
ータを先頭から１行分読み込み，変数に設定し，②rtos関数及びatof関数（文字列
を実数に変換する関数）などを使用して，上記①の変数を，作図の際に使用できる
実数値又は文字列等に変形させ，その結果を，セットキュー関数で新たな変数に設
定し直し，③新しい変数の設定結果をプリンシー関数で画面上に表示し，その後，
①から③までの処理を，「キロ行程オフセット値」，「縮尺」，「用紙サイズ」の
各入力項目ごとに，繰り返す。
原告プログラムの初期設定部において，変数を設定する順序は，
入力部においてデータをファイルに読み込んだ順序と同一で，「キロ行程の最初の
値」，「キロ行程オフセット値」，「縮尺」，「用紙サイズ」の順序である。これ
は，原告プログラムが，入力部において，「（write-line【変数】F0」という構文
を使って，入力されたデータを，入力された順に逐次データファイルへ書き込んで
いるところ（入力部ファイルの３０から３４行目），初期設定部のデータの読み込
みに使われているread-line関数は，データがファイルに書き込まれた順に先頭から
読み出すことしかできないためである（甲１７，２５）。
(b) これに対し，被告プログラムの初期設定部に該当する部分は，被
告の電車線－基準線作成ファイル（別紙４）の２８４から２９１行目までの８行で
あり（DrawBaseLine関数というローカル関数の定義内に記述されている。），その
構成は，以下のとおりである。
まず，「キロ行程の最初の値」について，①IsBaseLineDataとい
うリスト（複数の値をもった変数）の中から，必要なデータを呼び出し，②データ
をそのままatof関数，fix関数（小数部分を切り捨てて整数変換する関数）などで評
価し，③評価した数値をセットキュー関数で変数に設定し，上記①から③の処理
を，順次，「キロ行程オフセット値」，「縮尺」，「用紙サイズ」という順序で行
う。
被告の上記処理の具体的記述は，「(setq【変数】（【関数（atof
関数など）】（nth【リスト内の順序】IsBaseLineData))」という１行の構文を主と
して，これを各入力項目（変数）ごとに，繰り返す。「（nth【リスト内の順
序】IsBaseLineData）」は，リストの中身のデータを読み込む指令であ
り，Read-line（リードライン）関数のように，データファイルの先頭からだけでは
なく，データファイル内のうち，【リスト内の順序】で指定された位置にあるデー
タを読み出すことができる。なお，被告の電車線－基準線プログラムで
は，IsBaseLineData内のデータは，縮尺，用紙サイズ，キロ行程の最初の値，キロ
行程オフセット値，スパン距離の順序で保持されている（甲１８，２５，２７）。
ｂ 原告プログラムの創作性の有無及び対比
(a) 原告プログラムにおける入力項目として何を用いるかという点
は，アイデアであり，著作権法上の保護の対象となるものではない。また，「キロ
行程最初の値」，「キロ行程オフセット値」，「縮尺」，「用紙サイズ」の順序で
変数に値を設定するという処理の流れも，法１０条３項３号所定の「解法」に当た
り，著作物としての保護を受けない。
(b) 仮に，原告プログラムの初期設定部の具体的記述に，創作性が生
じると解する余地があるとしても，前記認定の原告プログラムの内容に照らして，
創作性の範囲は極めて狭いものというべきである。そして，被告プログラムと原告
プログラムとは，初期設定部に用いられている構文上の相違によって具体的記述が
大きく相違する。被告プログラムの初期設定部の具体的記述は，原告プログラムの
初期設定部の記述と実質的に同一とはいえないし，原告プログラムの創作性を有す
る本質的な特徴部分を直接感得することもできない。
(c) したがって，原告プログラムの初期設定部について複製権又は翻
案権侵害があるとは認められない。
(イ) スパン線の描画部
ａ 原，被告プログラムの内容
(a) スパン線の描画部は，ユーザーから入力され，データファイルに
書き出されたスパン（縦基準線間の距離）に関するデータ（スパン間の距離を表す
数値又は左右補助線を描画することを表す「Ｌ」又は「Ｒ」）を基に，縦の基準
線，左右補助線，スパンの数値，スパン線（中央の横基準線）の描画を行う役割を
有する。
原告プログラムのスパン線の描画部の記述は，原告の描画部ファ
イル（別紙３）の５９から１０５行目までの４７行であり，その構成は，以下のと
おりである。
まず，①変数の初期化等の処理の後，画面左端の基準線の作図を
指令し，②データファイルに入力されているスパン距離に関するデータを，「(setq
【変数】(read-line F1))」という構文で，ファイルの頭から１行分読み込み，③読
み込んだデータが空ではない場合に，後続の処理を行うように指令し，④「（if
（=(substr S0 1 1)" L "）」という指令で評価して，読み込んだデータが「Ｌ」の
場合には，ＡｕｔｏＬＩＳＰ言語のコマンドである「command "line"(list Ｘ座標
描画するよう指令し（Ｘ座標１は，１つ前の基準線のＸ座標値から－４．０オフセ
ットした値，Ｙ座標値１及び同２は，それぞれ左端基準線の両端の点のＹ座標値で
ある。），⑤読み込んだデータが「Ｒ」の場合には，同様に右補助線を描画するよ
う指令し，⑥読み込んだデータが実数値（スパン距離）の場合には，前回のスパン
位置からスパン距離分右側の位置に縦基準線を描画し，かつ，スパン距離を表示す
るよう指令し，⑦上記処理が終了した後は，データファイルからさらにデータを読
み込んで変数を設定するよう指令し，データがあれば上記③の処理を繰り返すが，
データがなければ（変数が空になれば），処理を終了する（甲１７，２５，２
(b) これに対し，被告プログラムのスパン線描画部の記述は，被告の
電車線－基準線作成ファイル（別紙４）の３２９から３６３行目までの３４行であ
り，その構成は，以下のとおりである。
まず，①画面左端の基準線の作図を指令し，作図した結果の図形
情報を，ＡｕｔｏＬＩＳＰ言語の関数であるputlayer関数を用いて，更新し，②初
期カウンタ（変数）を「４」に設定し，リスト内のデータの５番目以降（ユーザー
が入力し，リスト内に保持したデータのうち，５番目以降がスパンに関連するデー
タであるため）を処理対象とするよう指定し，③リストの全体の長さを評価して，
カウンタがリストの長さに達しない限り，後続の処理を繰り返すよう指令し，④カ
ウンタの順序（最初は５番目）に位置するデータをリストから読み出してセットキ
ュー関数で変数（「vItem」）に設定し，⑤「（＝（strcase vItem）」という構文
で評価（変数が大文字に変換される。）した結果，変数がＬである場合は，左補助
線を描画するよう指令し，⑥上記⑤と同じ評価の結果，変数がＲである場合には，
右補助線を描画するよう指令し，⑦「（＜0.0(setq fSpan（atof vItem))」という
構文で評価（数値であれば，実数に変換が行われる。）した結果，変数が実数であ
る場合は，縦基準線及びスパンの数値を描画するよう指令し，⑧最後に，処理カウ
ンタに１を足した後，上記③に戻り，③以降の処理を繰り返す（甲１
ｂ 原告プログラムの創作性の有無及び対比
(a) 原告プログラムにおいて，読み出したデータを「Ｌ」，「Ｒ」，
「スパン」の順序に評価し，描画をするという処理の流れは，法１０条３項３号所
定の「解法」に当たり，著作物としての保護を受けないというべきである。
(b) 仮に，原告プログラムのスパン描画部の具体的記述に，創作性が
生じると解する余地があるとしても，前記認定のプログラムの内容に照らして，創
作性の範囲は極めて狭いものというべきである。そして，被告プログラムと原告プ
ログラムとは，その具体的な変数の評価方法や，全体の処理を繰り返すための方法
手順が異なる。被告プログラムのスパン描画部の具体的記述は，原告プログラムの
スパン描画部の記述と実質的に同一とはいえないし，原告プログラムの創作性を有
する本質的な特徴部分を直接感得することもできない。
(c) したがって，原告プログラムのスパン線描画部の記述について複
製権又は翻案権の侵害があるとは認められない。
(ウ) 図面の上下基準線の描画部
ａ 原，被告プログラムの内容
(a) 上下基準線の描画部は，画面上部に３本，画面下部に６本，合計
原告プログラムの上下基準線の描画部の記述は，原告の描画部フ
ァイル（別紙３）の１０８から１２３行目までの１６行であり，その構成は，主と
して，「command "line"（list Ｘ座標１ Ｙ座標１）（list Ｘ座標２ Ｙ座標
線，以降は昇順に上から２番目の基準線まで，順次９回繰り返すというものであ
り，これにより，各基準線の始点と終点を，ＸとＹの座標値で特定し，２点間に線
を描くことを指令している（甲１７，２５）。
(b) これに対し，被告プログラムの上下基準線の描画部の記述は，被
告の電車線－基準線作成ファイル（別紙４）の３６５から４０７行目までの４３行
であるが，あらかじめそれぞれの基準線のオフセット値（基準線間の間隔。変数の
設定の順序は，最下位の基準線から昇順である。）及び縦線の高さの半分の値を変
数として設定されており（２９３から３０３行目），上下基準線の描画部において
は，「command "Line" 変数１ 変数２ ""」という構文の指令を繰り返し，１つ前
に描画した基準線の座標にオフセット値（変数）を加算して，次の基準線の座標
（変数１，変数２）を求めるという方法で，上下基準線を，画面中央部上側（上か
ら３番目の基準線）から順に上方向へ３本，次いで中央部下側（下から６番目の基
準線）から下部方向へ合計６本の基準線（合計９本）を描画している（甲１８，２
ｂ 原告プログラムの創作性の有無及び対比
(a) 原告プログラムにおいて，上下基準線の座標値を下の基準線から
上の基準線へ昇順に設定し，描画するという処理の流れは，そもそも，法１０条３
項３号所定の「解法」に当たり，著作物としての保護を受けないというべきであ
る。
(b) 仮に，原告プログラムの上下基準線描画部の具体的記述に，創作
性が生じると解する余地があるとしても，前記認定のプログラムの内容に照らし
て，創作性の範囲は狭いものというべきである。そして，被告プログラムと原告プ
ログラムとは，前記認定のとおり，基準線を描画する順序や，基準線の座標値を計
算する方法に関するプログラムの記述において大きく相違する。被告プログラムの
上下基準線描画部の記述は，原告プログラムの上下基準線描画部の記述と実質的に
同一とはいえないし，原告プログラムの創作性を有する本質的な特徴部分を直接感
得することもできない。
(c) したがって，原告プログラムの上下基準線描画部の記述について
の複製権又は翻案権が侵害されている認めることはできない。
(エ) キロ行程の描画部
ａ 原，被告プログラムの内容
(a) キロ行程の描画部は，１キロメートル，０．５キロメートル，
原告プログラムのキロ行程の描画部は，描画部ファイル（別紙
る。
まず，マークを一定間隔（１キロメートルごと，５００メートル
ごと，１００メートルごと）で設定するために，①現在処理中のキロ行程の値を，
一定の間隔の数値（たとえば，１キロメートルマークについては１０００）で除
し，その結果を切り捨て，さらに同数値（１０００）を乗じ，その計算結果が，も
とのキロ行程の値と一致するときには，１キロメートルマークのシンボルを表示し
（プログラムとは別に定義してある図形を読み込む），②一致しない場合には，続
けて５００メートルマークを表示する場合に当たるかを，同様の方法（ただし，除
したり乗じたりする数値は，５００になる）で判定し，③一致しない場合には，続
けて１００メートルマークを表示する場合に当たるかを，同様の方法（ただし，除
したり乗じたりする数値は，１００になる）で判定し，④上記処理を終了後，現在
処理中のキロ行程の値に０．１メートルを加算した後，上記①へ戻って同じ処理を
繰り返し，現在処理中のキロ行程が，事前に変数として設定してある「最大のキロ
行程」と一致するに至ったとき（キロ行程が画面の右端に達したとき）は，終了す
る（甲１７，２５）。
(b) これに対し，被告プログラムのキロ行程の描画部の記述は，被告
の電車線－基準線作成ファイル（別紙４）の４１０から４４９行の合計４０行であ
り，その構成は，マークを設置する一定間隔（１キロメートルごと，５００メート
ルごと，１００メートルごと）の判定をする方法として，rem（レム）関数を用いて
おり，現在処理中のキロ行程を，一定の間隔の数値（例えば，１キロメートルマー
クについては１０００）で除し，その余りが０のときは，１キロメートルマークの
シンボルを表示する（プログラムとは別に定義してある図形を読み込む）という計
算方法を採用している（甲１８，２５）。
ｂ 原告プログラムの創作性の有無及び対比
(a) 原告プログラムにおける「アルゴリズム」は，そもそも法１０条
し，プログラムとは別に定義（シンボル化）された図形を読み込むという方法も，
アイデアに当たり，著作権法上保護されるものではない。
(b) 仮に，原告プログラムのキロ行程の描画部の具体的記述に，創作
性が生じると解する余地があるとしても，前記認定のプログラムの内容に照らし
て，創作性の範囲は狭いものというべきである。そして，被告プログラムと原告プ
ログラムとは，キロ行程の値の評価方法が相違することにより，プログラムの記述
において大きく相違する。被告プログラムのキロ行程の記述は，原告プログラムの
キロ行程の記述と実質的に同一とはいえないし，また，原告プログラムの創作性を
有する本質的な特徴部分を直接感得することもできない。
(c) したがって，原告プログラムのキロ行程の記述について複製権又
は翻案権が侵害されていると認めることはできない。
エ 以上によれば，被告の「電車線ー基準線プログラム」が，原告の「電車
線ー基準線プログラム」の複製又は翻案である旨の原告の主張は，理由がない。
(3) シェイプ定義に係る記述について
ア 特殊文字データ
証拠（甲６ないし８，１９，２４，３３，乙１，２，４，８ないし１
(ア) ＡｕｔｏＣＡＤ文字フォント等の概要
ａ ＡｕｔｏＣＡＤの文字フォント
(a) ＡｕｔｏＣＡＤの文字フォントには，大きく分けて，半角フォン
ト，ビッグフォント，ＴｒｕｅＴｙｐｅフォントの３種類がある。ビッグフォント
は，漢字など非ＡＳＣＩＩ文字を表現するための特殊な形式のシェイプ定義ファイ
ルである。一般的に，コンピューターで扱うすべての文字は，すべて１つ１つ「文
字コード」が割り当てられているが，コンピューターの文字コードは基本的には２
ントでは，２バイトコード（文字コードを２つ連結し，１つの文字を指定する。）
によって文字を表現することができる。２バイトコードを用いる際には，コンピュ
ーターが，１つ目のコードを独自の文字コードであると誤認識しないよう，滅多に
使用しない特定のＡＳＣＩＩコードを「エスケープコード（コンピューターが次の
文字とあわせて漢字と判断する文字コード）」として，ユーザーが選択することが
できる。
ＡｕｔｏＣＡＤには，ビッグフォントファイルとして，あらかじ
めＢＩＧＦＯＮＴ．ｓｈｘ及びＥＸＴＦＯＮＴ．ｓｈｘが添付されており，同ファ
イル内の文字の定義は，公開されており，これを改変・参照して，文字を独自の仕
様とすることが可能である。
(b) ビッグフォントのシェイプ定義ファイルの最初の行は，「＊ＢＩ
ＧＦＯＮＴ nchars，nranges，b1，e1，b2，e2，・・」という構文に従って記述
（領域宣言）される。
「nchras」は，その記述に続いて定義されている文字定義数の近似
値である。
「nranges」は，エスケープコードとして使用される連続範囲の数を
指定する。
「b1,e1」は，エスケープコードとして使用される連続範囲における
先頭及び最終コードを指定する。
ｂ ＡｕｔｏＣＡＤシェイプ定義に係る記述
シェイプ定義ファイルは，ＡｕｔｏＣＡＤの規定する文法に従って
記述されており，その規約は，ＡｕｔｏＣＡＤに標準添付されるマニュアルに記載
されている。なお，ＡｕｔｏＣＡＤのフォントは，ビットマップのように字形を
「点の集まり」で表すのではなく，線で表すベクトルフォントである。
ＡｕｔｏＣＡＤのシェイプ定義ファイルのシェイプ記述の構文は，
以下のとおりであり，シェイプ定義ファイルの各行には，最大１２８文字まで記述
できる。
「*shapenumber, defbytes, shapename
specbyte 1, specbyte 2, specbyte 3....0」
(a) 「*shapenumber」とは，ファイルに対して与えられる一意な番号
（シェイプ番号）で，シェイプファイルを呼び出す場合は，このシェイプ番号を指
定する。文字フォントの場合は，ＡＳＣＩＩコードの中の各文字の値に対応する固
有の番号が必要である（なお，シェイプ定義ファイルでは，文字以外の図形等のシ
ェイプを記述することも可能であり，その場合には，任意の番号を割り当てること
ができる。）。
(b) 「defbytes」は，シェイプを記述するのに必要となるデータバイ
ト数で，上限は，各シェイプにつき２０００バイトである。
(c) 「shapename」は，シェイプ名である。
(d) 「specbyte」とは，シェイプ指定バイトであり，各指定バイト
は，ベクトルの長さ及び方向又は特別コード番号の１つを定義するコードである。
特別コード番号には，０からＥまでの１５種類があり，例えば，「０」又は「００
にする（ペンダウン）」，「２」又は「００２」は「描画モードを非アクティブに
する（ペンアップ）」，「３」又は「００３」はその次に記述されるバイトでベク
トルの長さを除し，「４」又は「００４」はその次に記述されるバイトでベクトル
の長さを乗じるという意味を有する。
シェイプ指定バイトにおいて，各変位点を記述する方法として
は，①ベクトルの長さ及び方向コードを３文字の文字列で表現する方法（最初の文
字がゼロで，２番目の文字がベクトルの長さを，３番目の文字がベクトルの方向を
指定する）と，②特別指定コード「８」又は「９」に続けて，座標値を「（Ｘ変
位，Ｙ変位）」で指定する方法がある。①の記述方法では，ベクトルの長さとして
指定できる有効範囲は１（１単位長）からＦ（１５単位長）の１５種類であり，方
向を指定できる有効範囲は，０からＦまで（９０度方向から反時計回りに順に１６
等分した方向）の１６種類である。②の記述方法では，ＸＹ変位値として指定でき
る範囲は，－１２８から＋１２７までである。
(イ) 原，被告シェイプ定義に係る記述の内容
ａ 原，被告のフォント定義に係る記述
(a) 原告のフォント定義に係る記述
原告のＳＵＧ－ＢＩＧ１．ｓｈｐ（シェイプ定義ファイル）冒頭
の宣言文は，「＊ＢＩＧＦＯＮＴ １０３６９，３，０５Ｆ，０６０，０７Ｂ，０
Ａ０，０Ｅ０，0ＦＦ」であり（甲１９），これは，エスケープコードとして使用さ
れる連続範囲として，「５Ｆ，６０」「７Ｂ，Ａ０」「Ｅ０，ＦＦ」の３つの外字
領域を設定したことを意味する。
原告は，原告のフォント定義ファイルにおいて，ＡｕｔｏＣＡＤ
で標準添付されていない漢字，アルファベット，下付き文字，上付き文字，文章中
で用いる特殊記号などについて，独自の定義文を作成している。
(b) 被告のフォント定義に係る記述
被告プログラムの特殊文字には，被告が，ＡｕｔｏＣＡＤに添付
されているフォントを利用せずに，独自に作成した特殊フォントが１１８文字あ
る。このうち，「５Ｆ，６０」「７Ｂ，Ａ０」「Ｅ０，ＦＥ」の３つの外字領域内
にコードが指定されている文字（原告の特殊文字と共通のシェイプコードを有する
文字）で，かつ，原告も，ＡｕｔｏＣＡＤに添付されているフォントを利用せず
に，独自に作成した特殊文字は，合計５４文字である。
したがって，シェイプ定義の変化点の座標値も異なっている。１文字は，変化点の
座標値及び筆順はほぼ同じであるが，文字の起点が異なっている結果，文字の形状
は重ならない。３８文字は，形状は同じで，ほぼ重なるが，筆順（原告のシェイプ
定義は，反時計回り又は下から上へ，被告のシェイプ定義は時計回り又は上から下
へと記述している。）が異なるため，シェイプ定義中の変化点の座標値は異なって
いる。３８文字のうち１つは，後記文字コード「０Ｆ２７Ｃ」の文字「（（（」で
ある。５文字は，文字の形状も筆順も一致しており，したがってシェイプ定義の変
化点の座標値も一致するが，シェイプ定義の冒頭で記述するベクトルの倍率の表示
が異なるなど，シェイプ定義全体の具体的記述には異なっている部分がある。上記
小文字のエル）」である。
ｂ 原，被告の文字コード「０Ｆ２７Ｃ」の記述
(a) 原告のシェイプ記述
文字コード「０Ｆ２７Ｃ」についての原告のシェイプ定義の記述
は，以下のとおりである。
「＊ＯＦ２７Ｃ，１０７，［｛Ｂ＝特殊（（（］
（８，２，２），２，（８，０，－２８），（８，５，４），１，（８，－２，
（８，２，４），（８，２，２），２，（８，０，－２６），（８，６，３），
したがって，原告のシェイプ記述においては，描画モードが作動
（アクティブ）になった後は，「（－２，２），（－２，３），（－２，４），
（－１，６），（１，６），（２，４），（２，３），（２，２），（０，－３
（１，６），（１，２），（２，３），（２，２），（０，－２８），（５，
（２，４），（２，２）」の変化点の順に，線を描画しており，これは，画面上，
「（」を下から上方向へ，左側から右方向へと描く動きとなる。
(b) 被告のシェイプ記述
文字コード「０Ｆ２７Ｃ」についての被告のシェイプ定義の記述
は，以下のとおりである。
「＊ＯＦ２７Ｃ，９５，（（（
（－１５，－６），４，１００，３，６０，０」
したがって，被告のシェイプ記述においては，描画モードが作
動（アクティブ）になった後は，「（－２，－２）（－２，－３），（－２，－
（１，－４），（２，－４），（２，－２）」の変化点の順に，線を描画してお
り，これは画面上，「（」を上から下方向へ，左側から右方向へと描く動きとな
る。
(c) 文字コード「０Ｆ２７Ｃ」で表示される「 （（（ 」について
は，原，被告のシェイプ定義いずれで表示された場合でも，画面上の形状は同一で
あり，両者は重なり合う。
(ウ) 原告シェイプ定義に係る記述の創作性の有無及び対比等
ａ 法２条１項１０号の２所定のプログラム該当性の有無
原告のシェイプ定義の記述が，法２条１項１０号の２所定のプログ
ラムに該当するか否かについて，念のため判断する。
原告のシェイプ定義の記述は，例えば「２」や「０」のような数字
から構成され，これにより，「ペンアップ」「シェイプ終了」という動作が電子計
算機により行われる。同記述は，ＡｕｔｏＣＡＤ上に存在し，シェイプ記述を定義
するプログラム（例えば，「２」は「ペンアップ」を意味することを定義するプロ
グラム）に読み込まれ，協働して機能することによって初めて，電子計算機に対す
る指令としての意味を持つ。そうすると，シェイプ定義の記述は，ＡｕｔｏＣＡＤ
によって読み込まれる情報を記載した単なるデータであるから，それ自体独立し
て，「電子計算機を機能させて一の結果を得ることができるようにこれに対する指
令の組み合わせたものとして表現したもの」に当たらないと解する余地もなくはな
い。しかし，たとえ，当該記述が，独立性がなく，個別的に利用することができな
いものであったとしても，データ部分を読み込む他のプログラムと協働することに
よって，電子計算機に対する指令を組み合わせたものとして表現したものとみるこ
とができるのであるから，そのような記述も，同号所定のプログラムに当たると解
して差し支えない。
そうすると，原告のシェイプ定義の記述は，具体的な記述に創作性
がある限りにおいて，著作権法の保護の対象になるというべきである。
ｂ 創作性の有無
原告のシェイプ定義の記述方法は，シェイプ定義ファイルを実行す
るプログラムであるＡｕｔｏＣＡＤによって規定されており，その記述は，ベクト
ルの始点と終点を定める変位点の座標値（－１２８から＋１２７まで）又はベクト
ルの長さ及び方向コードを表現する３文字の文字列と，これらの座標値間の移動を
指示する１から１０までの特別指定コードの組合せにより表現されている。そし
て，シェイプ定義に係る文法によれば，特定の形状のフォント又はシェイプを，通
常の筆順で記述しようとすれば，その変位点の座標値の記述方法について，制作者
の選択の幅は極めて狭いものであるから，シェイプ記述に創作性が生じるものとい
うことはできない。そして，原告の特殊文字のシェイプ定義に係る記述は，当該文
字を描く筆順として通常の筆順に従っているから，原告のシェイプ記述の座標値の
記述に，創作性があるとはいえない。
ｃ 対比
仮に，原告のシェイプ記述の具体的表現に創作性が認められると解
する余地があるとしても，上記のとおり，原，被告が独自に作成した特殊文字合計
とに照らすならば（たとえば，原告が同一であると主張する「（（（」の原，被告
のシェイプ記述の筆順は，被告のシェイプ記述が上から下方向へ書いているのに対
し，原告のシェイプ記述は，下から上方向へと書いている点において相違があり，
シェイプ定義の具体的記述は相違する。），両者の具体的表現方法が実質的に同一
とはいえないし，また，原告シェイプ定義記述の創作性を有する本質的な特徴部分
を直接感得することもできない。
なお，上記５４文字中，５文字（「×」「／」「｜」「 （上付き
小文字のエル）」「 （下付き小文字のエル）」）については，上記シェイプ記述
の表現は，ほぼ必然的に決まるというべきであるから，５文字に関するシェイプ定
義に創作性が生ずる余地はない。
ｃ したがって，原告の特殊文字コードのシェイプ記述について，複製
権又は翻案権侵害があるとは認められない。
イ シェイプコードの割当領域について
原告は，被告プログラムと原告プログラムとは，シェイプコードの割当
領域において実質的に同一である旨主張する。しかし，原告プログラムにおけるシ
ェイプコードの割当領域の選択は，アイデアに当たり，その点において，原告プロ
グラムないし原告シェイプ定義記述の創作性を基礎付けることはできない。この点
における原告の主張は失当である。
を，自己のコンピュータ内の記憶媒体等に複製，格納したことがあるか。）につい
て
原告は，被告プログラムと原告プログラムとの間に，共通点が存在すること
を根拠として，被告が，原告プログラムを被告のコンピュータ内の記憶媒体等に複
製して格納したことがあると主張する。
しかし，以下のとおりの理由から，原告プログラムと被告プログラムとに共
通する点があったとしても，被告は，被告のコンピュータ内の記憶媒体等に複製す
る方法以外の方法によって，原告プログラムの内容を認識することができるから，
これらの共通点が存在することをもって，被告が原告プログラムを複製したと認め
ることはできない。
(1) 特殊文字データの変化点の座標値の一致について
原告は，原告プログラムの特殊文字の形状と，被告プログラムの特殊文字
の形状の９０％がほぼ完全に一致していることをもって，被告が原告プログラムを
複製したことがある旨主張する。
しかし，原告プログラムの特殊文字の形状は，原告プログラムで使用され
ている「フォント一覧表」を作成するＬＩＳＰプログラムを，原告プログラム上で
実行し，作成した「フォント一覧表」を見ることにより認識できるものであるし
（乙４，８，１０），上記認定のとおり，原，被告が独自に作成した５４文字のう
ち，シェイプ定義（変化点の座標値）が完全に一致するものは５文字しかなく，そ
の５文字は，いずれも座標値が一致しても不自然ではないような簡単な形状のもの
であるから，原，被告の特殊文字の形状が一致していることをもって，被告が原告
プログラムを複製したと認めることはできない。
(2) シェイプコードの割当領域の一致
原告は，原，被告のシェイプコードの割当領域が，ほぼ完全に一致してい
ること及び当該割当領域に割り当てられている特殊外字が，２重定義されている部
分も含めて，すべて一致していることをもって，被告が原告プログラムを複製した
ことがあると主張する。
しかし，証拠（乙４，８，１０）によれば，原告プログラムの特殊文字の
シェイプコード及びその割当領域は，原告プログラムにおいて使用されているフォ
ントを表示した「フォント一覧表」を見ることにより認識することができ，被告
は，原告プログラムで作成された図面を被告プログラムで開くことができるように
するために，同表に基づき，原告プログラムに存在する特殊文字に対応する特殊文
字に，原告プログラムにおいて割り当てられたシェイプコードと同じシェイプコー
ドを割り当てたことが認められるから，原，被告の特殊文字のシェイプコードの割
当領域が一致していることをもって，被告が原告プログラムを複製したと認めるこ
とはできない。
(3) 補助線の数の一致
原告は，被告の電車線－基準線プログラムで描画される横の補助線（上下
基準線）の数が，原告の補助線の数と一致していることをもって，被告が，原告プ
ログラムを複製したことがある旨主張する。
しかし，上下基準線の数は，原告プログラムによって作成された図面を見
ることによって容易に分かることであるし（甲３），被告が，ＪＲ東日本の便宜の
ために，従前の図面と一致する数とすることは，何ら不自然なことではないから，
このことをもって，被告が，原告プログラムを複製したと認めることはできない。
(4) エスケープコードの一致
原告は，被告プログラムが使用するエスケープコード（「"｝"」）が，原
告プログラムで使用されているコードと同じであることをもって，被告が，原告プ
ログラムを複製したことがある旨主張する。
しかし，原告が使用するエスケープコードは，当該エスケープコードを使
用して作成した原告プログラムを，被告プログラム上で開けば，エスケープコード
としての役割を果たさずに，そのまま当該コードの文字として，画面上に表示され
るものであるから（乙４），原告プログラムを複製することなく知り得るものであ
るし，被告が，ユーザーであるＪＲ東日本が操作する上で便利なように，原告プロ
グラムと同じコードをエスケープコードとすることは，何ら不合理なことではない
から，エスケープコードが一致していることをもって，被告が原告プログラムを複
製したと認めることはできない。
(5) 改行コードの一致
原告は，被告プログラムが使用する改行コード及び改行量が，原告プログ
ラムが使用する改行コード及び改行量と同じであることをもって，被告が，原告プ
ログラムを複製したことがある旨主張する。
しかし，原告が使用する改行コードは，当該改行コードを使用して作成し
た原告プログラムを，被告プログラム上で開くと，可読不可能な文字（「・」）と
して画面上に表示されるが，そのコードは，当該文字を他のアプリケーションに貼
り付けることによって調べることが可能であり（乙４），その改行量も（原告の改
行コードのシェイプ定義では，変位点の座標値が（０，－３０）であり，これは下
方向へ３０単位移動することを意味する。），画面上の表示内容から，原告の改行
コードを用いた場合の改行量と同じ改行量を探すことは可能であるし，被告が，Ｊ
Ｒ東日本の操作上の便宜のため，原告プログラムと同じコードをエスケープコード
とし，改行量を一致させること自体は，何ら不自然なことではないから，エスケー
プコードが一致していることをもって，被告が原告プログラムを複製し，解析した
と認めることはできない。
(6) 変数に値を設定する順序の一致
原告は，被告の初期設定部のプログラムでは，変数に値を設定する順序
（「キロ行程最初の値」「キロ行程オフセット値」「縮尺」「用紙サイズ」の順）
が，原告プログラムで変数に値を設定する順序と同じであることをもって，被告
が，原告プログラムを複製したことがある旨主張する。
しかし，上記順序は，変数を設定する順序としては，何ら不自然なもので
はなく，この点が一致していることをもって，被告が原告プログラムを複製したと
認めることはできない。
(7) 以上のとおり，原告が主張する各一致点をもって，被告が原告プログラム
を複製したことがあると認めることはできず，その他，原告の主張を認めるに足り
る証拠はない。
したがって，この点に関する原告の主張は理由がない。
理由がない。よって，主文のとおり判決する。
東京地方裁判所民事第２９部
裁判長裁判官 飯 村 敏 明
裁判官 今 井 弘 晃
裁判官 大 寄 麻 代
（別紙）
被告製品目録
原告プログラム目録
「電車線－基準線作成プログラム」のうち，メニュー表示部のプログラム，
入力部のプログラム，描画部のプログラムは，それぞれ別紙１ないし３のとおりで
ある。
別紙１別紙２別紙３
被告プログラム目録
「電車線－基準線作成プログラム」のうち，メニュー表示部のプログラム，
入力部のプログラム，描画部のプログラムは，別紙４のとおりである。
別紙４

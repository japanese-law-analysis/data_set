{
  "trial_type": "IPCase",
  "date": {
    "era": "Heisei",
    "year": 15,
    "month": 1,
    "day": 31
  },
  "case_number": "平成13(ワ)17306",
  "case_name": "",
  "court_name": "東京地方裁判所",
  "right_type": "著作権",
  "lawsuit_type": "民事訴訟",
  "lawsuit_id": "11333",
  "detail_page_link": "https://www.courts.go.jp/app/hanrei_jp/detail7?id=11333",
  "full_pdf_link": "https://www.courts.go.jp/app/files/hanrei_jp/333/011333_hanrei.pdf",
  "contents": "平成１３年(ワ)第１７３０６号　著作権侵害差止等請求事件\n平成１４年１０月２日口頭弁論終結\n判　　　　　　　　　決\n原　　　　　　　告　　　株式会社ワイビーエム\n同訴訟代理人弁護士　　　伊  関  正  孝\n同　　　　　　　　　　　高  橋  利  全\n被　　　　　　　告　　　佐鳥電機株式会社\n同訴訟代理人弁護士　　　真  山    　泰\n同　　　　　　　　　　　茶  谷    　篤\n同　　　　　　　　　　　吉  増  泰  實\n同　　　　　　　　　　　南  雲  隆  之\n主　　　　　　　　　文\n１　原告の請求をいずれも棄却する。\n２　訴訟費用は原告の負担とする。\n事　実　及　び　理　由\n第１　請求\n１　被告は，別紙被告製品目録記載の製品を製造，使用，販売，頒布又は輸出し\nてはならない。\n２　被告は，前項記載の製品を廃棄せよ。\n３　被告は，原告に対し，金４０００万円及びこれに対する平成１３年９月４日\nから支払済みまで年５分の割合による金員を支払え。\n第２　事案の概要\n原告は被告に対し，別紙被告プログラム目録記載の各プログラムを（以下，\n総称して「被告プログラム」という。）搭載した別紙被告製品目録記載の製品（以\n下「被告製品」という。）を製造，販売するなどの被告の行為が，原告の有する原\n告プログラム目録記載の各プログラム（以下，総称して「原告プログラム」とい\nう。）に係る著作権（複製権，翻案権，譲渡権）を侵害すると主張して，被告の上\n記各行為の差止及び損害賠償金の支払等を求めた。\n１　前提となる事実（証拠等は文末に付した。）\n(1)　原告プログラム\nア　吉沢ビジネス・マシンズ株式会社（以下「吉沢ビジネス・マシンズ」と\nいう。）は，平成元年９月ころ，ＭＳ－ＤＯＳ３．１上で作動し，ＡｕｔｏＣＡＤ\nＧＸⅢ版に対応する別紙原告プログラム目録の１記載のプログラム（以下「原告\nプログラム１」という。）を開発し，東日本旅客鉄道株式会社（以下「ＪＲ東日\n本」という。）千葉支社等に対し，同プログラムを複製，格納した製品の納入を開\n始した（甲１４，弁論の全趣旨）。\nイ　吉沢ビジネス・マシンズは，平成８年１１月ころ，原告プログラム１を\nバージョンアップし，Ｗｉｎｄｏｗｓ上で作動し，ＡｕｔｏＣＡＤ　Ｒ１３Ｊ版に\n対応する同目録の２記載のプログラム（以下「原告プログラム２」という。）を開\n発し，ＪＲ東日本秋田支社等に，同プログラムを複製，格納した製品を納入した\n（弁論の全趣旨）。\nウ　原告は，平成１２年１１月１日，吉沢ビジネス・マシンズから，代金２\n億円で，原告プログラムに関する開発，販売，保守サービス等一切の事業を譲り受\nけるとともに，原告プログラムの著作権及び同権利の侵害により同日までに発生し\nた損害賠償請求権を譲り受けた（甲１１，１２）。\n(2)　被告プログラム\nア　被告は，平成９年３月ころ，Ｗｉｎｄｏｗｓ上で作動し，ＡｕｔｏＣＡ\nＤ　Ｒ１３Ｊ版に対応する被告プログラム目録の１記載のプログラム（以下「被告\nプログラム１」という。）を開発し，ＪＲ東日本の盛岡支社等に，これを複製，格\n納した製品を納入した（乙３，弁論の全趣旨）。\nイ　被告は，平成１０年１０月ころには，被告プログラム１をバージョンア\nップし，ＡｕｔｏＣＡＤ　Ｒ１４版に対応する同目録の２記載のプログラム（以下\n「被告プログラム２」という。）を開発し，さらに平成１３年１０月ころには，被\n告プログラム２をバージョンアップし，ＡｕｔｏＣＡＤ　２０００ｉ版に対応する\n同目録の３記載のプログラム（以下「被告プログラム３」という。）を開発し，そ\nれぞれを複製，格納した製品をＪＲ東日本の盛岡支社等に納入した（乙３，弁論の\n全趣旨）。\n(3)　原告プログラムの内容\nア　原告プログラムは，ＡｕｔｏＣＡＤ上で作動し，鉄道電気設計及び設備\n管理用の図面を作成するコンピュータ支援設計製図ソフトプログラムである。な\nお，ＡｕｔｏＣＡＤとは，オペレーティングシステム（ＭＳ－ＤＯＳ又はＷｉｎｄ\nｏｗｓ）上で作動するオートデスク社製の汎用型ＣＡＤシステム（２次元又は３次\n元の図面の作成，変更，削除，表示，印刷等を行うプラットフォーム）である。\n原告が複製権侵害と主張する部分は，原告プログラムの，以下のイ及び\nウである。\nイ　原告「電車線－基準線作成プログラム」\n(ア)　原告「電車線－基準線作成プログラム」は，原告プログラムの一部\nであるが，ユーザーの入力するデータに従って，電車線（電気機関車及び電車に動\n力用の電気を供給するために使用する接触電線等）の設計図面の作図を補助するた\nめ，縦及び上下の基準線を描画するプログラムである。\n(イ)　原告「電車線－基準線プログラム」は，各機能ごとに記述され，以\n下の５つのファイルに分けられている（甲１７，２７）。\nａ　メイン部　ＹＢＪーＴＲ６８．ｌｓｐファイル（別紙１）\nｂ　入力部　　ＹＢＪ－ＴＱ０２．ｌｓｐファイル（別紙２）\nｃ　修正部　　ＹＢＪ－ＴＲ８０．ｌｓｐファイル\nｄ　描画部　　ＹＢＪ－ＴＲ７９．ｌｓｐファイル（別紙３）\nｅ　説明部　　ＹＢＪ－ＴＲ７８．ｌｓｐファイル\n(ウ)　原告「電車線ー基準線プログラム」は，ＡｕｔｏＬＩＳＰ言語（イ\nンタープリター方式のプログラム言語。同言語の記述は，コンパイルする必要がな\nい。）で記述されている。なお，原告プログラムは，暗号化されたソースプログラ\nム形式によって，原告製品のハードディスク内に複製，格納され，同プログラムに\nついてのオブジェクトプログラムは存在しない（弁論の全趣旨）。\nウ　シェイプ定義に係る記述\n原告プログラムを複製，格納した製品のハードディスク内には，多数の\n特殊文字（フォント）や特殊図形（シェイプ）についてのシェイプファイル（拡張\n子ｓｈｘのバイナリデータファイル）が格納されている（甲１９，２４）。シェイ\nプファイルは，シェイプ定義ファイル（拡張子がｓｈｐのファイル）をＡｕｔｏＣ\nＡＤのコマンドで機械語に翻訳（コンパイル）することによって生成されるファイ\nルである。シェイプ定義ファイルは，ＡｕｔｏＣＡＤのシェイプ定義文に従って記\n述されている（乙２）。\n(4)　被告プログラムの内容\nア　被告プログラムも，ＡｕｔｏＣＡＤ上で作動し，鉄道電気設計及び設備\n管理用の図面を作成するコンピュータ支援設計製図ソフトプログラムである。\nイ　被告「電車線－基準線作成プログラム」\n被告「電車線－基準線作成プログラム」も，被告プログラムの一部を構\n成し，ユーザーの入力するデータに従って，電車線（電気機関車及び電車に動力用\nの電気を供給するために使用する接触電線等）の設計図面の作図を補助するため，\n縦及び上下の基準線を描画するプログラムである。\n被告「電車線ー基準線プログラム」は，別紙４のとおり，ＢＡＳＥＬＩ\nＮＥ．ｌｓｐファイル上に，ＡｕｔｏＬＩＳＰ言語で記述されている（甲１８）。\nウ　シェイプ定義に係る記述\n被告プログラムを複製，格納した製品のハードディスク内には，特殊文\n字（フォント）や特殊図形（シェイプ）についてのシェイプファイル（拡張子ｓｈ\nｘのバイナリデータファイル）が格納されている（乙１）。シェイプ定義ファイル\nは，ＡｕｔｏＣＡＤのシェイプ定義文に従って記述されている。\n２　争点\n(1)　被告プログラムは，原告プログラムを複製ないし翻案したものに当たるか\n（被告製品を製造，販売するなどの被告の行為は，原告プログラムに係る複製権，\n翻案権，譲渡権を侵害するか。）。\n(2)　被告は，被告プログラムを作成するに際して，原告プログラム１を，自己\nのコンピュータ内の記憶媒体等に複製，格納したことがあるか。\n(3)　原告の損害額はいくらか。\n３　争点に関する当事者の主張\n(1)　被告プログラムは，原告プログラムを複製ないし翻案したものに当たる\nか。\n（原告の主張）\n被告は，以下のとおり，原告プログラムに依拠して，原告プログラムと実\n質的に同一であるか，又は二次的著作物に当たる被告プログラムを作成した。被告\nプログラムは原告プログラムを複製ないし翻案したものである。\nしたがって，被告プログラムを搭載した被告製品を製造，販売する被告の\n行為は，原告プログラムについて原告が有する著作権（複製権，翻案権，譲渡権）\nを侵害する。\nア　原，被告の「電車線－基準線作成プログラム」の同一性\n(ア)　メニュー表示部\n原，被告のメニュー表示部は，処理手順ないしフローチャート等，その\n基本的な構造が全く同一である。\n(イ)　基準線のデータ入力部\nａ　キロ行程最初の値の入力部\n「電車線－基準線作成プログラム」のうち，キロ行程の最初の値を入\n力する部分は，原告プログラムが「（setq V0（getreal\"\\n●キロ行程の最初の値を\nｍ単位で入力＜０＞：\"））」であるのに対して，被告プログラムが「（setq\nfStartKiro(getreal\"\\nキロ行程の最初の値をｍ単位で入力＜０＞：\")）」であり，\nほとんど同一である。また，上記「\"\"」内に記述された日本語部分（画面表示メッ\nセージ）もほとんど同じである。\nｂ　キロ行程オフセット値の入力部\n「電車線－基準線作成プログラム」のうち，キロ行程のオフセット値\n（スタート地点から図面を書き出す地点までの距離）を入力する部分は，原告プロ\nグラムが「（princ\"\\n\\n\\n●キロ行程のオフセット値（スタート値から最\"）」\n「（setqV1(getreal\"\\n 初のマークまでの距離)をｍ単位で入力＜０＞：\"））」で\nあるのに対して，被告プログラムが，「（setq fOffsetKiro(getreal\"\\nキロ行程の\nオフセット値（スタート値から最初のマークまでの距離）をｍ単位で入力＜０\n＞：\")）」であり，ほとんど同一である。また，画面表示メッセージは完全に一致\nしている。\nｃ　縮尺の入力部\n「電車線－基準線作成プログラム」のうち，縮尺を入力する部分は，\n原告プログラムが「（setq V２（getreal\"\\n\\n\\n●縮尺の分母のみ（例：1/500は\n500）入力＜500＞：\"））」であるのに対して，被告プログラムが，「（setq\nfScScaleC(getreal\"\\n尺度の分母のみ(１/500のときは500)を入力＜500＞：\")）」\nであり，ほとんど同一である。また，画面表示メッセージは，実質的に同一であ\nる。\nｄ　用紙サイズの入力部\n「電車線－基準線作成プログラム」のうち，用紙サイズを入力する部\n分は，原告プログラムが「（princ“\\n\\n\\n●キロ用紙サイズＡ４（高さ210ｍｍ）\nＡ３（高さ297ｍｍ）\"）」「（setqV3(getstring“\\nＡ２（高さ420ｍｍ）を入力＜\nＡ４＞：\")）」であるのに対して，被告プログラムが「（setq\nsPaSize(getreal“\\n用紙サイズ（Ａ４，Ａ３，Ａ２，Ａ１，Ａ０）または高さをｍ\nｍ単位で入力＜Ａ４＞：\")）」であり，ほとんど同一である。また，画面表示メッ\nセージは，実質的に同一である。\nｅ　スパン距離の入力部\n「電車線－基準線作成プログラム」のうち，スパン距離を入力する部\n分は，原告プログラムが「（setq V0（getstring\"\\n\\nスパンを入力＜50＞\"））」\nであるのに対して，被告プログラムが「（initget 6）（setq\nfSpan(getreal(strcat\"\\nスパン距離をｍ単位で入力＜\"（DelLastZero fOldSpan）\"\n＞：\"))）」であり，ほとんど同一である。また，画面表示メッセージは，実質的に\n同一である。\n(ウ)　基準線の描画部\nａ　初期設定部\n「電車線－基準線作成プログラム」のうち，基準線描画部の初期設定\n部（変数に値を設定する部分）の構成は，原，被告プログラムのいずれも，「キロ\n行程最初の値」，「キロ行程オフセット値」，「縮尺」，「用紙サイズ」の４項目\nを採用しているという点で，全く同じである。また，原，被告プログラムの処理の\n流れは，いずれも，上記４項目について入力されたデータを設定ファイルから読み\n出した後，「キロ行程最初の値」，「キロ行程オフセット値」，「縮尺」，「用紙\nサイズ」の順序で変数に値を設定する点において，全く同じである。\nｂ　スパンの描画部\n「電車線－基準線作成プログラム」のうち，スパン（縦基準線間の距\n離）描画部の処理の流れは，原，被告プログラムのいずれも，「Ｌ（スパン線の左\n側の補助線の描画）」，「Ｒ（スパン線の右側の補助線の描画）」，「スパン（前\n回のスパン位置から，指示されたスパン距離分の間隔を空けた縦線の描画）」の順\nに繰り返し処理を行うという点において，実質的に同一である。\nｃ　図面の上下基準線の描画部\n「電車線－基準線作成プログラム」のうち，上下基準線を描画する部\n分の変数設定の処理の流れは，原告プログラムが，上下基準線を描画するための変\n数を設定する順序について，最下位の基準線，最上部の基準線，下から２番目の基\n準線，それ以降は上から２番目の基準線まで昇順としているのに対して，被告プロ\nグラムが，最下位の基準線，次いで昇順に一番上の基準線としている点において，\nほぼ同一である。\nｄ　キロ行程の描画部\n「電車線－基準線作成プログラム」のうち，キロ行程（１キロ，０．\n５キロ及び０．１キロごとに，表示するマーク）の描画部は，原，被告プログラム\nのいずれも，①キロ行程の算出の方法，②アルゴリズム，③キロ行程に配置する図\n形をシンボル化しているという点において，一致している。\nイ　シェイプ定義に係る記述の同一性\n(ア)　特殊文字データ\n被告の特殊文字データのソースプログラム（シェイプ定義）は，原告\nの特殊文字データのソースプログラムと実質的に同一である。\n例えば，文字コード「０Ｆ２７Ｃ」で表示される「 （（（ 」（甲３\n３の２２２頁）についての原，被告のソースプログラム（シェイプ定義）は，ペン\nの動き（特殊文字を書き始める起点や，書く順序）こそ異なるものの，相対的な移\n動を指示する部分（１つ前の地点から移動する数値を，Ｘ座標，Ｙ座標で記述した\nもの）はほぼ一致しており，その結果，画面上に表示される文字の形状（変化点の\n座標値）は完全に一致する。このような文字が，実務で使用される文字の９０％を\n占めている。\n(イ)　シェイプコードの割当領域\nシェイプコードの割当領域については，被告プログラムと原告プログ\nラムとは実質的に同じである。\nすなわち，原告プログラムでは，シェイプ定義ファイル先頭の宣言文\nにおいて，「５Ｆ，６０」「７Ｂ，Ａ０」及び「Ｅ０，ＦＥ」の３つの外字の割当\n領域を設定している。これは，原告プログラム１を作成した当時は，ＯＳ（ＭＳ－\nＤＯＳ）上に外字領域がなかったため，原告が独自にＡＳＣＩＩ（アスキー）文字\nを転換して「５Ｆから６０」「７Ｂから７Ｆ」を外字領域として採用していたが，\nその後，原告プログラム２にバージョンアップする際に，Ｗｉｎｄｏｗｓ上に存在\nする外字領域である「Ｆ２からＦＥ」に外字を割り当てるようになったためであ\nる。したがって，原告プログラムでは，「Ｆ２からＦＥ」領域に割り当てられた文\n字は，「５Ｆから６０」「７Ｂから７Ｆ」の領域に登録されたシェイプ定義と全く\n同じものである。\nこれに対し，被告プログラムでも，外字領域として「５Ｆ，６０」\n「７Ｂ，７Ｆ」「８１，９Ｆ」「Ｅ０，ＥＡ」「Ｆ２，ＦＥ」の５領域を設定して\nいる。「７Ｂ，７Ｆ」「８１，９Ｆ」は，「８０」を境にして「７Ｂ，Ａ０」の領\n域を分割したものであり，同様に，「Ｅ０，ＥＡ」「Ｆ２，ＦＥ」は，「Ｅ０，Ｆ\nＦ」の領域を分割したものであるから，原，被告プログラムのシェイプコードの割\n当領域は実質的に同じである。\nウ　依拠性について\n原告プログラムを複製，格納した製品は，ＪＲ東日本に納入されてお\nり，被告は，ＪＲ東日本の各支社に出入りする立場にあったから，ＪＲ東日本の従\n業員らの協力を得て，原告プログラムを解析する機会があった。\nまた，被告プログラムと原告プログラムの間には，後記のとおり，被告\nプログラムが独立して開発されたのであれば，あり得ないような一致点が数多く存\n在する。このことからも，被告は，原告プログラムに依拠して，被告プログラムを\n作成したことが明らかである。\n（被告の反論）\n原告プログラムのうち，原告が，被告プログラムとの類似性を指摘する部\n分は，以下のとおり，すべて創作性を有しない。また，原，被告プログラムは，実\n質的に同一ではないから，仮に，原告プログラムに創作性のある部分があったとし\nても，被告プログラムは，原告プログラムを複製ないし翻案したものではない。\nア　電車線－基準線作成プログラムの同一性\n(ア)　メニュー表示部\n原告のメニュー表示部のプログラムは，「princ\"\\n1.データファイル\nの作成\"」というものにすぎず，何ら創作性を有しない。\nまた，原告プログラムと被告プログラムとでは，表示されるメニュー\nの文言が異なり，実質的に同一とはいえない。\n(イ)　基準線のデータ入力部\nａ　キロ行程最初の値の入力部\n原告のキロ行程の最初の値を入力するプログラムの記述は，創作性\nを有しない。すなわち，原告のキロ行程の最初の値を入力するプログラムを簡単に\n模式化すれば，「setq　Ａ　(getreal\"メッセージ＜実数＞\")」となるが，これは，\nメッセージを画面に表示し，実数の入力を求め，入力された実数をＡという変数に\n代入するという極めて基本的なプログラムであり，誰が作成しても同一の記述とな\nる。\nｂ　キロ行程オフセット値の入力部\n原告のキロ行程オフセット値の入力部のプログラムの記述は，単純\nなものであり，創作性を有しない。\nまた，原告プログラムでは，princ関数を使用しているのに対し，被\n告プログラムでは，setq関数及びgetreal関数を使用している点において，両者は異\nなる。\nｃ　縮尺の入力部\n原告の縮尺の入力部のプログラムの記述は，創作性を有しない。す\nなわち，縮尺の設定において，必要とされる要素は，縮尺の入力を求めるメッセー\nジ表示と実数値の入力であり，そのために必要な最低限のプログラムを模式化する\nと，「setq　Ａ　(getreal\"メッセージ＜実数＞\"）」となる。原告のプログラム\nは，この最低限必要なプログラムと同じものであって，創作性はない。\nｄ　用紙サイズの入力部\n原，被告の用紙サイズの入力部のプログラムは，実質的に同一とは\nいえない。すなわち，原告プログラムではgetstring関数を使用しているのに対し，\n被告プログラムではinitget関数及びgetreal関数を使用している点において，両者\nのプログラムは異なる。また，原告プログラムでは，入力されたデータを逐一ファ\nイルに書き出しているのに対し，被告プログラムでは，リスト処理をしてからファ\nイルに書き出している点において，データの処理方法が異なる。\nｅ　スパン距離の入力部\n原告のスパン距離の入力部のプログラムと被告の該当部分とのプロ\nグラムとは，実質的に同一ではない。\n(ウ)　基準線の描画部\nａ　初期設定部\n原告プログラムの初期設定部において使用されている「キロ行程最初\nの値」「キロ行程オフセット値」「縮尺」「用紙サイズ」の各入力項目は，ＣＡＤ\nにおける製図の際の必要性及びユーザーであるＪＲ東日本の要請によって必然的に\n決まるものであるから，その選択には創作性がなく，また，入力項目の変数の設定\nの順序にも創作性はない。\n被告プログラムと原告プログラムとは，入力されたデータをファイル\nに書き出す順序及び使用する関数が異なっているから，実質的に同一ではない。\nｂ　スパン線の描画部\n原告のスパン線の描画部のプログラムの処理の流れには，創作性がな\nい。すなわち，原告プログラムのスパン線描画部は，「Ｌ（左）側　→　Ｒ（右）\n側　→　スパン」の順に繰り返し処理を行うものであるが，スパン線の描画部にお\nいて入力されるデータは，スパン間の距離を表す数値又は左右の補助線を描画する\nことを表す「Ｌ」又は「Ｒ」だけであるから，その処理順序は，自ずから限られて\nいる。\n被告プログラムと原告プログラムとは，スパン線描画部のプログラム\nの具体的記述において異なっているから，両者は実質的に同一ではない。\nｃ　図面の上下基準線の描画部\n被告プログラムと原告プログラムとは，上下基準線を描画する上下基\n準線を描画する順序及び使用する関数が異なっているから，両者は同一ではない。\nｄ　キロ行程の描画部\n被告プログラムと原告プログラムとは，キロ行程の描画部のアルゴリ\nズムが異なっているから，両者は同一ではない。\nイ　シェイプ定義に係る記述の同一性\n(ア)　特殊文字データ\nａ　原告が主張する「特殊文字データのソースプログラム」は，著作権\n法上の保護の対象となるプログラムではない。\nすなわち，著作権法（以下「法」という場合がある。）が保護する\nプログラム著作物とは，「電子計算機を機能させて一の結果を得ることができるよ\nうにこれに対する指令の組み合わせたものとして表現したもの」（法２条１項１０\n号の２）である。しかし，原告が主張する「特殊文字のソースプログラム」は，単\nなる座標値データであって指令の組み合わせではない。\nｂ　仮に，特殊文字のシェイプ定義のうち，ペンの動き（文字を書く順\n序）に関する指令情報が著作権法上のプログラムに該当するとしても，被告の特殊\n文字のシェイプ定義と原告の特殊文字のシェイプ定義とは，ペンの動き及び変化点\nの座標値において異なるから，両者は同一とはいえない。\n(イ)　シェイプコードの割当領域\n原告プログラムのシェイプコードの割当領域の選択には，創作性がな\nい。\nウ　依拠性について\n被告プログラムは，被告がＪＲ東日本から開発依頼を受けて，平成７年\nころから，自ら開発を続けてきたものであり，原告プログラムに依拠したものでは\nない。\n(2)　被告は，被告プログラムを作成するに際して，原告プログラム１を，自己\nのコンピュータ内の記憶媒体等に複製，格納したことがあるか。\n（原告の主張）\n被告は，過去のいずれかの時点において，ＪＲ東日本の各支社に出入りす\nる立場にあったことを利用するなどして，ＪＲ東日本に設置されているコンピュー\nター内のハードディスクに格納された原告プログラムを，自己のコンピュータ内の\n記憶媒体等に複製して格納したことがある。被告がこのような行為を行ったこと\nは，以下の事実に照らして明らかである。\n被告の上記複製行為は，原告プログラムについて原告が有する著作権（複\n製権，翻案権）を侵害する。\nア　特殊文字データの変化点の座標値の一致\n原告プログラムの特殊文字の形状と，被告プログラムの特殊文字の形状\nとは，約９０％以上がほぼ完全に一致している。このことは，これらの特殊文字の\nフォント定義において記述されている変化点の座標値が一致していることを意味す\nるが，変化点の座標値は，ソースプログラムを見なければ分からないものであるか\nら，被告プログラムの特殊文字のソースプログラムは，原告プログラムを複製し，\n解析して作成したものである。\nイ　シェイプコードの割当領域の一致\n原告プログラムと被告プログラムのシェイプコードの割当領域は，ほぼ\n完全に一致している。また，原，被告プログラムのいずれにおいても，「Ｆ２から\nＦＥ」領域に割り当てられた文字は，「５Ｆから６０」「７Ｂから７Ｆ」の領域に\n登録されたシェイプ定義と全く同じである。原告プログラムでは，特殊文字が二重\nに定義されているのは，原告プログラム１のＯＳが外字領域を有しないＭＳ－ＤＯ\nＳであったためであるが，Ｗｉｎｄｏｗｓ上で作動する被告プログラムでは，「５\nＦから６０」「７Ｂから７Ｆ」の領域に登録された特殊フォントは不要であるにも\nかかわらず，これらの文字が原告プログラムと同じく二重に定義されている点で不\n自然である。\nこのような一致点が存在することは，被告が，原告プログラムを複製\nし，これを解析して被告プログラムを作成したことを示している。\nウ　補助線の数の一致\n原告の電車線－基準線プログラムと被告の電車線－基準線プログラムと\nは，描画される横の補助線の数が一致している。補助線の数は，沿革的な理由で残\nされているにすぎないにもかかわらず，この数が一致するということは，被告が，\n原告プログラムを複製し，これを解析して被告プログラムを作成したことを示して\nいる。\nエ　エスケープコードの一致\n原，被告プログラムは，いずれも「\"｝\"」をエスケープコードとして使\n用している。\n原告は，信号設備台帳プログラムやキロ行程の描画部において，小さい\n上付き文字を表記するためのエスケープコードとして，「\"｝\"」を採用しており，\nたとえば「\"Ｍ｝\"」とＡｕｔｏＣＡＤに指令すれば，「Ｍ」の小さい上付き文字が\nＡｕｔｏＣＡＤ上に描かれる。原告プログラムで，このような方法を採用したの\nは，ＯＳがＭＳ－ＤＯＳであった時代には，外字領域がなかったため，アスキー文\n字の「\"｝\"」を転用して，特殊文字コントロール記号としたためである。\nこれに対し，被告プログラムでも，原告プログラムと同様に，「\"｝\"」\nをエスケープコードとして「小さい上付き文字」を表示している。被告プログラム\nが開発された当時，ＯＳはＷｉｎｄｏｗｓであり，Ｗｉｎｄｏｗｓには外字領域が\n定義されているのであるから，アスキー文字を特殊文字コントロール記号として転\n用する必要性が全くなかったことからすれば，被告プログラムで，このような方法\nを採用するのは，不自然である。\nこのような一致点が存在することは，被告が原告プログラムを複製し，\nこれを解析したことを示している。\nオ　改行コードの一致\n原告の信号ケーブルプログラムでは，改行コード（入力した文字列を図\n面上に表示する際の改行を制御するためのコード）として，「０８６ＢＡ」を使用\nしているところ，被告プログラムでも，全く同じ「０８６ＢＡ」を改行コードとし\nて使用している。また，改行量も同じであり，このため，原，被告プログラムで作\n成した文字列の図面上の配置位置（座標値）は，完全に一致する。\nこのような改行コードが偶然一致することはあり得ず，これは，被告\nが，原告プログラムを複製し，解析したことを示している。\nカ　変数に値を設定する順序の一致\n上記のとおり，電車線－基準線プログラムのうちの初期設定部は，原，\n被告プログラムのいずれも，入力されたデータを設定ファイルから読み出した後，\n変数に値を設定する順序が，「キロ行程最初の値」，「キロ行程オフセット値」，\n「縮尺」，「用紙サイズ」の順であるという点において，全く同じである。\n変数に値を設定する順序は，プログラマーが自由に決定できるものであ\nるから，被告プログラムが独立して開発されたものであれば，両者において変数に\n値を設定する順序が一致する確率は極めて小さい。特に，被告プログラムでは，入\n力されたデータを設定ファイルに書き出す順序は，「縮尺」，「用紙サイズ」，\n「キロ行程最初の値」，「キロ行程オフセット値」の順であるにもかかわらず，変\n数に値を設定する順序がこれと異なるのは，不自然である。\nこのことは，被告が原告プログラムを複製し，解析したことを示してい\nる。\n（被告の反論）\n被告は，被告プログラムを作成するに際して，原告プログラム１を自己の\nコンピュータ内の記憶媒体等に複製して格納をしていない。\n原告は，原，被告プログラムでは，「特殊文字の形状」，「シェイプコー\nドの割当領域」，「補助線の数」，「エスケープコード」，「改行コード及び改行\n量」，「変数に値を設定する順序」等が一致することをもって，被告が原告プログ\nラムを複製したと主張する。しかし，以下のとおり，上記各一致点は，原告プログ\nラムを直接複製した上で解析しなくても，他の方法により認識し得る事項であるか\nら，被告が原告プログラムを複製した根拠とはならない。\nア　原告の主張ア及びイについて\n特殊文字の形状及びシェイプコードの割当領域は，原告プログラム上で\nフォント一覧表を作成するＬＩＳＰプログラムを実行し，印刷した文字フォント一\n覧表から分かるものであり，被告は，被告プログラムと原告プログラムとの互換性\nを図るために，同一覧表を作成し，これに基づいて，原告プログラムのシェイプコ\nードと同じコードの特殊文字を作成した。\nイ　原告の主張ウについて\n補助線の数は，原告プログラムが作成した図面上分かるものであり，被\n告は，ＪＲ東日本から補助線の数について変更要請がなかったため，従前と同じ本\n数を採用した。\nウ　原告の主張エについて\nエスケープコードは，原告プログラムが作成した図面上から分かるもの\nであり，被告は，原告プログラムと操作上の互換性を図るために，同じエスケープ\nコードを採用した。\nエ　原告の主張オについて\n改行コードは，原告プログラムが作成した図面上から分かるものであ\nり，改行量については，異なる改行量を数回図面上で試行することにより，原告プ\nログラムが定義した改行量を探し当てることができる。\n(3)　原告の損害額はいくらか。\n（原告の主張）\n被告は，平成７年ころから現在まで，被告プログラムを複製，格納した製\n品を少なくとも合計１００台製造し，販売した。上記製品の１台当たりの利益額は\n４０万円を下らない。\nしたがって，原告プログラムに係る著作権を侵害されたことにより生じた\n原告の損害額は，４０００万円を下らない。\n（被告の反論）\n否認ないし争う。\n第３　当裁判所の判断\n１　争点１（被告プログラムは，原告プログラムを複製ないし翻案したものに当\nたるか。）について\n(1)　プログラムの創作性の有無及び同一性の判断について\nある表現物が，著作権法の保護の対象になる著作物に当たるというために\nは，思想，感情を創作的に表現したものであることが必要である。そして，創作的\nに表現したものというためには，当該表現が，厳密な意味で独創性のあることを要\nしないが，作成者の何らかの個性が発揮されたものであることは必要である。\nこの点は，プログラム（電子計算機を機能させて一の結果を得ることがで\nきるようにこれに対する指令を組み合わせたものとして表現したもの）形式で表現\nされたものであっても何ら異なることはない。プログラムは，具体的記述におい\nて，作成者の個性が表現されていれば，著作物として著作権法上の保護を受ける。\nところで，プログラムは，その性質上，表現する記号が制約され，言語体\n系が厳格であり，また，電子計算機を少しでも経済的，効率的に機能させようとす\nると，指令の組合せの選択が限定されるため，プログラムにおける具体的記述が相\n互に類似することが少なくない。仮に，プログラムの具体的記述が，誰が作成して\nもほぼ同一になるもの，簡単な内容をごく短い表記法によって記述したもの又は極\nくありふれたものである場合においても，これを著作権法上の保護の対象になると\nすると，電子計算機の広範な利用等を妨げ，社会生活や経済活動に多大の支障を来\nす結果となる。また，著作権法は，プログラムの具体的表現を保護するものであっ\nて，機能やアイデアを保護するものではないところ，特定の機能を果たすプログラ\nムの具体的記述が，極くありふれたものである場合に，これを保護の対象になると\nすると，結果的には，機能やアイデアそのものを保護，独占させることになる。し\nたがって，電子計算機に対する指令の組合せであるプログラムの具体的表記が，こ\nのような記述からなる場合は，作成者の個性が発揮されていないものとして，創作\n性がないというべきである。\nさらに，プログラム相互の同一性等を検討する際にも，プログラム表現に\nは上記のような特性が存在することを考慮するならば，プログラムの具体的記述の\n中で，創作性が認められる部分を対比することにより，実質的に同一であるか否\nか，あるいは，創作的な特徴部分を直接感得することができるか否かの観点から判\n断すべきであって，単にプログラムの全体の手順や構成が類似しているか否かとい\nう観点から判断すべきではない。\n以下，上記のような点を総合考慮して，原告プログラムの創作性の有無及\nび被告プログラムとの対比について検討する。\n(2)　電車線－基準線作成プログラムについて\nア　メニュー表示部\n(ア)  原告プログラムの内容\n原告プログラム１の電車線－基準線作成プログラムのメニュー表示部\nの内容は，以下のとおりである（甲１７，２５）。\n原告プログラム１の電車線－基準線作成プログラムのメインプログラ\nムは，画面上に，「１．データファイルの作成」，「２．データファイルの修\n正」，「３．基本線作成」，「４．データファイルの文法説明」，「０．終了」と\nいうメニュー一覧を表示し，ユーザーが入力したメニュー番号に応じて，各機能を\n実行するファイルを呼び出す（ロードする）機能を有するものである。\nそのプログラムの記述は，別紙１のとおりであり，１から２８行目ま\nでの合計２８行から構成されている（空行がある。また，１から４行目は，プログ\nラムの内容や作成年月日などのメモである。）。\nａ　６行目は，「(setq B1 0)」であり，変数Ｂ１を初期化することを指\n示する。setq（セットキュー）関数は，ＡｕｔｏＬＩＳＰ言語における基本的な代\n入関数である。\nｂ　８から２０行目は，主として，「(princ \"\\n【メニュー名】\"」，\n「(princ \"\\n\"）」という構文を６回繰り返すものであり，【メニュー名】の部分に\nは，順次，「＜＜ＪＲーＣＡＤ＞＞【電車線キロ行程，基準線作成】」，「１．デ\nータファイルの作成」，「２．データファイルの修正」，「３．基本線作成（デー\nタファイル作成後）」，「４．データファイルの文法説明」，「０．終了」が表示\nされている。princ（プリンシー）関数は，「\" \"」内の記述を，そのまま画面上に\n表示することを指令する。「￥ｎ」はＭＳ－ＤＯＳ版ＡｕｔｏＣＡＤにおける改行\nコードである。\nｃ　２１行目は，「（setq B0 (getint \"\\n目的の番号を入力<0>:\"))(if\n(=B0 nil)(setq B0 0)）」であり，「目的の番号を入力＜０＞：」というメッセー\nジを画面に表示した後，ユーザーが入力した整数値（メニュー番号）を，変数Ｂ０\nに設定することを指令する。\nｄ　２３から２７行目は，「（if(=B0【メニュー番号】)(load \"【ファ\nイル名】\"))」という構文を４回繰り返し，最後に「(if（=B0 0)(setq B1 1))」と\n記述され，【ファイル名】の部分には，順次，データ入力部，修正部，描画部，説\n明部を実行するファイル名が記述されている。この部分は，ユーザーの入力するメ\nニュー番号に応じてデータ入力部，修正部，描画部，説明部のいずれかのファイル\nをＡｕｔｏＣＡＤに読み込み，ユーザーがメニュー番号「０」（終了）を選択した\n場合には，変数Ｂ１に１を設定し，処理を終了することを指令する。\n(イ)　創作性の有無\n原告プログラムのメニュー表示部のプログラム記述は，全体として短\nく，その大部分が，ＡｕｔｏＬＩＳＰ言語で定められた一般的な関数を用いて，簡\n単な指令を組み合わせたものにすぎない。したがって，原告プログラムは，制作者\nの個性が発揮された表現とはいえず，創作性がない。\nまた，原告プログラムのメニュー表示部における処理の流れは，①画\n面上に，データ作成（入力），修正，描画，説明，終了の順に各メニューメッセー\nジを表示し，②ユーザーにいずれかのメニュー番号を選択（入力）させ，③ユーザ\nーが入力したメニュー番号に応じて，各機能を実行するファイルを呼び出すもので\nあるが，これらの流れは，法１０条３項３号所定の「解法」に当たるというべきで\nあって，著作権の保護が及ばない。\n以上のとおり，原告プログラムのメニュー表示部は創作性がない。\nイ　基準線のデータ入力部\n(ア)　キロ行程最初の値の入力部\nａ　原告プログラムの内容\n原告プログラムのキロ行程最初の値の入力部の主たるプログラム記\n述（原告が，被告プログラムの該当部分と同一であると主張する記述。後記(イ)な\nいし(オ)においても同じである。）は，「(setq V0(getreal\"\\n●キロ行程の最初の\n値をにｍ単位で入力＜０＞:\"))」の１行であり（別紙２の１３行目），これによ\nり，キロ行程の最初の値の入力を指令するメッセージを画面上に表示し，入力され\nた実数を，変数Ｖ０に設定することを指令する（甲１７，２５）。\n原告の記述部分を構文にすると「setq V0 (getreal\"メッセー\nジ\"))」となる。Getreal（ゲットリアル）関数は，ＡｕｔｏＬＩＳＰ言語で実数値\nを入力させる際に使用される関数であり，関数の後に記述される「\" \"」で囲まれた\n文字列を，そのまま画面に表示する。￥ｎは，改行を意味するコードである。\nｂ　創作性の有無\n原告プログラムのキロ行程最初の値の入力部の記述は，画面上に\n「●キロ行程の最初の値をにｍ単位で入力＜０＞：」という文字列を表示した上，\nユーザーが入力した実数値を，ＡｕｔｏＬＩＳＰ言語の一般的な関数を用いて，変\n数に設定するという極めて簡単な内容を，ごく短い構文で表現するものである。\nしたがって，キロ行程最初の値の入力部の記述は，制作者の個性が\n発揮された表現とはいえず，創作性はない。\n(イ)　キロ行程オフセット値の入力部\nａ　原告プログラムの内容\n原告プログラムのキロ行程オフセット値の入力部の主たるプログラ\nム記述は，「(princ\"\\n\\n\\n●キロ行程のオフセット値（スタート値から最\"）」\n「(setq V1(getreal\"￥ｎ初のマークまでの距離)をｍ単位で入力＜０＞：\"））」の\n２行であり（別紙２の１７，１８行目），これにより，キロ行程オフセット値の入\n力を指令するメッセージを画面上に表示し，入力された実数を，変数Ｖ１に設定す\nることを指令する（甲１７，２５）。\n原告の記述部分を構文にすると，「setq V0 (getreal\"メッセー\nジ\"))」となるが，画面表示メッセージがゲットリアル関数に続く「\"\"」内にすべて\n記載されておらず，メッセージの一部は，前行のプリンシー関数を用いて画面表示\nする。\nｂ　創作性の有無\n原告プログラムのキロ行程オフセット値の入力部の記述は，画面上\nに「●キロ行程のオフセット値（スタート値から最初のマークまでの距離）をｍ単\n位で入力＜０＞：」という文字列を表示した上，ユーザーが入力した実数値を，Ａ\nｕｔｏＬＩＳＰ言語の一般的な関数を用いて，変数に設定するという極めて簡単な\n内容を，ごく短い構文で表現するものである。\nしたがって，キロ行程オフセット値の入力部の記述は，制作者の個\n性が発揮された表現とはいえず，創作性はない。\n(ウ)　縮尺の入力部\nａ　原告プログラムの内容\n原告プログラムの縮尺の入力部の主たるプログラム記述は，\n「（setq V2(getreal \"\\n\\n\\n●縮尺の分母のみ（例：1/500は500）入力＜\n500＞:\"))」の１行であり（別紙２の２２行目），これにより，縮尺の分母の入力を\n指令する「●縮尺の分母のみ（例：1/500は500）入力＜500＞：」というメッセージ\nを画面上に表示し，入力された実数を，変数Ｖ２に設定することを指令する（甲１\n７，２５）。\n原告の記述部分を構文にすると，上記「キロ行程最初の値の入力\n部」及び「キロ行程オフセット値の入力部」の記述と同じく，「setq V0\n(getreal\"メッセージ\"))」となる。\nｂ　創作性の有無\n原告プログラムの縮尺の入力部の主たるプログラム記述は，キロ行\n程最初の値の入力部及びキロ行程オフセット値の入力部の記述と同じく，制作者の\n個性が発揮された表現とはいえず，創作性はない。\n(エ)　用紙サイズの入力部\nａ　原告プログラムの内容\n原告プログラムの用紙サイズの入力部の主たるプログラム記述は，\n「(princ\"\\n\\n\\n●キロ用紙サイズＡ４（高さ210ｍｍ）Ａ３（高さ297ｍｍ）\")」\n「（setq V3（getstring\"\\n Ａ２（高さ420ｍｍ）を入力＜Ａ４＞:\"))」の２行であ\nり（別紙２の２６，２７行目），用紙サイズの入力を指示するメッセージとして，\n「●キロ用紙サイズＡ４（高さ210ｍｍ）Ａ３（高さ297ｍｍ）Ａ２（高さ420ｍｍ）\nを入力＜Ａ４＞：」を画面上に表示し，入力された文字列を，変数Ｖ３に設定する\nことを指令する（甲１７，２５）。\n原告の記述部分を構文にすると，「setq V3　(getstring\"メッセー\nジ\"))」となり，用紙サイズに関しては，入力されるデータは，「Ａ４」「Ａ３」と\nいった文字列であるため，文字列の入力に対応するＡｕｔｏＬＩＳＰ言語の関数で\nあるgetstring（ゲットストリング）関数を使用している。また，メッセージの一部\nは，前行において，プリンシー関数を用いて画面表示する。\nｂ　創作性の有無\n原告プログラムの用紙サイズの入力部の記述は，画面上に「●キロ\n用紙サイズＡ４（高さ210ｍｍ）Ａ３（高さ297ｍｍ）Ａ２（高さ420ｍｍ）を入力＜\nＡ４＞：」という文字列を表示した上，ユーザーが入力した文字列を，ＡｕｔｏＬ\nＩＳＰ言語で文字列の際に通常用いられる関数を用いて，変数に設定するという極\nめて簡単な内容を，ごく短い構文で表現するものである。\nしたがって，原告の用紙サイズの入力部の記述は，制作者の個性が\n発揮された表現とはいえず，創作性はない。\n(オ)　スパン距離の入力部\nａ　原告プログラムの内容\n原告プログラムのスパン（縦の基準線間の距離）の入力部の主たる\nプログラム記述は，「setq V0（getstring \"\\n\\nスパンを入力＜50＞\"))」の１行で\nあり（別紙２の３６行目），これにより，スパンの入力を指示するメッセージとし\nて，「スパンを入力＜50＞」を画面上に表示し，入力された文字列を，変数Ｖ０に\n設定することを指令する（甲１７，２５）。\n原告の記述部分を構文にすると，用紙サイズの入力部の記述と同じ\nく，「setq V0 （getstring\"メッセージ\"))」である。スパンに関しては，入力され\nるデータは，スパン（実数値）だけではなく，スパンの左右に補助線を描画するこ\nとを指示する文字列（「Ｌ」又は「Ｒ」）も含まれるため，文字列の入力に対応す\nるゲットストリング関数を使用している。\nｂ　創作性の有無\n原告プログラムのスパンの入力部の記述は，画面上に「スパンを入\n力＜50＞」という文字列を表示した上，ユーザーが入力した文字列を，ＡｕｔｏＬ\nＩＳＰ言語で文字列の際に通常用いられる関数を用いて，変数に設定するという極\nめて簡単な内容を，ごく短い構文で表現するものである。\nしたがって，スパン距離の入力部の記述は，制作者の個性が発揮さ\nれた表現とはいえず，創作性はない。\nウ　基準線の描画部\n(ア)　初期設定部\nａ　原，被告プログラムの内容\n(a)　原告プログラムの初期設定部は，ユーザーが入力部で入力したデ\nータに基づいて基準線を描画するため，入力部でデータファイルに書き込んだデー\nタを読み出して，変数に設定する役割を有する。原告プログラムの初期設定部の記\n述は，描画部ファイル（別紙３）の記述のうち２２から５３行目までの３２行であ\nり，その構成は，以下のとおりである。\nまず，「キロ行程の最初の値」について，①「(setq 【変\n数】(read-line F1))」という構文により，データファイル内に書き込まれているデ\nータを先頭から１行分読み込み，変数に設定し，②rtos関数及びatof関数（文字列\nを実数に変換する関数）などを使用して，上記①の変数を，作図の際に使用できる\n実数値又は文字列等に変形させ，その結果を，セットキュー関数で新たな変数に設\n定し直し，③新しい変数の設定結果をプリンシー関数で画面上に表示し，その後，\n①から③までの処理を，「キロ行程オフセット値」，「縮尺」，「用紙サイズ」の\n各入力項目ごとに，繰り返す。\n原告プログラムの初期設定部において，変数を設定する順序は，\n入力部においてデータをファイルに読み込んだ順序と同一で，「キロ行程の最初の\n値」，「キロ行程オフセット値」，「縮尺」，「用紙サイズ」の順序である。これ\nは，原告プログラムが，入力部において，「（write-line【変数】F0」という構文\nを使って，入力されたデータを，入力された順に逐次データファイルへ書き込んで\nいるところ（入力部ファイルの３０から３４行目），初期設定部のデータの読み込\nみに使われているread-line関数は，データがファイルに書き込まれた順に先頭から\n読み出すことしかできないためである（甲１７，２５）。\n(b)　これに対し，被告プログラムの初期設定部に該当する部分は，被\n告の電車線－基準線作成ファイル（別紙４）の２８４から２９１行目までの８行で\nあり（DrawBaseLine関数というローカル関数の定義内に記述されている。），その\n構成は，以下のとおりである。\nまず，「キロ行程の最初の値」について，①IsBaseLineDataとい\nうリスト（複数の値をもった変数）の中から，必要なデータを呼び出し，②データ\nをそのままatof関数，fix関数（小数部分を切り捨てて整数変換する関数）などで評\n価し，③評価した数値をセットキュー関数で変数に設定し，上記①から③の処理\nを，順次，「キロ行程オフセット値」，「縮尺」，「用紙サイズ」という順序で行\nう。\n被告の上記処理の具体的記述は，「(setq【変数】（【関数（atof\n関数など）】（nth【リスト内の順序】IsBaseLineData))」という１行の構文を主と\nして，これを各入力項目（変数）ごとに，繰り返す。「（nth【リスト内の順\n序】IsBaseLineData）」は，リストの中身のデータを読み込む指令であ\nり，Read-line（リードライン）関数のように，データファイルの先頭からだけでは\nなく，データファイル内のうち，【リスト内の順序】で指定された位置にあるデー\nタを読み出すことができる。なお，被告の電車線－基準線プログラムで\nは，IsBaseLineData内のデータは，縮尺，用紙サイズ，キロ行程の最初の値，キロ\n行程オフセット値，スパン距離の順序で保持されている（甲１８，２５，２７）。\nｂ　原告プログラムの創作性の有無及び対比\n(a)　原告プログラムにおける入力項目として何を用いるかという点\nは，アイデアであり，著作権法上の保護の対象となるものではない。また，「キロ\n行程最初の値」，「キロ行程オフセット値」，「縮尺」，「用紙サイズ」の順序で\n変数に値を設定するという処理の流れも，法１０条３項３号所定の「解法」に当た\nり，著作物としての保護を受けない。\n(b)　仮に，原告プログラムの初期設定部の具体的記述に，創作性が生\nじると解する余地があるとしても，前記認定の原告プログラムの内容に照らして，\n創作性の範囲は極めて狭いものというべきである。そして，被告プログラムと原告\nプログラムとは，初期設定部に用いられている構文上の相違によって具体的記述が\n大きく相違する。被告プログラムの初期設定部の具体的記述は，原告プログラムの\n初期設定部の記述と実質的に同一とはいえないし，原告プログラムの創作性を有す\nる本質的な特徴部分を直接感得することもできない。\n(c)　したがって，原告プログラムの初期設定部について複製権又は翻\n案権侵害があるとは認められない。\n(イ)　スパン線の描画部\nａ　原，被告プログラムの内容\n(a)　スパン線の描画部は，ユーザーから入力され，データファイルに\n書き出されたスパン（縦基準線間の距離）に関するデータ（スパン間の距離を表す\n数値又は左右補助線を描画することを表す「Ｌ」又は「Ｒ」）を基に，縦の基準\n線，左右補助線，スパンの数値，スパン線（中央の横基準線）の描画を行う役割を\n有する。\n原告プログラムのスパン線の描画部の記述は，原告の描画部ファ\nイル（別紙３）の５９から１０５行目までの４７行であり，その構成は，以下のと\nおりである。\nまず，①変数の初期化等の処理の後，画面左端の基準線の作図を\n指令し，②データファイルに入力されているスパン距離に関するデータを，「(setq\n【変数】(read-line F1))」という構文で，ファイルの頭から１行分読み込み，③読\nみ込んだデータが空ではない場合に，後続の処理を行うように指令し，④「（if\n（=(substr S0 1 1)\" L \"）」という指令で評価して，読み込んだデータが「Ｌ」の\n場合には，ＡｕｔｏＬＩＳＰ言語のコマンドである「command \"line\"(list　Ｘ座標\n１，Ｙ座標１)(list　Ｘ座標１，Ｙ座標２)\"\")」という構文を用いて，左補助線を\n描画するよう指令し（Ｘ座標１は，１つ前の基準線のＸ座標値から－４．０オフセ\nットした値，Ｙ座標値１及び同２は，それぞれ左端基準線の両端の点のＹ座標値で\nある。），⑤読み込んだデータが「Ｒ」の場合には，同様に右補助線を描画するよ\nう指令し，⑥読み込んだデータが実数値（スパン距離）の場合には，前回のスパン\n位置からスパン距離分右側の位置に縦基準線を描画し，かつ，スパン距離を表示す\nるよう指令し，⑦上記処理が終了した後は，データファイルからさらにデータを読\nみ込んで変数を設定するよう指令し，データがあれば上記③の処理を繰り返すが，\nデータがなければ（変数が空になれば），処理を終了する（甲１７，２５，２\n７）。\n(b)　これに対し，被告プログラムのスパン線描画部の記述は，被告の\n電車線－基準線作成ファイル（別紙４）の３２９から３６３行目までの３４行であ\nり，その構成は，以下のとおりである。\nまず，①画面左端の基準線の作図を指令し，作図した結果の図形\n情報を，ＡｕｔｏＬＩＳＰ言語の関数であるputlayer関数を用いて，更新し，②初\n期カウンタ（変数）を「４」に設定し，リスト内のデータの５番目以降（ユーザー\nが入力し，リスト内に保持したデータのうち，５番目以降がスパンに関連するデー\nタであるため）を処理対象とするよう指定し，③リストの全体の長さを評価して，\nカウンタがリストの長さに達しない限り，後続の処理を繰り返すよう指令し，④カ\nウンタの順序（最初は５番目）に位置するデータをリストから読み出してセットキ\nュー関数で変数（「vItem」）に設定し，⑤「（＝（strcase vItem）」という構文\nで評価（変数が大文字に変換される。）した結果，変数がＬである場合は，左補助\n線を描画するよう指令し，⑥上記⑤と同じ評価の結果，変数がＲである場合には，\n右補助線を描画するよう指令し，⑦「（＜0.0(setq fSpan（atof vItem))」という\n構文で評価（数値であれば，実数に変換が行われる。）した結果，変数が実数であ\nる場合は，縦基準線及びスパンの数値を描画するよう指令し，⑧最後に，処理カウ\nンタに１を足した後，上記③に戻り，③以降の処理を繰り返す（甲１\n８，２５，２７）。\nｂ　原告プログラムの創作性の有無及び対比\n(a)　原告プログラムにおいて，読み出したデータを「Ｌ」，「Ｒ」，\n「スパン」の順序に評価し，描画をするという処理の流れは，法１０条３項３号所\n定の「解法」に当たり，著作物としての保護を受けないというべきである。\n(b)　仮に，原告プログラムのスパン描画部の具体的記述に，創作性が\n生じると解する余地があるとしても，前記認定のプログラムの内容に照らして，創\n作性の範囲は極めて狭いものというべきである。そして，被告プログラムと原告プ\nログラムとは，その具体的な変数の評価方法や，全体の処理を繰り返すための方法\n手順が異なる。被告プログラムのスパン描画部の具体的記述は，原告プログラムの\nスパン描画部の記述と実質的に同一とはいえないし，原告プログラムの創作性を有\nする本質的な特徴部分を直接感得することもできない。\n(c)　したがって，原告プログラムのスパン線描画部の記述について複\n製権又は翻案権の侵害があるとは認められない。\n(ウ)　図面の上下基準線の描画部\nａ　原，被告プログラムの内容\n(a)　上下基準線の描画部は，画面上部に３本，画面下部に６本，合計\n９本の上下基準線の描画を行う機能を有する。\n原告プログラムの上下基準線の描画部の記述は，原告の描画部フ\nァイル（別紙３）の１０８から１２３行目までの１６行であり，その構成は，主と\nして，「command \"line\"（list Ｘ座標１　Ｙ座標１）（list　Ｘ座標２　Ｙ座標\n２)\"\")」という構文を，最下部の基準線，最上部の基準線，下から２番目の基準\n線，以降は昇順に上から２番目の基準線まで，順次９回繰り返すというものであ\nり，これにより，各基準線の始点と終点を，ＸとＹの座標値で特定し，２点間に線\nを描くことを指令している（甲１７，２５）。\n(b)　これに対し，被告プログラムの上下基準線の描画部の記述は，被\n告の電車線－基準線作成ファイル（別紙４）の３６５から４０７行目までの４３行\nであるが，あらかじめそれぞれの基準線のオフセット値（基準線間の間隔。変数の\n設定の順序は，最下位の基準線から昇順である。）及び縦線の高さの半分の値を変\n数として設定されており（２９３から３０３行目），上下基準線の描画部において\nは，「command \"Line\" 変数１　変数２ \"\"」という構文の指令を繰り返し，１つ前\nに描画した基準線の座標にオフセット値（変数）を加算して，次の基準線の座標\n（変数１，変数２）を求めるという方法で，上下基準線を，画面中央部上側（上か\nら３番目の基準線）から順に上方向へ３本，次いで中央部下側（下から６番目の基\n準線）から下部方向へ合計６本の基準線（合計９本）を描画している（甲１８，２\n５）。\nｂ　原告プログラムの創作性の有無及び対比\n(a)　原告プログラムにおいて，上下基準線の座標値を下の基準線から\n上の基準線へ昇順に設定し，描画するという処理の流れは，そもそも，法１０条３\n項３号所定の「解法」に当たり，著作物としての保護を受けないというべきであ\nる。\n(b)　仮に，原告プログラムの上下基準線描画部の具体的記述に，創作\n性が生じると解する余地があるとしても，前記認定のプログラムの内容に照らし\nて，創作性の範囲は狭いものというべきである。そして，被告プログラムと原告プ\nログラムとは，前記認定のとおり，基準線を描画する順序や，基準線の座標値を計\n算する方法に関するプログラムの記述において大きく相違する。被告プログラムの\n上下基準線描画部の記述は，原告プログラムの上下基準線描画部の記述と実質的に\n同一とはいえないし，原告プログラムの創作性を有する本質的な特徴部分を直接感\n得することもできない。\n(c)　したがって，原告プログラムの上下基準線描画部の記述について\nの複製権又は翻案権が侵害されている認めることはできない。\n(エ)　キロ行程の描画部\nａ　原，被告プログラムの内容\n(a)　キロ行程の描画部は，１キロメートル，０．５キロメートル，\n０．１キロメートルごとに，それぞれ印（マーク）を描画する機能を有する。\n原告プログラムのキロ行程の描画部は，描画部ファイル（別紙\n３）の１２９から１６４行目までの３６行であり，その構成は，以下のとおりであ\nる。\nまず，マークを一定間隔（１キロメートルごと，５００メートル\nごと，１００メートルごと）で設定するために，①現在処理中のキロ行程の値を，\n一定の間隔の数値（たとえば，１キロメートルマークについては１０００）で除\nし，その結果を切り捨て，さらに同数値（１０００）を乗じ，その計算結果が，も\nとのキロ行程の値と一致するときには，１キロメートルマークのシンボルを表示し\n（プログラムとは別に定義してある図形を読み込む），②一致しない場合には，続\nけて５００メートルマークを表示する場合に当たるかを，同様の方法（ただし，除\nしたり乗じたりする数値は，５００になる）で判定し，③一致しない場合には，続\nけて１００メートルマークを表示する場合に当たるかを，同様の方法（ただし，除\nしたり乗じたりする数値は，１００になる）で判定し，④上記処理を終了後，現在\n処理中のキロ行程の値に０．１メートルを加算した後，上記①へ戻って同じ処理を\n繰り返し，現在処理中のキロ行程が，事前に変数として設定してある「最大のキロ\n行程」と一致するに至ったとき（キロ行程が画面の右端に達したとき）は，終了す\nる（甲１７，２５）。\n(b)　これに対し，被告プログラムのキロ行程の描画部の記述は，被告\nの電車線－基準線作成ファイル（別紙４）の４１０から４４９行の合計４０行であ\nり，その構成は，マークを設置する一定間隔（１キロメートルごと，５００メート\nルごと，１００メートルごと）の判定をする方法として，rem（レム）関数を用いて\nおり，現在処理中のキロ行程を，一定の間隔の数値（例えば，１キロメートルマー\nクについては１０００）で除し，その余りが０のときは，１キロメートルマークの\nシンボルを表示する（プログラムとは別に定義してある図形を読み込む）という計\n算方法を採用している（甲１８，２５）。\nｂ　原告プログラムの創作性の有無及び対比\n(a)　原告プログラムにおける「アルゴリズム」は，そもそも法１０条\n３項３号所定の「解法」として，プログラムの著作権で保護されるものではない\nし，プログラムとは別に定義（シンボル化）された図形を読み込むという方法も，\nアイデアに当たり，著作権法上保護されるものではない。\n(b)　仮に，原告プログラムのキロ行程の描画部の具体的記述に，創作\n性が生じると解する余地があるとしても，前記認定のプログラムの内容に照らし\nて，創作性の範囲は狭いものというべきである。そして，被告プログラムと原告プ\nログラムとは，キロ行程の値の評価方法が相違することにより，プログラムの記述\nにおいて大きく相違する。被告プログラムのキロ行程の記述は，原告プログラムの\nキロ行程の記述と実質的に同一とはいえないし，また，原告プログラムの創作性を\n有する本質的な特徴部分を直接感得することもできない。\n(c)　したがって，原告プログラムのキロ行程の記述について複製権又\nは翻案権が侵害されていると認めることはできない。\nエ　以上によれば，被告の「電車線ー基準線プログラム」が，原告の「電車\n線ー基準線プログラム」の複製又は翻案である旨の原告の主張は，理由がない。\n(3)　シェイプ定義に係る記述について\nア　特殊文字データ\n証拠（甲６ないし８，１９，２４，３３，乙１，２，４，８ないし１\n２）によれば，以下の事実が認められる。\n(ア)　ＡｕｔｏＣＡＤ文字フォント等の概要\nａ　ＡｕｔｏＣＡＤの文字フォント\n(a)　ＡｕｔｏＣＡＤの文字フォントには，大きく分けて，半角フォン\nト，ビッグフォント，ＴｒｕｅＴｙｐｅフォントの３種類がある。ビッグフォント\nは，漢字など非ＡＳＣＩＩ文字を表現するための特殊な形式のシェイプ定義ファイ\nルである。一般的に，コンピューターで扱うすべての文字は，すべて１つ１つ「文\n字コード」が割り当てられているが，コンピューターの文字コードは基本的には２\n５６個しかなく，漢字等多数の文字を割り振るには不十分であるため，ビッグフォ\nントでは，２バイトコード（文字コードを２つ連結し，１つの文字を指定する。）\nによって文字を表現することができる。２バイトコードを用いる際には，コンピュ\nーターが，１つ目のコードを独自の文字コードであると誤認識しないよう，滅多に\n使用しない特定のＡＳＣＩＩコードを「エスケープコード（コンピューターが次の\n文字とあわせて漢字と判断する文字コード）」として，ユーザーが選択することが\nできる。\nＡｕｔｏＣＡＤには，ビッグフォントファイルとして，あらかじ\nめＢＩＧＦＯＮＴ．ｓｈｘ及びＥＸＴＦＯＮＴ．ｓｈｘが添付されており，同ファ\nイル内の文字の定義は，公開されており，これを改変・参照して，文字を独自の仕\n様とすることが可能である。\n(b)　ビッグフォントのシェイプ定義ファイルの最初の行は，「＊ＢＩ\nＧＦＯＮＴ　nchars，nranges，b1，e1，b2，e2，・・」という構文に従って記述\n（領域宣言）される。\n「nchras」は，その記述に続いて定義されている文字定義数の近似\n値である。\n「nranges」は，エスケープコードとして使用される連続範囲の数を\n指定する。\n「b1,e1」は，エスケープコードとして使用される連続範囲における\n先頭及び最終コードを指定する。\nｂ　ＡｕｔｏＣＡＤシェイプ定義に係る記述\nシェイプ定義ファイルは，ＡｕｔｏＣＡＤの規定する文法に従って\n記述されており，その規約は，ＡｕｔｏＣＡＤに標準添付されるマニュアルに記載\nされている。なお，ＡｕｔｏＣＡＤのフォントは，ビットマップのように字形を\n「点の集まり」で表すのではなく，線で表すベクトルフォントである。\nＡｕｔｏＣＡＤのシェイプ定義ファイルのシェイプ記述の構文は，\n以下のとおりであり，シェイプ定義ファイルの各行には，最大１２８文字まで記述\nできる。\n「*shapenumber, defbytes, shapename\nspecbyte 1, specbyte 2, specbyte 3....0」\n(a)　「*shapenumber」とは，ファイルに対して与えられる一意な番号\n（シェイプ番号）で，シェイプファイルを呼び出す場合は，このシェイプ番号を指\n定する。文字フォントの場合は，ＡＳＣＩＩコードの中の各文字の値に対応する固\n有の番号が必要である（なお，シェイプ定義ファイルでは，文字以外の図形等のシ\nェイプを記述することも可能であり，その場合には，任意の番号を割り当てること\nができる。）。\n(b)　「defbytes」は，シェイプを記述するのに必要となるデータバイ\nト数で，上限は，各シェイプにつき２０００バイトである。\n(c)　「shapename」は，シェイプ名である。\n(d)　「specbyte」とは，シェイプ指定バイトであり，各指定バイト\nは，ベクトルの長さ及び方向又は特別コード番号の１つを定義するコードである。\n特別コード番号には，０からＥまでの１５種類があり，例えば，「０」又は「００\n０」は「シェイプ定義終了」，「１」又は「００１」は「描画モードをアクティブ\nにする（ペンダウン）」，「２」又は「００２」は「描画モードを非アクティブに\nする（ペンアップ）」，「３」又は「００３」はその次に記述されるバイトでベク\nトルの長さを除し，「４」又は「００４」はその次に記述されるバイトでベクトル\nの長さを乗じるという意味を有する。\nシェイプ指定バイトにおいて，各変位点を記述する方法として\nは，①ベクトルの長さ及び方向コードを３文字の文字列で表現する方法（最初の文\n字がゼロで，２番目の文字がベクトルの長さを，３番目の文字がベクトルの方向を\n指定する）と，②特別指定コード「８」又は「９」に続けて，座標値を「（Ｘ変\n位，Ｙ変位）」で指定する方法がある。①の記述方法では，ベクトルの長さとして\n指定できる有効範囲は１（１単位長）からＦ（１５単位長）の１５種類であり，方\n向を指定できる有効範囲は，０からＦまで（９０度方向から反時計回りに順に１６\n等分した方向）の１６種類である。②の記述方法では，ＸＹ変位値として指定でき\nる範囲は，－１２８から＋１２７までである。\n(イ)　原，被告シェイプ定義に係る記述の内容\nａ　原，被告のフォント定義に係る記述\n(a)　原告のフォント定義に係る記述\n原告のＳＵＧ－ＢＩＧ１．ｓｈｐ（シェイプ定義ファイル）冒頭\nの宣言文は，「＊ＢＩＧＦＯＮＴ　１０３６９，３，０５Ｆ，０６０，０７Ｂ，０\nＡ０，０Ｅ０，0ＦＦ」であり（甲１９），これは，エスケープコードとして使用さ\nれる連続範囲として，「５Ｆ，６０」「７Ｂ，Ａ０」「Ｅ０，ＦＦ」の３つの外字\n領域を設定したことを意味する。\n原告は，原告のフォント定義ファイルにおいて，ＡｕｔｏＣＡＤ\nで標準添付されていない漢字，アルファベット，下付き文字，上付き文字，文章中\nで用いる特殊記号などについて，独自の定義文を作成している。\n(b)　被告のフォント定義に係る記述\n被告プログラムの特殊文字には，被告が，ＡｕｔｏＣＡＤに添付\nされているフォントを利用せずに，独自に作成した特殊フォントが１１８文字あ\nる。このうち，「５Ｆ，６０」「７Ｂ，Ａ０」「Ｅ０，ＦＥ」の３つの外字領域内\nにコードが指定されている文字（原告の特殊文字と共通のシェイプコードを有する\n文字）で，かつ，原告も，ＡｕｔｏＣＡＤに添付されているフォントを利用せず\nに，独自に作成した特殊文字は，合計５４文字である。\n５４文字のうち，１０文字は，原，被告の文字の形状が異なり，\nしたがって，シェイプ定義の変化点の座標値も異なっている。１文字は，変化点の\n座標値及び筆順はほぼ同じであるが，文字の起点が異なっている結果，文字の形状\nは重ならない。３８文字は，形状は同じで，ほぼ重なるが，筆順（原告のシェイプ\n定義は，反時計回り又は下から上へ，被告のシェイプ定義は時計回り又は上から下\nへと記述している。）が異なるため，シェイプ定義中の変化点の座標値は異なって\nいる。３８文字のうち１つは，後記文字コード「０Ｆ２７Ｃ」の文字「（（（」で\nある。５文字は，文字の形状も筆順も一致しており，したがってシェイプ定義の変\n化点の座標値も一致するが，シェイプ定義の冒頭で記述するベクトルの倍率の表示\nが異なるなど，シェイプ定義全体の具体的記述には異なっている部分がある。上記\n５文字の形状は，「×」「／」「｜」「 （上付き小文字のエル）」「 （下付き\n小文字のエル）」である。\nｂ　原，被告の文字コード「０Ｆ２７Ｃ」の記述\n(a)　原告のシェイプ記述\n文字コード「０Ｆ２７Ｃ」についての原告のシェイプ定義の記述\nは，以下のとおりである。\n「＊ＯＦ２７Ｃ，１０７，［｛Ｂ＝特殊（（（］\n２，３，５，４，３，２，（８，７，－３），１，（８，－２，\n２），（８，－２，３），（８，－２，４），（８，－１，６），（８，１，\n６），（８，２，４），（８，２，３），（８，２，２），２，（８，０，－３\n０），（８，５，２），１，（８，－２，２），（８，－２，３），（８，－１，\n２），（８，－１，６），（８，１，６），（８，１，２），（８，２，３），\n（８，２，２），２，（８，０，－２８），（８，５，４），１，（８，－２，\n２），（８，－２，４），（８，－１，４），（８，０，２），（８，１，４），\n（８，２，４），（８，２，２），２，（８，０，－２６），（８，６，３），\n３，３，４，５，０」\nしたがって，原告のシェイプ記述においては，描画モードが作動\n（アクティブ）になった後は，「（－２，２），（－２，３），（－２，４），\n（－１，６），（１，６），（２，４），（２，３），（２，２），（０，－３\n０），（５，２），（－２，２），（－２，３），（－１，２），（－１，６），\n（１，６），（１，２），（２，３），（２，２），（０，－２８），（５，\n４），（－２，２），（－２，４），（－１，４），（０，２），（１，４），\n（２，４），（２，２）」の変化点の順に，線を描画しており，これは，画面上，\n「（」を下から上方向へ，左側から右方向へと描く動きとなる。\n(b)　被告のシェイプ記述\n文字コード「０Ｆ２７Ｃ」についての被告のシェイプ定義の記述\nは，以下のとおりである。\n「＊ＯＦ２７Ｃ，９５，（（（\n３，１００，４，６０，２，１４，８，（－８，－２５），２，\n５，８，（７，２７），１，９，（－２，－２），（－２，－３），（－２，－\n４），（－１，－６），（１，－６），（２，－４），（２，－３），（２，－\n２），（０，０），２，８，（５，２８），１，９，（－２，－２），（－２，－\n３），（－１，－２），（－１，－６），（１，－６），（１，－２），（２，－\n３），（２，－２），（０，０），２，８，（５，２４），１，９，（－２，－\n２），（－２，－４），（－１，－４），（０，－２），（１，－４），（２，－\n４），（２，－２），（０，０），２，６，８，（２３，０），２，１４，８，\n（－１５，－６），４，１００，３，６０，０」\nしたがって，被告のシェイプ記述においては，描画モードが作\n動（アクティブ）になった後は，「（－２，－２）（－２，－３），（－２，－\n４），（－１，－６），（－１，－６）（２，－４），（２，－３），（２，－\n２），（５，２８），（－２，－２），（－２，－３），（－１，－２），（－\n１，－６），（１，－６），（１，－２），（２，－３），（２，－２），（５，\n２４），（－２，－２），（－２，－４），（－１，－４），（０，－２），\n（１，－４），（２，－４），（２，－２）」の変化点の順に，線を描画してお\nり，これは画面上，「（」を上から下方向へ，左側から右方向へと描く動きとな\nる。\n(c)　文字コード「０Ｆ２７Ｃ」で表示される「 （（（ 」について\nは，原，被告のシェイプ定義いずれで表示された場合でも，画面上の形状は同一で\nあり，両者は重なり合う。\n(ウ)　原告シェイプ定義に係る記述の創作性の有無及び対比等\nａ　法２条１項１０号の２所定のプログラム該当性の有無\n原告のシェイプ定義の記述が，法２条１項１０号の２所定のプログ\nラムに該当するか否かについて，念のため判断する。\n原告のシェイプ定義の記述は，例えば「２」や「０」のような数字\nから構成され，これにより，「ペンアップ」「シェイプ終了」という動作が電子計\n算機により行われる。同記述は，ＡｕｔｏＣＡＤ上に存在し，シェイプ記述を定義\nするプログラム（例えば，「２」は「ペンアップ」を意味することを定義するプロ\nグラム）に読み込まれ，協働して機能することによって初めて，電子計算機に対す\nる指令としての意味を持つ。そうすると，シェイプ定義の記述は，ＡｕｔｏＣＡＤ\nによって読み込まれる情報を記載した単なるデータであるから，それ自体独立し\nて，「電子計算機を機能させて一の結果を得ることができるようにこれに対する指\n令の組み合わせたものとして表現したもの」に当たらないと解する余地もなくはな\nい。しかし，たとえ，当該記述が，独立性がなく，個別的に利用することができな\nいものであったとしても，データ部分を読み込む他のプログラムと協働することに\nよって，電子計算機に対する指令を組み合わせたものとして表現したものとみるこ\nとができるのであるから，そのような記述も，同号所定のプログラムに当たると解\nして差し支えない。\nそうすると，原告のシェイプ定義の記述は，具体的な記述に創作性\nがある限りにおいて，著作権法の保護の対象になるというべきである。\nｂ　創作性の有無\n原告のシェイプ定義の記述方法は，シェイプ定義ファイルを実行す\nるプログラムであるＡｕｔｏＣＡＤによって規定されており，その記述は，ベクト\nルの始点と終点を定める変位点の座標値（－１２８から＋１２７まで）又はベクト\nルの長さ及び方向コードを表現する３文字の文字列と，これらの座標値間の移動を\n指示する１から１０までの特別指定コードの組合せにより表現されている。そし\nて，シェイプ定義に係る文法によれば，特定の形状のフォント又はシェイプを，通\n常の筆順で記述しようとすれば，その変位点の座標値の記述方法について，制作者\nの選択の幅は極めて狭いものであるから，シェイプ記述に創作性が生じるものとい\nうことはできない。そして，原告の特殊文字のシェイプ定義に係る記述は，当該文\n字を描く筆順として通常の筆順に従っているから，原告のシェイプ記述の座標値の\n記述に，創作性があるとはいえない。\nｃ　対比\n仮に，原告のシェイプ記述の具体的表現に創作性が認められると解\nする余地があるとしても，上記のとおり，原，被告が独自に作成した特殊文字合計\n５４文字のうち，４９文字については，変化点の座標値又は筆順が異なっているこ\nとに照らすならば（たとえば，原告が同一であると主張する「（（（」の原，被告\nのシェイプ記述の筆順は，被告のシェイプ記述が上から下方向へ書いているのに対\nし，原告のシェイプ記述は，下から上方向へと書いている点において相違があり，\nシェイプ定義の具体的記述は相違する。），両者の具体的表現方法が実質的に同一\nとはいえないし，また，原告シェイプ定義記述の創作性を有する本質的な特徴部分\nを直接感得することもできない。\nなお，上記５４文字中，５文字（「×」「／」「｜」「 （上付き\n小文字のエル）」「 （下付き小文字のエル）」）については，上記シェイプ記述\nの表現は，ほぼ必然的に決まるというべきであるから，５文字に関するシェイプ定\n義に創作性が生ずる余地はない。\nｃ　したがって，原告の特殊文字コードのシェイプ記述について，複製\n権又は翻案権侵害があるとは認められない。\nイ　シェイプコードの割当領域について\n原告は，被告プログラムと原告プログラムとは，シェイプコードの割当\n領域において実質的に同一である旨主張する。しかし，原告プログラムにおけるシ\nェイプコードの割当領域の選択は，アイデアに当たり，その点において，原告プロ\nグラムないし原告シェイプ定義記述の創作性を基礎付けることはできない。この点\nにおける原告の主張は失当である。\n２　争点２（被告は，被告プログラムを作成するに際して，原告プログラム１\nを，自己のコンピュータ内の記憶媒体等に複製，格納したことがあるか。）につい\nて\n原告は，被告プログラムと原告プログラムとの間に，共通点が存在すること\nを根拠として，被告が，原告プログラムを被告のコンピュータ内の記憶媒体等に複\n製して格納したことがあると主張する。\nしかし，以下のとおりの理由から，原告プログラムと被告プログラムとに共\n通する点があったとしても，被告は，被告のコンピュータ内の記憶媒体等に複製す\nる方法以外の方法によって，原告プログラムの内容を認識することができるから，\nこれらの共通点が存在することをもって，被告が原告プログラムを複製したと認め\nることはできない。\n(1)　特殊文字データの変化点の座標値の一致について\n原告は，原告プログラムの特殊文字の形状と，被告プログラムの特殊文字\nの形状の９０％がほぼ完全に一致していることをもって，被告が原告プログラムを\n複製したことがある旨主張する。\nしかし，原告プログラムの特殊文字の形状は，原告プログラムで使用され\nている「フォント一覧表」を作成するＬＩＳＰプログラムを，原告プログラム上で\n実行し，作成した「フォント一覧表」を見ることにより認識できるものであるし\n（乙４，８，１０），上記認定のとおり，原，被告が独自に作成した５４文字のう\nち，シェイプ定義（変化点の座標値）が完全に一致するものは５文字しかなく，そ\nの５文字は，いずれも座標値が一致しても不自然ではないような簡単な形状のもの\nであるから，原，被告の特殊文字の形状が一致していることをもって，被告が原告\nプログラムを複製したと認めることはできない。\n(2)　シェイプコードの割当領域の一致\n原告は，原，被告のシェイプコードの割当領域が，ほぼ完全に一致してい\nること及び当該割当領域に割り当てられている特殊外字が，２重定義されている部\n分も含めて，すべて一致していることをもって，被告が原告プログラムを複製した\nことがあると主張する。\nしかし，証拠（乙４，８，１０）によれば，原告プログラムの特殊文字の\nシェイプコード及びその割当領域は，原告プログラムにおいて使用されているフォ\nントを表示した「フォント一覧表」を見ることにより認識することができ，被告\nは，原告プログラムで作成された図面を被告プログラムで開くことができるように\nするために，同表に基づき，原告プログラムに存在する特殊文字に対応する特殊文\n字に，原告プログラムにおいて割り当てられたシェイプコードと同じシェイプコー\nドを割り当てたことが認められるから，原，被告の特殊文字のシェイプコードの割\n当領域が一致していることをもって，被告が原告プログラムを複製したと認めるこ\nとはできない。\n(3)　補助線の数の一致\n原告は，被告の電車線－基準線プログラムで描画される横の補助線（上下\n基準線）の数が，原告の補助線の数と一致していることをもって，被告が，原告プ\nログラムを複製したことがある旨主張する。\nしかし，上下基準線の数は，原告プログラムによって作成された図面を見\nることによって容易に分かることであるし（甲３），被告が，ＪＲ東日本の便宜の\nために，従前の図面と一致する数とすることは，何ら不自然なことではないから，\nこのことをもって，被告が，原告プログラムを複製したと認めることはできない。\n(4)　エスケープコードの一致\n原告は，被告プログラムが使用するエスケープコード（「\"｝\"」）が，原\n告プログラムで使用されているコードと同じであることをもって，被告が，原告プ\nログラムを複製したことがある旨主張する。\nしかし，原告が使用するエスケープコードは，当該エスケープコードを使\n用して作成した原告プログラムを，被告プログラム上で開けば，エスケープコード\nとしての役割を果たさずに，そのまま当該コードの文字として，画面上に表示され\nるものであるから（乙４），原告プログラムを複製することなく知り得るものであ\nるし，被告が，ユーザーであるＪＲ東日本が操作する上で便利なように，原告プロ\nグラムと同じコードをエスケープコードとすることは，何ら不合理なことではない\nから，エスケープコードが一致していることをもって，被告が原告プログラムを複\n製したと認めることはできない。\n(5)　改行コードの一致\n原告は，被告プログラムが使用する改行コード及び改行量が，原告プログ\nラムが使用する改行コード及び改行量と同じであることをもって，被告が，原告プ\nログラムを複製したことがある旨主張する。\nしかし，原告が使用する改行コードは，当該改行コードを使用して作成し\nた原告プログラムを，被告プログラム上で開くと，可読不可能な文字（「・」）と\nして画面上に表示されるが，そのコードは，当該文字を他のアプリケーションに貼\nり付けることによって調べることが可能であり（乙４），その改行量も（原告の改\n行コードのシェイプ定義では，変位点の座標値が（０，－３０）であり，これは下\n方向へ３０単位移動することを意味する。），画面上の表示内容から，原告の改行\nコードを用いた場合の改行量と同じ改行量を探すことは可能であるし，被告が，Ｊ\nＲ東日本の操作上の便宜のため，原告プログラムと同じコードをエスケープコード\nとし，改行量を一致させること自体は，何ら不自然なことではないから，エスケー\nプコードが一致していることをもって，被告が原告プログラムを複製し，解析した\nと認めることはできない。\n(6)　変数に値を設定する順序の一致\n原告は，被告の初期設定部のプログラムでは，変数に値を設定する順序\n（「キロ行程最初の値」「キロ行程オフセット値」「縮尺」「用紙サイズ」の順）\nが，原告プログラムで変数に値を設定する順序と同じであることをもって，被告\nが，原告プログラムを複製したことがある旨主張する。\nしかし，上記順序は，変数を設定する順序としては，何ら不自然なもので\nはなく，この点が一致していることをもって，被告が原告プログラムを複製したと\n認めることはできない。\n(7)　以上のとおり，原告が主張する各一致点をもって，被告が原告プログラム\nを複製したことがあると認めることはできず，その他，原告の主張を認めるに足り\nる証拠はない。\nしたがって，この点に関する原告の主張は理由がない。\n３　以上によれば，原告の請求は，その余の点を判断するまでもなく，いずれも\n理由がない。よって，主文のとおり判決する。\n東京地方裁判所民事第２９部\n裁判長裁判官　　　　飯　村　敏　明\n裁判官　　　　今　井　弘　晃\n裁判官　　　　大　寄　麻　代\n（別紙）\n被告製品目録\n原告プログラム目録\n１　ＡｕｔｏＣＡＤ　ＧＸⅢ版ＪＲ－ＣＡＤ\n「電車線－基準線作成プログラム」のうち，メニュー表示部のプログラム，\n入力部のプログラム，描画部のプログラムは，それぞれ別紙１ないし３のとおりで\nある。\n２　ＡｕｔｏＣＡＤ　Ｒ１３Ｊ版ＪＲ－ＣＡＤⅡ\n別紙１別紙２別紙３\n被告プログラム目録\n１　ＡｕｔｏＣＡＤ　Ｒ１３Ｊ版　Ｑｕｉｔｅ鉄道編\n「電車線－基準線作成プログラム」のうち，メニュー表示部のプログラム，\n入力部のプログラム，描画部のプログラムは，別紙４のとおりである。\n２　ＡｕｔｏＣＡＤ　Ｒ１４版　Ｑｕｉｔｅ鉄道編Ｖｅｒ１．１\n３　ＡｕｔｏＣＡＤ　２０００ｉ版　Ｑｕｉｔｅ２０００鉄道編　Ｖｅｒ１．０\n別紙４\n"
}
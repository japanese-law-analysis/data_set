{
  "trial_type": "IPCase",
  "date": {
    "era": "Heisei",
    "year": 20,
    "month": 10,
    "day": 17
  },
  "case_number": "平成19(ワ)2352",
  "case_name": "特許権侵害差止等請求事件",
  "court_name": "東京地方裁判所",
  "right_type": "特許権",
  "lawsuit_type": "民事訴訟",
  "lawsuit_id": "36953",
  "detail_page_link": "https://www.courts.go.jp/app/hanrei_jp/detail7?id=36953",
  "full_pdf_link": "https://www.courts.go.jp/app/files/hanrei_jp/953/036953_hanrei.pdf",
  "contents": "JAddress\nJapan NLIA System NLIA\nJAddress\nNLIA\nJAddress\nTest Operation Sunrise\nOperation\nNative Language Internet Address NLIA\nNative Language Internet Address NLIA\nDomain Name System\na\nb\nc\na b\nd\nd\na\nb\nUniform Resource Locator\nc\nd\nhttp://directory.net/NUMBER\nhttp://\nftp gopher\nschemes\ne\na\nb\nc\nURL 2 URL\nNLIA\nNLIA\nNLIA\na\na\nb\nb\nc\nc\nd\nproviding a descriptor at the client\nproviding a descriptor comprising a telephone\nnumber at the client\na\na\nb\nb\nc\nc\nd\nd\ne\ne\na\na\nb\nb\nc\nc\n4 5\nNLIA Name Server NLIA\nNLIA Name Server\nNLIA Name Server\nNLIA Name Server NLIA\n4 5\nNLIA\nNLIA Name\nServer\nNLIA\nNLIA Name Server\nNLIA Name Server NLIA\nNLIA\na\nb\na\nb\na b\na b\na b\na 2\nb\nNLIA\nNLIA\na\nb\na\nb\na a\nb b\na a\nb b\nComputer Communication Review Volume 17, Number 5 Special Issue\nA Yellow-Pages Service for a Local-Area Network Larry L. Peterson\na\nb\ndescriptor\na\nb\na X\nb\nc\na\nb 5.2\nb\na\nUniform Resource Locators\nUniform Resource Locators\nb\na\nb\na\nMap\n/a/b/* /a/b/\n/X/Y/Z/*\nRedirect\nRedirect\nhttp:// /\nRedirect /a/b/* URL\nb\nc\nb a\nspeed res arch\na b c\na b\na a\nb\na a b c\nb\na Redirect\n/a/b\nc\na\nb\na\nb\nb\nTest Operation Sunrise Operation\nNLIA\nNLIA Name Server\nNLIA\nJAddress\nNLIA NLIA\nName Server\na\nb\nNLIA\nJAddress\nSunrise Operation 3\nCommercial Operation\nCOMPUTER COMMUNICATION REVIEW\nVolume17, Number5 Special Issue Part 8. RESOURCE SHARING IN\nDISTRIBUTED SYSTEMS Larry L. Peterson A Yellow-Pages Service\nfor a Local-Area Network\nIn addition to describing the implementation of the yellow-pages service within a\nlocal-area network, we show how the service can be integrated with the available internet\ncommunication protocols to enable clients from throughout the internet to access local\nservers.\nThis paper describes a yellow-pages service that maps the name of a service into\nthe address of a server willing to provide the service\nA client that wishes to engage a service queries the yellow-pages service for the\naddress of a server, specifying the name of the service and any attributes the server should\npossess.The yellow-pages service returns the address of one or more servers that satisfy the\nclient's requirements.\nClients connect to the flagship host as though the server is available on that host.\nA forwarding mechanism running on the flagship host then \"patches\" the client through to an\nactual server that provides the service.\nA set of servers implement the yellow-pages service. Each server maintains a\ndatabase of information about the available services and servers.\nAn attribute is a syntactic object that denotes a property or characteristic of a\nserver.\nClients submit a set of attributes when querying the yellow-pages for a server that\nprovides a particular service.\nAssociated with each yellow-pages server is a database of information about the\nservices available in the system. The database contains bindings of each service to a set of\nservers that provide the service.\nClients query the yellow-pages service for the address of one or more servers that\nprovide a given service with the operation\nAs another example, suppose the client wishes to retrieve the address of the\nprinter based on its location: e.g., \" the printer in Rick's office\". In this case, the client invokes\nthe lookup operation with the mandatory attribute loc=rick. Any number of optional\nattributes are ignored because the mandatory attribute loc=rick selects a single server.\nRick\nloc=rick lookup loc=rick\nThis section describes how the yellow-pages service is integrated with the internet\ntransport protocols, therby allowing clients from throughout the internet to access servers\nwithin an autonomous system.\nA single host in the local system is designated as the flagship host;\nThe system advertizes the flagship as offering a set of services to Internet clients by\nregistering a set of resource records potentially one for each service with the domain\nnaming system.\nA client consults the domain name server to learn the address of a host at the\nsystem that offers a particular service and the address of the flagship host is returned. The\nclient then contacts the server by sending one or more packets addressed to the well-known\nport on the flagship host. The flagship host, in turn, forwards the packets to a server within the\nsystem. Thus, the forwarding mechanism is analogous to the strategy of accessing a server at\nwell-known port: The flagship serves as the \"well-known host\" for the system.\nConsider how the forwarding mechanism is implemented within TCP in more detail. The\nTCP module running on the flagship host is modified to include the forwarding mechanism.\nAssociated with the forwarding mechanism is a table that binds well-known ports to the\naddresses of servers.\nWhen a packet arrives at the TCP module addressed for some port, the forwarding\nmechanism is consulted to see if forwarding is to take place for that port; i.e., if there is an\nentry in the table. If the packet is from a new client, the forward server randomly selects one\nof the available servers and forwards the packet on to it. That is, the forwarding mechanism\nsets the packet's destination address to the server's address and resends packet.\nSubsequent packets sent on the same connection are forwarded to the same\nserver.\nby engaging the selection algorithm at the server rather than the client, the\nyellow-pages service effectively moves the \"function to the data\" rather than the \" data to the\nfunction\". That is, the selection algorithm executes on the same host as the database and a\nrelatively small answer a server address is returned.\nThe forwarding mechanism acts as an intermediary between the client and server.\nThis has the advantage of not requiring any changes to the transport protocol because the\nclient is shielded from the indirection. In contrast, the protocol could be modified such that the\nflagship host informs the client that it should redirect its packets to the server host.While this\nmight be reasonable in the case of a connection oriented protocol e.g., TCP\nforwarding mechanism\npatch\nftp telnet\nftp telnet\nWorld Wide Web\nhttp\nHTML\nhttp HyperText Transfer Protocol\nWorld Wide Web\nCGI\nLocation\nLocation\nRedirect\nRedirect\nhttp:// /\nhttpd httpd.conf\nJapan NLIA Native Language Internet Address System\nJAddress\nJAddress 1\n2 2\nNLIA Name Server 2 2\nNLIA Name Server\n3 4\nNLIA Name Server NLIA\nNLIA\nNLIA\nC NLIA\nD NLIA\n9 10\nJapan NLIA Native Language Internet System JAddress\n2 2\n4 9\n2 NLIA\nNLIA\nNLIA\nNLIA\nNLIA\n9 10\n"
}
{
  "trial_type": "IPCase",
  "date": {
    "era": "Heisei",
    "year": 29,
    "month": 11,
    "day": 30
  },
  "case_number": "平成28(行ケ)10078",
  "case_name": "審決取消請求事件",
  "court_name": "知的財産高等裁判所",
  "right_type": "特許権",
  "lawsuit_type": "行政訴訟",
  "lawsuit_id": "87286",
  "detail_page_link": "https://www.courts.go.jp/app/hanrei_jp/detail7?id=87286",
  "full_pdf_link": "https://www.courts.go.jp/app/files/hanrei_jp/286/087286_hanrei.pdf",
  "contents": "平成２９年１１月３０日判決言渡\n平成２８年（行ケ）第１００７８号  審決取消請求事件\n口頭弁論終結日  平成２９年１１月２日\n判決\n原 告        ブル   エス   アー   エ ス\n同 訴 訟 代 理 人 弁理 士        村    越    智    史\n今      村    光    広\n被            告     特 許 庁 長 官\n同 指 定 代 理 人      石    井    茂    和\n高    木              進\n野    崎    大      進\n板    谷    玲      子\n主文\n１  特許庁が不服２０１５－９６号事件について平成２７年１１月１７日\nにした審決を取り消す。\n２  訴訟費用は被告の負担とする。\n事 実 及 び 理 由\n第１  請求\n主文同旨\n第２  事案の概要\n本件は，特許出願拒絶査定に対する不服審判請求を不成立とした審決の取消訴訟\nである。争点は，補正要件違反（新規事項の追加，目的外補正，独立特許要件違反）\nの有無，進歩性の有無（相違点の判断）である。\n１  特許庁における手続の経緯\n原告は，名称を「命令スレッドを組み合わせた実行の管理システムおよび管理方\n法」とする発明につき，平成２２年（２０１０年）９月１５日を国際出願日として\n特許出願（請求項の数１０）をし（パリ条約による優先権主張  平成２１年〔２０\n０９年〕９月２５日〔本願優先日〕・フランス，国際公開番号ＷＯ２０１１／０３６\n３７７。甲６），平成２６年３月３１日，手続補正をした（請求項の数１０。甲９）\nが，平成２６年８月２６日付けで拒絶査定を受けたので，平成２７年１月５日，拒\n絶査定不服審判請求（不服２０１５－９６号。甲１１）及び手続補正をした（本件\n補正，請求項の数１０。甲１２）。\n特許庁は，平成２７年１１月１７日，「本件審判の請求は，成り立たない。」との\n審決をし，その謄本は，同年１２月１日，原告に送達された。\n２  本件発明の要旨\n(1)  平成２６年３月３１日付けで補正された本願の特許請求の範囲の請求項\n１～１０に係る発明（以下，請求項の番号を用いて「本願発明１」～「本願発明１\n０」といい，これらを総称して「本願発明」という。）は，以下のとおりのものであ\nる（甲９）。\n【請求項１】\n命令スレッドの実行を管理するコンピュータシステム（１８）であって，各中央\n処理装置が，前記各中央処理装置に属する複数の仮想プロセッサ（２４Ｃ，２４Ｓ，\n２６Ｃ，２６Ｓ）上で，複数の命令スレッドを組み合わせて実行するように構成さ\nれる少なくとも１つの中央処理装置（２４，２６）と，\n前記仮想プロセッサに命令スレッドの実行を分散するように構成されるマネージャ\n（３８）と，を有するコンピュータシステム（１８）において，実行する前記命令\nスレッドを複数の所定のタイプに応じて分類する分類手段（３６）を有し，\n前記命令スレッドの実行を分散するように構成される前記マネージャ（３８）を，\n前記命令スレッドが分類された前記複数の所定のタイプのうちの１つに基づき，実\n行する前記命令スレッドを前記仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）\nに方向付けるように設計するコンピュータシステムであって，\n前記各中央処理装置の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）は，前\n記中央処理装置に属する内部資源を共有することにより同時マルチスレッディング\nを実施する機能を有する複数の論理区画に相当する，ことを特徴とするコンピュー\nタシステム。\n【請求項２】\n前記中央処理装置（２４，２６）の各仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，\n２６Ｓ）を前記所定のタイプの１つに関連付ける手段（Ｃ，Ｓ）を備える，請求項\n１に記載のコンピュータシステムにおいて，前記命令スレッドの実行を分散するよ\nうに構成される前記マネージャ（３８）を，実行する前記命令スレッドをそれぞれ\n該スレッドと同じタイプの仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）に\n方向付けるように設計するコンピュータシステムであって，\n前記各中央処理装置の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）は，前\n記中央処理装置に属する内部資源を共有することにより同時マルチスレッディング\nを実施する機能を有する複数の論理区画に相当する，ことを特徴とするコンピュー\nタシステム。\n【請求項３】\n前記中央処理装置（２４，２６）は２つの仮想プロセッサ（２４Ｃ，２４Ｓ，２\n６Ｃ，２６Ｓ）を有し，１つは命令スレッドの第１のタイプ（Ｃ）に関連付け，も\nう１つは命令スレッドの第２のタイプ（Ｓ）に関連付け，実行するコンピュータプ\nロセスはそれぞれ前記第１のタイプか前記第２のタイプである，請求項１または２\nに記載のコンピュータシステム。\n【請求項４】\n－  「計算」と呼ぶ命令スレッドの前記第１のタイプ（Ｃ）は，結果を供給す\nるように前記コンピュータシステムが実行するようになっているプログラムに対し\nて，該プログラムの実行に参加して結果を直接生成する命令スレッドに関係し，\n－  「サービス」と呼ぶプロセスの前記第２のタイプ（Ｓ）は，該プログラム\nの実行に参加して「計算」タイプの前記命令スレッドに付属サービスを供給する命\n令スレッドに関係する，請求項３に記載のコンピュータシステム。\n【請求項５】\n少なくとも２つの中央処理装置（２４，２６）を有し，それぞれが複数の仮想プ\nロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）を備え，仮想プロセッサ上で複数の\n命令スレッドを組み合わせて実行する，請求項１から４のいずれか一項に記載のコ\nンピュータシステムにおいて，前記命令スレッドの実行を分散するように構成され\nる前記マネージャ（３８）を，中央処理装置にある仮想プロセッサとは独立して，\n実行する命令スレッドそれぞれに対して中央処理装置を選択するように設計するコ\nンピュータシステムであって，\n前記各中央処理装置の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）は，前\n記中央処理装置に属する内部資源を共有することにより同時マルチスレッディング\nを実施する機能を有する複数の論理区画に相当する，ことを特徴とするコンピュー\nタシステム。\n【請求項６】\nコンピュータシステム（１８）の少なくとも１つの中央処理装置（２４，２６）\nに属する複数の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）上で複数の命\n令スレッドを組み合わせて実行するのを管理する方法であって，前記仮想プロセッ\nサに前記命令スレッドの実行を分散するステップ（１０４）を含む方法において，\n複数の所定のタイプに応じて実行する前記命令スレッドを分類する予備ステップ\n（１００）を含み，前記命令スレッドの実行を分散するステップ（１０４）で，実\n行する命令スレッドそれぞれをタイプに応じて仮想プロセッサに方向付ける，方法\nであって，\n前記各中央処理装置の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）は，前\n記中央処理装置に属する内部資源を共有することにより同時マルチスレッディング\nを実施する機能を有する複数の論理区画に相当する，ことを特徴とする方法。\n【請求項７】\n前記分類ステップ（１００）で，命令スレッドを管理するアプリケーションプロ\nグラミングインターフェースの関数でタイプを識別するパラメータに基づいて，前\n記命令スレッドをそれぞれタイプで分類する，請求項６に記載の方法。\n【請求項８】\n前記分類ステップ（１００）で，命令スレッドの実行を含むプログラムの実行コ\nマンドでタイプを識別するパラメータに基づいて，前記命令スレッドをそれぞれこ\nのタイプで分類する，請求項６に記載の方法。\n【請求項９】\nスーパーコンピュータタイプのサーバクラスタ（１０）の複数の処理ノード上で\n複数の命令スレッドを実行することの管理に対する請求項６から８のいずれか一項\nに記載の方法の適用であって，各処理ノード（１８）が，少なくとも１つの中央処\n理装置に属する複数の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）上で複\n数の命令スレッドを組み合わせて実行する前記少なくとも１つの中央処理装置（２\n４，２６）を有する適用であって，\n前記各中央処理装置の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）は，前\n記中央処理装置に属する内部資源を共有することにより同時マルチスレッディング\nを実施する機能を有する複数の論理区画に相当する，ことを特徴とする適用。\n【請求項１０】\n通信ネットワークからダウンロード可能なコンピュータプログラムおよび／また\nはコンピュータで再生可能な媒体に記録したコンピュータプログラムおよび／また\nはプロセッサのなかでもとりわけコンピュータのオペレーティングシステム（３４）\nで実行可能なコンピュータプログラムであって，前記プログラムをコンピュータ上\nで実行した場合に，請求項６から８のいずれか一項に記載の複数の命令スレッドを\n組み合わせた実行の管理方法のステップを実行するプログラムコードの命令を含む\nコンピュータプログラムであって，\n各中央処理装置の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）は，前記中\n央処理装置に属する内部資源を共有することにより同時マルチスレッディングを実\n施する機能を有する複数の論理区画に相当する，ことを特徴とするコンピュータシ\nステム。\n(2)  本件補正によって補正された後の本願の特許請求の範囲の請求項１～１\n０に係る発明（以下，請求項の番号を用いて「本願補正発明１」～「本願補正発明\n１０」といい，これらを総称して「本願補正発明」という。）は，以下のとおりのも\nのである（甲１２。下線は，補正箇所を示す。）\n【請求項１】\n命令スレッドの実行を管理するコンピュータシステム（１８）であって，\n各中央処理装置が，前記各中央処理装置に属する複数の仮想プロセッサ（２４Ｃ，\n２４Ｓ，２６Ｃ，２６Ｓ）上で，複数の命令スレッドを組み合わせて実行するよう\nに構成される，少なくとも１つの中央処理装置（２４，２６）と，\n前記仮想プロセッサに命令スレッドの実行を分散するように構成されるマネージャ\n（３８）と，を有するコンピュータシステム（１８）において，\n前記命令スレッドには，少なくとも２つの異なる所定のタイプ（Ｃ，Ｓ）が存在し，\n－「計算」と呼ぶ命令スレッドの前記第１のタイプ（Ｃ）は，結果を供給するよう\nに前記コンピュータシステムが実行するようになっているプログラムに対して，該\nプログラムの実行に参加して結果を直接生成する命令スレッドに関係し，\n－「サービス」と呼ぶプロセスの前記第２のタイプ（Ｓ）は，該プログラムの実行\nに参加して前記「計算」と呼ぶタイプ（Ｃ）の前記命令スレッドに付属サービス（前\n記結果の保存など）を供給する命令スレッドに関係し，\n前記コンピュータシステム（１８）は，実行する前記命令スレッドを前記所定のタ\nイプ（Ｃ，Ｓ）に応じて分類する分類手段（３６）を有し，\n前記命令スレッドの実行を分散するように構成される前記マネージャ（３８）は，\n前記命令スレッドが分類された前記所定のタイプ（Ｃ，Ｓ）に基づき，実行する前\n記命令スレッドを前記仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）に方向\n付けるように設計され，\n前記各中央処理装置の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）は，前\n記中央処理装置に属する内部資源を共有することにより，同時マルチスレッディン\nグを実施する複数の論理区画に相当する，ことを特徴とするコンピュータシステム。\n【請求項２】\n前記中央処理装置（２４，２６）の各仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，\n２６Ｓ）を前記所定のタイプ（Ｃ，Ｓ）の１つに関連付ける手段を備える，請求項\n１に記載のコンピュータシステムにおいて，前記命令スレッドの実行を分散するよ\nうに構成される前記マネージャ（３８）を，実行する前記命令スレッドをそれぞれ\n該スレッドと同じタイプの仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）に\n方向付けるように設計するコンピュータシステムであって，\n前記各中央処理装置の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）は，前\n記中央処理装置に属する内部資源を共有することにより同時マルチスレッディング\nを実施する機能を有する複数の論理区画に相当する，ことを特徴とするコンピュー\nタシステム。\n【請求項３】\n前記中央処理装置（２４，２６）は２つの仮想プロセッサ（２４Ｃ，２４Ｓ，２\n６Ｃ，２６Ｓ）を有し，１つは命令スレッドの第１のタイプ（Ｃ）に関連付け，も\nう１つは命令スレッドの第２のタイプ（Ｓ）に関連付け，実行するコンピュータプ\nロセスはそれぞれ前記第１のタイプ（Ｃ）か前記第２のタイプ（Ｓ）である，請求\n項１または２に記載のコンピュータシステム。\n【請求項４】\n－「計算」と呼ぶ命令スレッドの前記第１のタイプ（Ｃ）は，結果を供給するよう\nに前記コンピュータシステムが実行するようになっているプログラムに対して，該\nプログラムの実行に参加して結果を直接生成する命令スレッドに関係し，\n－「サービス」と呼ぶプロセスの前記第２のタイプ（Ｓ）は，該プログラムの実行\nに参加して「計算」と呼ぶタイプ（Ｃ）の前記命令スレッドに付属サービス（前記\n結果の保存など）を供給する命令スレッドに関係する，請求項３に記載のコンピュ\nータシステム。\n【請求項５】\n少なくとも２つの中央処理装置（２４，２６）を有し，それぞれが複数の仮想プ\nロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）を備え，仮想プロセッサ上で複数の\n命令スレッドを組み合わせて実行する，請求項１から４のいずれか一項に記載のコ\nンピュータシステムにおいて，前記命令スレッドの実行を分散するように構成され\nる前記マネージャ（３８）を，中央処理装置にある仮想プロセッサとは独立して，\n実行する命令スレッドそれぞれに対して中央処理装置を選択するように設計するコ\nンピュータシステムであって，\n前記各中央処理装置の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）は，前\n記中央処理装置に属する内部資源を共有することにより同時マルチスレッディング\nを実施する機能を有する複数の論理区画に相当する，ことを特徴とするコンピュー\nタシステム。\n【請求項６】\nコンピュータシステム（１８）の少なくとも１つの中央処理装置（２４，２６）\nに属する複数の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）上で複数の命\n令スレッドを組み合わせて実行するのを管理する方法であって，前記仮想プロセッ\nサに前記命令スレッドの実行を分散するステップ（１０４）を含む方法において，\n複数の所定のタイプ（Ｓ，Ｃ）に応じて実行する前記命令スレッドを分類する予備\nステップ（１００）を含み，前記命令スレッドの実行を分散するステップ（１０４）\nで，実行する命令スレッドそれぞれをタイプ（Ｓ，Ｃ）に応じて仮想プロセッサに\n方向付ける，方法であって，\n前記各中央処理装置の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）は，\n前記中央処理装置に属する内部資源を共有することにより同時マルチスレッディン\nグを実施する機能を有する複数の論理区画に相当する，ことを特徴とする方法。\n【請求項７】\n前記分類ステップ（１００）で，命令スレッドを管理するアプリケーションプロ\nグラミングインターフェースの関数でタイプ（Ｓ，Ｃ）を識別するパラメータに基\nづいて，前記命令スレッドをそれぞれタイプ（Ｓ，Ｃ）で分類する，請求項６に記\n載の方法。\n【請求項８】\n前記分類ステップ（１００）で，命令スレッドの実行を含むプログラムの実行コ\nマンドでタイプ（Ｓ，Ｃ）を識別するパラメータに基づいて，前記命令スレッドを\nそれぞれこのタイプ（Ｓ，Ｃ）で分類する，請求項６に記載の方法。\n【請求項９】\nスーパーコンピュータタイプのサーバクラスタ（１０）の複数の処理ノード上で\n複数の命令スレッドを実行することの管理に対する請求項６から８のいずれか一項\nに記載の方法の適用であって，各処理ノード（１８）が，少なくとも１つの中央処\n理装置に属する複数の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）上で複\n数の命令スレッドを組み合わせて実行する前記少なくとも１つの中央処理装置（２\n４，２６）を有する適用であって，\n前記各中央処理装置の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）は，前\n記中央処理装置に属する内部資源を共有することにより同時マルチスレッディング\nを実施する機能を有する複数の論理区画に相当する，ことを特徴とする適用。\n【請求項１０】\n通信ネットワークからダウンロード可能なコンピュータプログラムおよび／また\nはコンピュータで再生可能な媒体に記録したコンピュータプログラムおよび／また\nはプロセッサのなかでもとりわけコンピュータのオペレーティングシステム（３４）\nで実行可能なコンピュータプログラムであって，前記プログラムをコンピュータ上\nで実行した場合に，請求項６から８のいずれか一項に記載の複数の命令スレッドを\n組み合わせた実行の管理方法のステップを実行するプログラムコードの命令を含む\nコンピュータプログラムであって，\n各中央処理装置の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）は，前記中\n央処理装置に属する内部資源を共有することにより同時マルチスレッディングを実\n施する機能を有する複数の論理区画に相当する，ことを特徴とするコンピュータシ\nステム。\n３  審決の理由の要点\n(1)  補正の適否\nア  新規事項\n独立請求項である本件補正後の請求項６と，それを引用する本件補正後の請求項\n７及び８の「タイプ（Ｓ，Ｃ）」という記載は，平成２４年４月１７日付けで提出さ\nれた明細書，請求の範囲の日本語による翻訳文及び国際出願の願書に添付された図\n面（以下，これらを併せて「当初明細書等」という。甲６）に記載されたものでは\nなく，本件補正は，当初明細書等の記載の範囲内でされたものではない。\nイ  目的要件\n仮に，本件補正が，当初明細書等の記載の範囲内でされたものであるとしても，\n本件補正前の請求項６～８に対する本件補正における補正事項は，特許請求の範囲\nの限定的減縮，明瞭でない記載の釈明，誤記の訂正のいずれにも該当しない。\nそして，本件補正において，請求項の削除は行われていない。\nウ  独立特許要件\n仮に，本件補正が，当初明細書等の記載の範囲内でされたものであって，目的要\n件を満たすものであったとしても，本願補正発明６と甲１（特開２００４－２２０\n６０８号公報）に記載された発明（以下，「甲１発明」という。）との一致点及び相\n違点は，以下のとおりであり，相違点１～４に係る事項は，甲２（特開２００４－\n３４８４６２号公報）に記載された発明及び当該技術分野における周知の技術事項\n（甲３～５）に基づいて当業者が適宜なし得る事項であるから，本願補正発明６は，\nこれらの発明及び周知の技術事項に基づいて当業者が容易に発明することができた。\nしたがって，本願補正発明６は，特許出願の際独立して特許を受けることができ\nない。\n【一致点】\nコンピュータシステムの少なくとも１つの中央処理装置上で複数の命令スレッド\nを組み合わせて実行するのを管理する方法であって，\n資源に命令スレッドの実行を分散するステップを含む方法において，複数の所定\nのタイプ（Ｓ，Ｃ）に応じて実行する前記命令スレッドを分類する予備ステップを\n含み，前記命令スレッドの実行を分散するステップで，実行する命令スレッドそれ\nぞれをタイプ（Ｓ，Ｃ）に応じて資源に方向付ける，方法。\n【相違点１】\n“中央処理装置上で複数の命令スレッドを組み合わせて実行する”に関して，\n本件補正発明６においては，“中央処理装置に属する複数の仮想プロセッサ上で\n複数の命令スレッドを組み合わせて実行する”ものであるのに対して，\n引用発明においては，「仮想プロセッサ上で複数の命令を実行する」点については，\n特に言及されていない点。\n【相違点２】\n“資源”に関して，\n本件補正発明６においては，“資源”が，「仮想プロセッサ」であるのに対して，\n引用発明における“資源”である「リソース」に，「仮想プロセッサ」が含まれる\nことが明言されていない点。\n【相違点３】\n“実行する命令スレッドそれぞれをタイプ（Ｓ，Ｃ）に応じて資源に方向付ける”\nことに関して，\n本件補正発明６においては「仮想プロセッサに方向付ける」ものであるのに対し\nて，\n引用発明においては，「リソースの共通セットに割り当てられる」ものである点。\n【相違点４】\n本件補正発明６においては，「各中央処理装置の仮想プロセッサ（２４Ｃ，２４Ｓ，\n２６Ｃ，２６Ｓ）は，前記中央処理装置に属する内部資源を共有することにより同\n時マルチスレッディングを実施する機能を有する複数の論理区画に相当する」もの\nであるのに対して，\n引用発明においては，「仮想プロセッサ」についての言及がない点。\n(2)  進歩性\n本願発明６と甲１発明との一致点及び相違点は，以下のとおりであり，相違点ａ\n～ｄに係る事項については，上記(1)の相違点１～４に係る事項において検討した\nとおりであるから，本願発明６は，甲１発明，甲２に記載された発明及び当該技術\n分野における周知の技術事項（甲３～５）に基づいて当業者が容易に発明をするこ\nとができた。\n【一致点】\nコンピュータシステムの少なくとも１つの中央処理装置上で複数の命令スレッド\nを組み合わせて実行するのを管理する方法であって，\n資源に命令スレッドの実行を分散するステップを含む方法において，複数の所定\nのタイプに応じて実行する前記命令スレッドを分類する予備ステップを含み，前記\n命令スレッドの実行を分散するステップで，実行する命令スレッドそれぞれをタイ\nプに応じて資源に方向付ける，方法。\n【相違点ａ】\n“中央処理装置上で複数の命令スレッドを組み合わせて実行する”に関して，\n本願発明６においては，“中央処理装置に属する複数の仮想プロセッサ上で複数\nの命令スレッドを組み合わせて実行する”ものであるのに対して，\n引用発明においては，「仮想プロセッサ上で複数の命令を実行する」点については，\n特に言及されていない点。\n【相違点ｂ】\n“資源”に関して，\n本願発明６においては，“資源”が，「仮想プロセッサ」であるのに対して，\n引用発明における“資源”である「リソース」に，「仮想プロセッサ」が含まれる\nことが明言されていない点。\n【相違点ｃ】\n“実行する命令スレッドそれぞれをタイプに応じて資源に方向付ける”ことに関\nして，\n本願発明６においては「仮想プロセッサに方向付ける」ものであるのに対して，\n引用発明においては，「リソースの共通セットに割り当てられる」ものである点。\n【相違点ｄ】\n本願発明６においては，「各中央処理装置の仮想プロセッサ（２４Ｃ，２４Ｓ，２\n６Ｃ，２６Ｓ）は，前記中央処理装置に属する内部資源を共有することにより同時\nマルチスレッディングを実施する機能を有する複数の論理区画に相当する」もので\nあるのに対して，\n引用発明においては，「仮想プロセッサ」についての言及がない点。\n第３  原告主張の審決取消事由\n１  補正の適法性についての判断の誤り\n(1)  新規事項追加禁止要件違反についての判断の誤り\n次のとおり，本件補正によってされた請求項６における「タイプ」を「タイプ（Ｓ，\nＣ）」に変更する補正事項は，当初明細書等に明示的に記載されているか，少なくと\nも当初明細書等の記載から自明なものであり，新規事項追加禁止要件を充たしてい\nるから，請求項６を引用する請求項７及び８についても，上記要件を満たしている。\nア(ｱ)ａ  請求項６において，「タイプ（Ｓ，Ｃ）」は，①「複数の所定のタイ\nプ（Ｓ，Ｃ）に応じて実行する前記命令スレッドを分類する」及び②「実行する命\n令スレッドそれぞれをタイプ（Ｓ，Ｃ）に応じて仮想プロセッサに方向付ける」と\nいう発明特定事項において用いられている。\n当初明細書等の【００３９】の記載を考慮すると，①「複数の所定のタイプ（Ｓ，\nＣ）に応じて実行する前記命令スレッドを分類する」という発明特定事項は，命令ス\nレッドのタイプ（例えば「計算」と「サービス」と呼ばれる二つのタイプ）に応じて，\n実行する命令スレッドを分類する，という意味であることが容易に理解できる。\n当初明細書等の【００４７】の記載を考慮すると，②「実行する命令スレッドそれ\nぞれをタイプ（Ｓ，Ｃ）に応じて仮想プロセッサに方向付ける」という発明特定事項\nは，実行する命令スレッドを，当該命令スレッドのタイプ（例えば「計算」と「サー\nビス」と呼ばれる二つのタイプ）に応じて仮想プロセッサに方向付ける，という意味\nであることが理解できる。\n以上の理解に基づくと，これらの発明特定事項において用いられている「タイプ（Ｓ，\nＣ）」は，「命令スレッドのタイプ（Ｓ，Ｃ）」を意味することも理解できる。\nｂ  当初明細書等において，「Ｓ」及び「Ｃ」が仮想プロセッサのタイプを\n表すために用いられていることはあるにしても，命令スレッドの第１のタイプ（計算\nタイプ）を表すために「Ｃ」，命令スレットの第２のタイプ（サービスタイプ）を表す\nために「Ｓ」が用いられている（甲６【請求項３】，【請求項４】，【図１】）。\n【図１】\n図１においては，仮想プロセッサ２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓを表すブロッ\nクの各々の右下隅に小さなブロックが描かれている。そして，仮想プロセッサ２４\nＣ及び仮想プロセッサ２６Ｃの右下隅のブロックにはそれぞれ参照符号「Ｃ」が付\nされ，仮想プロセッサ２４Ｓ及び仮想プロセッサ２６Ｓの右下隅のブロックにはそ\nれぞれ参照符号「Ｓ」が付されている。仮想プロセッサを示す符号としては，既に\n２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓが用いられているから，上記の小さい方のブロッ\nクの各々に付されている参照符号は仮想プロセッサのタイプを示すものではない。\n他方，請求項３には，「前記中央処理装置（２４，２６）は２つの仮想プロセッサ\n（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）を有し，一つは命令スレッドの第１のタイプ\n（Ｃ）に関連付け，もう一つは命令スレッドの第２のタイプ（Ｓ）に関連付け」と\n記載されている。この請求項３の記載に沿って図１を理解すると，図１の仮想プロ\nセッサ２４Ｃ，２６Ｃを表すブロックの各々の右下隅にあり「Ｃ」の符号が付され\nている小ブロックは，命令スレッドの第１のタイプ（Ｃ）を表していると容易に理\n解することができる。符号「Ｓ」についても同様である。\n(ｲ)  括弧書きされている「（Ｓ，Ｃ）」は，請求項の「タイプ」という用語\nと発明の詳細な説明や図面に記載された具体的な構成との対応関係を明確にするた\nめに，「タイプ」の後の括弧内に発明の詳細な説明や図面で使用されている参照符号\n「Ｓ」及び「Ｃ」を付加したものである。\n当初明細書等の【００４６】，【００４７】及び【図１】において，計算タイプを\n表す符号として「Ｃ」が，サービスタイプを表す符号として「Ｓ」が用いられてい\nる。\nしたがって，「タイプ」に「（Ｓ，Ｃ）」を付加することにより，「タイプ（Ｓ，Ｃ）」\nが発明の詳細な説明や図面におけるサービスタイプ及び計算タイプに対応することが\n特定されている。\n参照符号の付加により当初明細書等の記載から導き出すことができないような技術\n事項が導入されることはない。\nイ(ｱ)  本件補正による①「複数の所定のタイプ（Ｓ，Ｃ）に応じて実行する前\n記命令スレッドを分類する」という補正事項は，当初明細書等の記載から自明なもの\nである。\n当初明細書等の請求項４及び【００３９】の記載に鑑みると，当業者は，当初明\n細書等には，①「命令スレッドの第１のタイプ（Ｃ）及び命令スレッドの第２のタ\nイプ（Ｓ）という二つの命令スレッドのタイプに応じて，実行する命令スレッドを\n分類する」ことが記載されていることを理解することができる。\n(ｲ)  本件補正による②「実行する命令スレッドそれぞれをタイプ（Ｓ，Ｃ）\nに応じて仮想プロセッサに方向付ける」という補正事項は，当初明細書等の記載か\nら自明なものである。\n当業者は，発明の詳細な説明において命令スレッドのタイプについて「Ｃ」や「Ｓ」\nの符号を付さずに説明がされていても，命令スレッドのタイプとしては第１のタイ\nプ（Ｃ）及び第２のタイプ（Ｓ）があることを当然に理解できる。\nそうすると，当業者は，当初明細書等の【００４７】の記載から，当初明細書等\nには，②「実行する命令スレッドをそれぞれタイプに応じて１つの仮想プロセッサ\nに方向付けし，さらに正確にはタイプが同じ仮想プロセッサにも方向付けするよう\nに設計する。」ことが記載されていると理解することができる。\nウ(ｱ)  被告の主張によると，本件補正後の「タイプ（Ｓ，Ｃ）」という用語の\n意義は，本件補正前の「タイプ」という用語の意義と全く同じということになる。\n請求項には，「特許出願人が特許を受けようとする発明を特定するために必要と認め\nる事項のすべて」（特許法３６条５項）が記載されているのであるから，請求項に記載\nされた事項は全て発明を特定するために必要な事項であって，このような発明を特定\nするための事項を無視して発明の要旨認定を行うことは許されない。\n(ｲ)  特許法施行規則様式２９条の２の［備考］１４のロは，発明の要旨認定\nの準則とされる規定ではない。特許法３６条５項によると，請求項に記載された符号\nも当該請求項に係る発明を特定するために必要な事項であり，このような符号の記載\nも考慮した上で発明の要旨を認定すべきである。\n乙１は，請求項において図面に対応する符号が用いられたからといって，当該請求\n項に係る発明を当該符号が用いられた図面に対応する実施例に限定して解釈されるこ\nとはないということを説明しているにすぎず，当該符号を考慮せずに要旨認定を行う\nことを説明しているのではない。\n(2)  目的要件違反についての判断の誤り\n次のとおり，本件補正における①「複数の所定のタイプに応じて実行する前記命令\nスレッドを分類する」及び②「実行する命令スレッドそれぞれをタイプに応じて仮想\nプロセッサに方向付ける」の「タイプ」を「タイプ（Ｓ，Ｃ）」と変更する補正は，特\n許請求の範囲の限定的減縮に当たり，本願補正は，特許請求の範囲の限定的減縮を目\n的としたものであるから，目的要件を満たしている。\nア  「タイプ」を「タイプ（Ｓ，Ｃ）」と変更する本願補正は，元々記載されて\nいた命令スレッドの「タイプ」に符号「（Ｓ，Ｃ）」を付加して，請求項の「タイプ」\nという用語と発明の詳細な説明や図面に記載された具体的な構成との対応関係をより\n明確にしたものである。\n本願補正前の「タイプ」は，命令スレッドのタイプという意味を有していたが，\nこれを「タイプ（Ｓ，Ｃ）」と補正することにより，請求項６で用いられている「タ\nイプ」が発明の詳細な説明や図面に記載された「サービスタイプ」や「計算タイプ」\nと対応することがさらに特定された。\nイ(ｱ)  当初明細書等の【００３９】には，命令スレッドの複数の所定のタイプ\nとして，第１のタイプ（第１のタイプ（Ｃ））及び第２のタイプ（第２のタイプ（Ｓ））\nが挙げられているが，「複数の所定のタイプに応じて，また特に，」と記載されている\nことから，この第１のタイプ（Ｃ）及び第２のタイプ（Ｓ）は例示であることがわか\nる。\nしたがって，命令スレッドの「複数の所定のタイプ」には，第１のタイプ（Ｃ）\n及び第２のタイプ（Ｓ）以外のタイプも含まれることが想定されている。\n(ｲ)  本件補正前の①「複数の所定のタイプに応じて実行する前記命令ス\nレッドを分類する」という発明特定事項は，\nＡ１：第１のタイプ（Ｃ）や第２のタイプ（Ｓ）を含む複数の所定のタイプに応\nじて実行する命令スレッドを分類するという態様，及び\nＡ２：第１のタイプ（Ｃ）や第２のタイプ（Ｓ）を含まない複数の所定のタイプ\nに応じて実行する命令スレッドを分類するという態様，\nのいずれの態様も包含している。\n本件補正後の請求項６においては，「複数の所定のタイプ」が当初明細書等の第１\nのタイプ（Ｃ）及び第２のタイプ（Ｓ）に対応するものであることが特定された。\nしたがって，本件補正により，前記態様Ａ２が特許請求の範囲から除外されたこ\nとになる。\n(ｳ)  本件補正前の②「実行する命令スレッドそれぞれをタイプに応じて\n仮想プロセッサに方向付ける」という発明特定事項は，\nＢ１：実行する命令スレッドを第１のタイプ（Ｃ）や第２のタイプ（Ｓ）を含む\nタイプに応じて仮想プロセッサに方向付けるという態様，及び\nＢ２：第１のタイプ（Ｃ）や第２のタイプ（Ｓ）を含まないタイプに応じて仮想\nプロセッサに方向付けるという態様，\nのいずれの態様も包含している。\n本件補正後の請求項６においては，「タイプ（Ｓ，Ｃ）」が当初明細書等の第１の\nタイプ（Ｃ）及び第２のタイプ（Ｓ）に対応する概念であることが特定された。\nしたがって，本件補正により，前記態様Ｂ２が特許請求の範囲から除外されたこ\nとになる。\nウ  本件補正の前後で，請求項６～８に係る発明の産業上の利用分野及び解\n決課題がそれぞれ同一であることも明らかである。\nエ  仮に，前記内容の本件補正により，補正後の内容が補正前の内容から実質\n的に変更されていないとしても，当該補正事項は，特許請求の範囲の限定的減縮に該\n当する。\nすなわち，一般に，審判請求時の補正において特許請求の範囲の限定的減縮を目的\nとする補正が許容されているのは，このような補正は，審査・審理の対象を大幅に変\n更するものではなく従前の審査結果を利用して効率的に審査・審理を行うことができ\nるためである。\n上記の補正事項に係る補正は，審査・審理の対象を大幅に変更するものではないか\nら，従前の審査結果を利用することが可能であり，特許法によって許容された補正と\nいえる。\n(3)  独立特許要件違反についての判断の誤り\nア  甲１発明において相違点３に係る発明特定事項を採用することは容易にな\nし得たことではないこと\n(ｱ)  審決の甲２に記載された技術事項に関する認定は誤っていること\nａ  甲２に記載されているのは，模擬対象の模擬処理を，模擬イベント\n交換頻度及び模擬データ転送量に応じて，論理プロセッサに割り付ける分散シミュ\nレーションシステムであり，甲２には，この技術について，次の点が開示されてい\nる。\n(a)  甲２に記載された技術は，訓練用シミュレーション，計画・予測・\n解析用シミュレーションなど，様々な用途のシミュレーションを実行する分散シミ\nュレーションシステムに関するものである。\n(b)  従来から，分散シミュレーションシステムを用いて，地面や路面\nなどの模擬空間における地形や地勢を模擬することが行われていた。\n(c)  地表面，車両，航空機などの模擬対象に応じてシミュレーション\nプログラムを分割して複数の論理プロセッサで分散処理する場合に，分割されたプ\nログラムを実行する論理プロセッサ間で頻繁にデータをやり取りする必要があるた\nめ，論理プロセッサ間で大きなサイズのデータをやり取りする必要がある場合や，\nデータ交換頻度が非常に高い場合などでは，システム全体として当該シミュレーシ\nョンを高速に処理することが困難になる。\n地表面のような模擬環境と車両や航空機などの移動する模擬物体とでは，互いに\n関連しあうデータを常にやり取りする必要がある。このため，これらに対応するプ\nログラムを実行する論理プロセッサ間では，データ交換頻度が非常に高くなり，や\nり取りすべきデータ量も膨大なものとなる。\n模擬対象とされた地表面が非常に広範囲であったり，模擬対象とすべき車両や航\n空機などの物体が非常に多数であると，これらに対応した特定のプログラムの負荷\nが高くなってしまうため，システム全体として処理速度が落ちてしまう。\n(d)  甲２に記載された技術は，上記課題を解決するためのものである。\n具体的には，甲２記載の分散シミュレーションシステムは，模擬対象定義から互い\nに関連し合う挙動が模擬される模擬対象の組合せを求め，これらの組合せに関連す\nる領域ごとにその模擬処理を論理プロセッサに分担する。模擬環境や模擬物体など\nの模擬対象について模擬イベント交換頻度と模擬データ転送量が高くなると予想さ\nれる組合せを同一の論理プロセッサに割り当てる。\n(e)  甲２に記載された技術は，論理プロセッサ間における模擬イベン\nト交換頻度と模擬データ転送量を削減することができ，高速で効率的な処理を実現\nするという効果を奏するためのものである。\nｂ  甲２の【００３３】～【００３５】を考慮しても，甲２には，上記\n(ｱ)の技術を一般化して，種類の異なる複数の処理を論理プロセッサに割り付ける\n技術は，記載も示唆もされていない。\nまた，甲２には，模擬イベント交換頻度及び模擬データ転送量に応じた論理プロ\nセッサへの割当ては記載されているが，これを一般化した，処理の種類に応じたプ\nロセッサへの割当てについては，記載も示唆もされていない。\n(ｲ)  甲２に記載された技術を甲１発明には容易に適用できないこと\nａ  技術分野が異なること\n(a)  甲１発明は，マルチスレッド・コンピュータにおけるプログラム\nの最小の実行単位であるスレッドのコンピュータリソースへの割当てに関する発明\nであるのに対し，甲２に記載された技術は，訓練用シミュレーション等の各種シミ\nュレーションを実行する分散シミュレーションシステムにおける模擬処理の論理プ\nロセッサへの割当てに関するものであるから，甲１発明と甲２に記載された技術と\nでは技術分野が異なる。\nしたがって，甲１発明に対して，甲１発明とは異なる分散シミュレーションシス\nテムでの模擬処理の分担に関する技術を適用する動機付けが存在せず，そのような\n適用を行うことが容易であったとはいえない。\n(b)  確かに，甲１発明及び甲２に記載された技術は，いずれも，命令\nを複数のスレッドに分割して実行するマルチスレッディングに関するものである点\nでは共通する。\nしかし，マルチスレッディングには，（Ａ）複数の物理プロセッサにスレッドを同\n時に実行させるマルチプロセッサ技術と，（Ｂ）単一の物理プロセッサによって認識\nされる複数の仮想プロセッサにスレッドを同時に実行させるマルチスレッド同時処\n理（ＳＭＴ）技術があり（甲４【０００４】），これらはマルチスレッディングにお\nける別種のアプローチである。この両技術は，その定義上，マルチプロセッサ技術\nにおいてはスレッド処理の効率性が複数の物理プロセッサの物理的な関係に影響さ\nれるのに対し，ＳＭＴ技術ではそのようなことがない点で異なっており，それに伴\nって対処すべき技術的課題も異なる。\n甲１発明は，複数の物理プロセッサ間相互のデータ転送に起因する通信コストの\n問題を解決するために，命令スレッドをリソースの共通セットに割り当てる，すな\nわち，同一型の命令スレッドをコンピュータの同一物理サブシステムのリソースに\n割り当てるという構成を採用し，複数の物理サブシステム間における交差トラフィ\nックを減少させており，前者のマルチプロセッサ技術に関するものであるのに対し，\n甲２に記載された技術は，後者のマルチスレッド同時処理（ＳＭＴ）技術に関する\nものである。\n「同一タイプのスレッドが，リソースの共通セットに割り当てられる」という構\n成は，複数の物理プロセッサ間相互のデータ転送に起因する通信コストの問題を解\n消するというマルチプロセッサ技術に固有の技術課題を解決するために甲 1 発明に\nおいて採用されたマルチプロセッサ技術と密接に関連する構成であるから，当業者\nは，このような構成をＳＭＴ技術の構成で置き換えることには動機付けられない。\nすなわち，ＳＭＴ技術においては，複数の仮想プロセッサは単一の物理プロセッサ\nにより実現されることが前提であって，複数の物理プロセッサ間の通信コストが課\n題とならないから，甲 1 発明において複数の物理プロセッサ間の通信コストに関す\nる技術課題を解決する前に不可欠な構成を，ＳＭＴ技術に関連する構成で置換する\nことに動機付けられるとは考えられない。\nｂ  解決すべき課題が異なること\n(a)  甲１発明の課題は，主に，処理対象のスレッドにプロセッサ等の\n物理的リソースを効率的に割り当てて，複数のプロセッサ間におけるデータ転送に\n関する通信コストを解決すること，及び，その際に著しいカスタム化を行わないよ\nうにすること，という物理プロセッサ間で処理を分散して行うことを前提としたも\nのであるのに対し，甲２に記載された技術に関する課題は，模擬対象に応じて分割\nしたシミュレーションプログラムを複数の論理プロセッサで分散処理するに当たり，\n主に，論理プロセッサ間での模擬イベント交換頻度及び模擬データ転送量を削減し，\nシステム全体としての処理速度を高速に保ち，かつ効率的な模擬処理を実行するこ\nとができる分散シミュレーションシステムを得ることであるから，物理プロセッサ\n間での通信コストの問題とは無関係である。\nしたがって，甲１発明と甲２に記載された技術とは解決すべき課題が異なってお\nり，甲２に記載された技術事項を甲１発明に適用する動機付けが存在しない。\n(b)  本件補正発明においては，仮想プロセッサへの命令スレッドの割\n当てに関して，ロードバランシングアルゴリズムの実行のために仮想プロセッサの\n特性を考慮する必要があるという課題（当初明細書等【０００７】）や，プログラマ\nがスレッドに対するスケジューラの挙動を明示する際に，コンピュータシステムの\nトポロジーの知識が必要になり，また，ソフトウェア層との競合が生じるおそれの\nある配置作業を行わなければならないという課題（当初明細書等【００１０】）に着\n目し，その解決のために相違点３に係る構成，すなわち，「実行する命令スレッドそ\nれぞれをタイプ（Ｓ，Ｃ）に応じて仮想プロセッサに方向付ける」という構成を採\n用している。このような課題は，甲１～５のいずれにも記載されていない。\n当業者は，このような仮想プロセッサへ命令スレッドを割り当てる際の課題につ\nいての認識がなければ，甲１発明においてスレッドをそのタイプに応じて仮想プロ\nセッサに割り当てるという構成を採用することには動機付けられない。\nまた，甲１発明において，実行する命令スレッドをタイプに応じた特定の物理サ\nブシステムに割り当てることは，通信コストの問題を解消するという甲１発明の技\n術課題を解決するために必要不可欠な構成である。この構成に代えて，スレッドを\nそのタイプに応じて仮想プロセッサに割り当てる構成を採用したのでは，甲１発明\nの課題が解決できなくなるため，このような改変をすることはできない。\nｃ  甲２に記載された技術を甲１発明に適用することが可能であるとし\nても容易に想到し得ないこと\n甲２に記載された技術事項は，模擬対象の模擬処理を，模擬イベント交換頻度及\nび模擬データ転送量に応じて，論理プロセッサに割り付けることである。命令スレ\nッドを論理プロセッサに割り付けることは，甲２には記載されていない。\n甲２の模擬処理がスレッド単位で実行されるとしても，甲２には，その模擬処理\nを実行するスレッドを論理プロセッサに割り当てることは記載も示唆もされていな\nい。むしろ，甲２の【００１７】，【００３３】，【００３５】，【００３７】，【００３\n９】，【００４０】，及び【００５０】には，模擬対象の組合せを同一の論理プロセッ\nサに割り当てることが記載されているのであって，甲２に記載された技術では，論\n理プロセッサへの割当ては，組み合わされた模擬対象の模擬処理を単位として行わ\nれている。\nそうすると，仮に甲２に記載された技術を甲１発明に適用することが可能である\nとしても，組み合わされた模擬対象の模擬処理を単位として論理プロセッサへの割\n当てがなされるにすぎず，その模擬処理に含まれるスレッドをそのタイプに応じて\n仮想プロセッサに割り付けることは想到し得ない。\nまた，甲２には，模擬イベント交換頻度及び模擬データ転送量に応じた論理プロ\nセッサへの割当ては記載されているが，これを一般化した，処理の種類に応じたプ\nロセッサへの割当てについても記載も示唆もされていない。\nｄ  甲１発明においてＳＭＴ技術を採用することができないとしても相\n違点３に係る構成をなるように変更する動機付けがないこと\n甲１発明においてＳＭＴ技術を採用することができたとしても，甲１発明におけ\nる「複数の物理サブシステム」に備えられた「マイクロプロセッサ」の各々におい\nて複数のスレッドが並列に実行されるだけであり，甲１発明の「同一タイプのスレ\nッドが，リソースの共通セットに割り当てられる」という構成を相違点３に係る構\n成となるように変更する動機付けは存在しない。\nｅ  甲３には相違点３に係る構成は開示されていないこと\n甲３には，「リアルタイムビデオアプリケーションにおいて，ビデオを取り込む一\nつのスレッド，ビットストリームを符号化する一つのスレッド，およびビットスト\nリームを送り出す他のスレッドが存在する」ことは記載されているが，これらのス\nレッドがどのように仮想プロセッサに割り当てられるかについては全く開示がない。\n図４Ａを参照すると，二つのスレッドが並列に処理されていることは理解できるが，\nこの二つのスレッドがどのようにして仮想プロセッサに割り当てられているかは不\n明である。\n甲３は，図６を参照しつつ【００５４】～【００５９】において，ビデオの復号\n化プロセスを説明しているが，この説明においてもスレッドをどのように仮想プロ\nセッサに割り当てるかは一切説明されていない。\nしたがって，甲３には，実行する命令スレッドをそのタイプに応じて仮想プロセ\nッサに方向付けるという相違点３に係る構成は開示されていない。\nイ  甲１発明に甲２に記載された技術を適用して相違点１に係る発明特定事項\nを採用することは容易になし得たことではないこと\n(ｱ)  前記ア(ｱ)のとおり，甲２には，模擬イベント交換頻度及び模擬デー\nタ転送量に応じた論理プロセッサへの割当ては記載されているが，これを一般化し\nた，処理の種類に応じたプロセッサへの割当てについては，記載も示唆もされてい\nない。\n(ｲ)  甲１発明と甲２に記載された技術とでは，技術分野が大きく異なる。\n甲１発明と甲２に記載された技術とでは，リソースへの割当てが行われる処理の\n単位が異なるだけでなく，甲 1 発明においては物理的なリソースへの割当てがされ\nるのに対して，甲２の技術では論理プロセッサという論理的なリソースへの割当て\nがされる点も異なる。\n(ｳ)  前記ア(ｲ)ｂ(a)のとおり，甲１発明の課題と甲２に記載された技術\nに関する課題とは異なる。\n(ｴ)  したがって，甲２に記載された技術事項を甲１発明に適用する動機\n付けが存在しない。\n２  進歩性に関する判断の誤り\n仮に本件補正が却下されたとしても，本件補正発明６と甲１発明の相違点ｃは，相\n違点３と，相違点ａは，相違点１と実質的に同じであるため，前記の相違点 1 及び３\nに関する主張は，すべて相違点ｃ及びａにも当てはまり，甲１発明において，相違点\nａ及びｃに係る構成を採用することは当業者にとって容易ではなかった。\nしたがって，本願補正発明６は，進歩性を有する。\n第４  被告の主張\n１  取消事由１について\n(1)  新規事項追加禁止要件違反について\nア  次のとおり，請求項６～８において，「タイプ（Ｓ，Ｃ）」は，スレッドの\nタイプを識別する情報として用いられている一方，当初明細書等では，仮想プロセッ\nサのタイプを識別する情報（パラメータＣ及びＳ）として用いられており，一致しな\nいから，補正後の請求項６～８は，当初明細書等に記載されたものではない。\n当初明細書等の【００４６】の記載から，本願明細書の発明の詳細な説明におい\nて，「Ｃ」及び「Ｓ」とは，仮想プロセッサのタイプを識別するためのパラメータ「Ｃ」\n及び「Ｓ」であることが読み取れる。\n当初明細書等の【００３９】は，命令スレッドのタイプとして，「『計算』と呼ぶ\n命令スレッドの第１のタイプ」および「『サービス』と呼ぶプロセスの第２のタイプ」\n（ここで，「プロセス」は「命令スレッド」の誤記であると推察される。）を例示し\nており，「タイプ（Ｓ，Ｃ）」との表記を，命令スレッドのタイプとして用いていな\nい。\n当初明細書等の【００４７】には，「仮想プロセッサ２４Ｃ，２４Ｓ，２６Ｃおよ\nび２６Ｓ」という記載があり，ここでも，「Ｃ」又は「Ｓ」は，仮想プロセッサのタ\nイプを示している。さらに，同段落の「仮想プロセッサ２４Ｃまたは２６Ｃには計\n算タイプの命令スレッドしか方向付けできず，仮想プロセッサ２４Ｓまたは２６Ｓ\nにはサービスタイプの命令スレッドしか方向付けできない。」という記載は，仮想プ\nロセッサのタイプとして「Ｃ」又は「Ｓ」を用いており，命令スレッドのタイプと\nしては，「計算タイプ」又は「サービスタイプ」を用いており，両者は明確に使い分\nけられている。\n当初明細書等の【図１】の符号「Ｃ」及び「Ｓ」は，プロセッサを計算タイプ又\nはサービスタイプに関連付けるためのパラメータＣ及びＳであり，スレッドのタイ\nプそのものを示す符号ではない。\nイ  一般に，参照符号は，明細書や図面等に開示された技術的構成との対応\n関係を例示するものであり，請求項に記載された発明特定事項を技術的に限定する\nものではない。\n特許法施行規則２４条の４は「願書に添付すべき特許請求の範囲は，様式第二十\n九の二により作成しなければならない。」と規定しており，特許法施行規則におい\nて，様式第２９の２（第２４条の４関係）として，特許請求の範囲の様式が規定され\nている。特許法施行規則様式２９の２の［備考］１４のロに規定された「請求項の記\n載の内容を理解するため必要があるときは，当該願書に添付した図面において使用\nした符号を括弧をして用い」た符号が特許請求の範囲の記載に付加されることによ\nって，請求項記載の発明が具体的構成に限定されるものではない（乙１）。\n請求項６の「少なくとも１つの中央処理装置（２４，２６）」という記載は，発明\n特定事項としては「少なくとも１つの中央処理装置」としつつも，「中央処理装置（２\n４，２６）」と複数の中央処理装置を例示しており，一般的な意味の参照符号である\nといえる。そして，請求項６の「複数の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，\n２６Ｓ）」という記載も，発明特定事項としては「複数の仮想プロセッサ」としつつ\nも，「仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）」と４つの仮想プロセッ\nサを例示しており，一般的な意味の参照符号であるといえる。\n括弧書きされている（Ｓ，Ｃ）も参照符号であるとすると，「タイプ（Ｓ，Ｃ）」\nは，発明特定事項としては「タイプ」であって，「（Ｓ，Ｃ）」は単なる例示にすぎな\nいものとなる。\n(2)  目的要件違反について\nア  前記(1)のとおり，Ｓ又はＣは，仮想プロセッサのタイプを表す情報であ\nるから，「タイプ」を「タイプ（Ｓ，Ｃ）」と変更する補正は，本願の明細書等の誤\nった解釈に基づいて誤記を導入するものであって，特許請求の範囲を減縮するもの\nとはいえない。\n命令スレッドのタイプを特定するのであれば，「タイプ（Ｓ，Ｃ）」ではなく，「タ\nイプ（計算タイプ，サービスタイプ）」とすべきであった。\nイ  本件補正後の請求項６における「複数の所定のタイプ」という用語は，\n「命令スレッド」の「タイプ」を意味するものとして明確であり，「複数の所定のタ\nイプ」に付加された「（Ｓ，Ｃ）」も，本願の願書に添付した図面において使用した\n符号を括弧をして用いたものとして解釈し得る。\n「命令スレッド」の「タイプ」として，例えば，データの入出力等を行う「タイ\nプ」の「命令スレッド」であるとか，浮動小数点演算を行う「タイプ」の「命令ス\nレッド」であるとか，制御フローを担当する「タイプ」の「命令スレッド」などが\nさまざまな「タイプ」の「命令スレッド」が含まれ得ることは，当事者にとって自\n明である。\n本願発明のマルチスレッディングコンピュータシステムの技術分野において，「命\n令スレッド」の「タイプ」として，「Ｓ」及び「Ｃ」以外のタイプはおよそ用いられ\nるものでないことが当業者の一般常識になっているなどの特段の事情があるとはい\nえないから，明細書の発明の詳細な説明で技術的に裏付けられているのが「Ｓ」及\nび「Ｃ」のタイプを使用するものだけであるとか，実施例が「Ｓ」及び「Ｃ」のタ\nイプを使用するものだけであることのみから，特許請求の範囲に記載された「複数\nの所定のタイプ」を「少なくとも『Ｓ』及び『Ｃ』のタイプを含むもの」と限定し\nて解することはできないというべきである。\nウ  仮に，「複数の所定のタイプ（Ｓ，Ｃ）」という表記において，「（Ｓ，Ｃ）」\nが参照符号であり，命令スレッドのタイプ例示に過ぎず，命令スレッドのタイプを\n技術的に限定するものでなければ，「（Ｓ，Ｃ）」という記載を除いて発明特定事項を\n把握可能であり，特許請求の範囲の限定的減縮に該当する余地はあるといえる。\nしかし，上記アのとおり，「タイプ」を「タイプ（Ｓ，Ｃ）」と変更する補正は，\n本願明細書の誤った解釈に基づいて誤記を導入するものであるから，「（Ｓ，Ｃ）」は\n命令スレッドのタイプの例示とはいえない。\n(3)  独立特許要件違反について\nア  次のとおり，相違点３に係る構成は，甲 1 発明と甲２に記載された技術\n又は甲３～５により認定可能な周知技術であるＳＭＴ技術を適用することにより当\n業者が容易に想到し得たものである。\n(ｱ)  命令を複数のスレッドに分割して実行するマルチスレッディング（マ\nルチスレッド・コンピューティング）の技術分野において，仮想プロセッサ（論理\nプロセッサ）は，各々アーキテクチャステート（アーキテクチャ状態）を備えるこ\nとにより，一つの物理プロセッサに複数の仮想プロセッサ（論理プロセッサ）が認\n識されており，キャッシュや実行ユニット，分岐予測器，制御論理等の物理プロセ\nッサが有するリソース群を共有しており，複数のスレッドが複数の仮想プロセッサ\nに割り当てられて同時に実行されるＳＭＴ（同時マルチスレッディング，マルチス\nレッド同時処理）技術は，本願優先日前に周知であったといえる（甲３～５）。\n(ｲ)  引用発明と上記周知技術（ＳＭＴ技術）は，命令を複数のスレッドに\n分割して実行するマルチスレッディング（マルチスレッド・コンピューティング）\nの技術分野に属しており，当該技術分野では，スレッドを実行する主体として仮想\nプロセッサに割り当てること，及び，各仮想プロセッサは，キャッシュや実行ユニ\nット，分岐予測器，制御論理等の物理プロセッサが有するリソース群を共有してい\nることは，本願優先日前に周知の技術であったといえる。\n(ｳ)  上記周知技術（ＳＭＴ技術）の「仮想プロセッサ」が共有する「物理\nプロセッサが有するリソース群」は，引用発明の「リソースの共通セット」に対応\nする。\n(ｴ)  したがって，引用発明において，実行する命令スレッドをタイプに応\nじて割り当てる（方向付ける）際に，リソースの共通セットに割り当てる構成に代\nえて，上記周知技術（ＳＭＴ技術）を適用して，命令スレッドを物理プロセッサが\n有するリソース群からなる仮想プロセッサに割り当てる（方向付ける）よう構成す\nることは，当業者が容易に想到し得たものである。\nイ  仮に，相違点３に係る「実行する命令スレッドそれぞれをタイプ（Ｓ，\nＣ）に応じて資源に方向付ける」という構成を「実行する命令スレッドそれぞれを\n（少なくとも計算タイプおよびサービスタイプなどの）タイプに応じて資源に方向\n付ける」と限定するものと解釈した場合であっても，相違点３に係る構成は，甲 1\n発明と甲３に記載された技術事項から，当業者が容易に想到し得たものである。\n(ｱ)  甲３（【００３９】～【００４１】，【図４Ａ】）には，「リアルタイムビ\nデオアプリケーション」において，三つのスレッド（「ビデオを取り込む１つのスレ\nッド，ビットストリームを符号化する１つのスレッド，およびビットストリームを\n送り出す他のスレッド」）が例示されており，同時マルチスレッディングの一例とさ\nれている。そして，【図４Ａ】のアクディビティ４０５，アクディビティ４１０など\nを有するスレッド４０１は，「ビデオを取り込む１つのスレッド」であり，【図４Ａ】\nのアクディビティ４１５，アクディビティ４２０などを有するスレッド４０２は，\n「ビットストリームを符号化する１つのスレッド」である。これらのスレッド４０\n１とスレッド４０２は，異なる２つの論理プロセッサに割り当てられて実行される\nことにより，オーバーラップ期間の間，同時に実行されている。\n(ｲ)  ここで，「ビットストリームを符号化する１つのスレッド」は，本願明\n細書の「計算タイプの命令スレッド」に相当し，「ビデオを取り込む１つのスレッド」\nは本願明細書の「サービスタイプの命令スレッド」に相当するといえる。\n１つの物理プロセッサ内に認識される複数の仮想プロセッサは，バッファやキャ\nッシュ等のリソースを共有しており，「ビデオを取り込む１つのスレッド」を一つの\n仮想プロセッサに割り当て，「ビデオを取り込む１つのスレッド」がバッファ等に取\nり込んだビデオフレームデータを，「ビットストリームを符号化する１つのスレッ\nド」を別の仮想プロセッサに割り当て，当該別の仮想プロセッサでデコード処理を\n実行するように構成することは，サービスタイプの命令スレッドと計算タイプの命\n令スレッドを別々の仮想プロセッサに割り当て実行させていることにほかならない。\nウ  甲４には，マルチスレッディングを実行するシステム構成として，（Ａ）\n複数の物理プロセッサにスレッドを同時に実行させるマルチプロセッサ技術（図１\nＣの１５０）や，（Ｂ）単一の物理プロセッサによって認識される複数の仮想プロセ\nッサにスレッドを同時に実行させるマルチスレッド同時処理（ＳＭＴ）技術（図１\nＣの１０９）だけでなく，(Ｃ)複数の物理プロセッサ（コア）毎に複数の仮想プロ\nセッサを備えたコンピュータシステムにスレッドを同時に実行させるマルチスレッ\nド同時処理（ＳＭＴ）技術（ＳＭＴコアのマルチコア（図１Ｃの１７０））などが例\n示されている（下図においてＡＳ１およびＡＳｎが仮想プロセッサに，１０３が物理\nプロセッサに対応）。\n【図１Ｃ】\n（Ｂ）単一の物理プロセ\nッサが複数の仮想プロセ\nッサを備えるシステム例\n（Ａ）複数の物理プロセ\nッサにスレッドを同時に\n実行させるマルチプロセ\nッサシステム例\n甲４には，マルチプロセッサ構成であって，かつ，ＳＭＴ技術でもある（Ｃ）の\nシステム構成も開示されており，上記（Ｃ）のシステム構成も，マルチプロセッサ\n構成である以上，スレッド処理の効率性が複数の物理プロセッサの物理的な関係に\n影響されるといえる。\n本願の明細書及び図面に記載された実施例においても，上記（Ｃ）のマルチプロ\nセッサ構成であって，かつ，ＳＭＴ技術でもあるシステム構成が実施例として記載\nされており，本願の特許請求の範囲の請求項６においても，「コンピュータシステム\n（１８）の少なくとも１つの中央処理装置（２４，２６）に属する複数の仮想プロ\nセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）上で複数の命令スレッドを組み合わせ\nて実行するのを管理する方法であって」と記載されており，上記（Ｂ）及び（Ｃ）\nのシステム構成を包含するものとなっている。\n（Ｃ）複数の物理プロ\nセッサ毎に複数の仮\n想プロセッサを備え\nたシステム例\n原告の主張は，本願の特許請求の範囲の請求項６に包含され，本願の実施例でも\nある上記（Ｃ）のシステム構成を考慮したものとなっていない。\n上記（Ａ）のマルチプロセッサ構成システムを，上記（Ｃ）の複数の物理プロセ\nッサ（コア）毎に複数の仮想プロセッサを備えたＳＭＴシステム構成にすることに\nは，電力消費量増加につながるクロック数の上昇を抑えながら，並列実行可能なス\nレッド数を増加させて，性能の向上を計るという動機付けが存在しているといえる。\nエ  乙２は，ＳＭＴ技術の周知技術を示す甲３及び甲４の出願人でもある主\n要なプロセッサ・メーカーであるインテル・コーポレーションに所属する著者が，\nマルチスレッディング技術に対応したマルチコアＣＰＵ（プロセッサ）の技術開発\n動向を記載したものであり，物理プロセッサ（コア）の数を（２から４に）増加さ\nせることにより性能の向上を計ってきたデスクトップＰＣ用ＣＰＵ（Core2  Duo か\nら Core2  Quad）が２００８年１１月発表の Core  i7 では，物理プロセッサ（コア）\nの数は増加させず各物理プロセッサ（コア）に２つずつの論理ステートを備えるこ\nとで２つずつの仮想プロセッサを設ける構成を採用したことが見て取れる。\n本願の図２（一部抜粋）\n複数の物理プロセッサ（２４，２６）がそ\nれぞれ，複数の仮想プロセッサ（２４Ｃ，\n２４Ｓ，２６Ｃ，２６Ｓ）を備えるシステ\nム構成（Ｃ）となっている。\n上記インテルＣＰＵの技術開発動向の経緯に照らしても，前記(ｲ)の（Ａ）のマル\nチプロセッサ構成システムに対応する Core2  Quad プロセッサ（最大４スレッドを\n同時実行可能）を，同（Ｃ）の複数の物理プロセッサ（コア）毎に複数の仮想プロ\nセッサを備えたＳＭＴシステム構成に対応し，より多くのスレッド（最大８スレッ\nドを同時実行可能）を並列実行可能な次世代プロセッサである Core i7 に置換する\nことには，同時実行可能スレッド数を増加させるという動機付けが存在していると\nいえる。\nオ  甲１発明は，個別の物理サブシステム内においてスレッドが使用するリ\nソースの局所化を通じて，効率的なリソース割り付けが，よりトランスペアレント\nな態様で実装され，著しいカスタム化を伴わないことを解決すべき課題としている。\n甲１発明が課題を解決するための技術思想は，次のようなものである。\nスレッドに関連付けされる特定の「型」を基礎として，それらのスレッドが動的\nにコンピュータ・リソースに割り当てられるように，スレッド型に，コンピュータ\n内の同一物理サブシステム内に常駐するリソースが割り付けられ，その結果，それ\nらの特定スレッド型の，新しく作り出されたスレッド及び／又は再アクティブ化さ\nれたスレッドが，それぞれのスレッド型に割り付けられたリソースに動的に割り当\nてられる。\nすなわち，甲１発明においては，スレッドに関連付けされる特定の「型」に着目\nし，特定スレッド型には，同一のリソース（セット）を割り付けること（局所化）\nにより，キャッシュなどのリソースに格納されたデータを特定スレッド型が繰り返\nし利用する際に，キャッシュに格納済みのデータを再利用可能として，他の物理サ\nブシステムのメモリ等からキャッシュ等へのデータ通信等のコストを削減している\nといえる。\nマルチスレッド処理においては，プロセッサ単位（物理プロセッサ又は仮想プロ\nセッサ）で割付けが行われ，甲１発明において，物理サブシステム内のプロセッサ\nが物理プロセッサのみから構成されるシステム構成（Ａ）であろうと，仮想プロセ\nッサを含んだシステム構成（Ｃ）であろうと，スレッドに関連付けされる特定の「型」\nに着目し，特定スレッド型には，同一のリソース（セット）を割り付けること（局\n所化）により，キャッシュなどのリソースに格納されたデータを特定スレッド型が\n繰り返し利用する際に，キャッシュに格納済みのデータを再利用可能として，他の\n物理サブシステムのメモリ等からキャッシュ等へのデータ通信等のコストを削減す\nることが可能であるといえる。\n２  取消事由２について\n相違点ｃは，相違点３と実質的に同じであるため，本願補正発明の相違点３の容\n易想到性判断で述べた議論は，すべて相違点ｃにも当てはまる。\nしたがって，甲１発明に甲３～５に示された周知技術を適用することで，当業者\nが本願発明を容易に想到し得たものである。\n相違点ａについての原告の主張は，争う。\n第５  当裁判所の判断\n１  本願発明及び本願補正発明について\n(1)  本願発明は，前記第２の２(1)，本願補正発明は，同(2)のとおりであると\nころ，本願発明に係る特許出願の出願時の特許請求の範囲は，次のとおりである（甲\n６）。\n【請求項１】\n命令スレッドの実行を管理するコンピュータシステム（１８）であって，同じ中\n央処理装置に属する複数の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）上\nで複数の命令スレッドを組み合わせて実行する少なくとも１つの中央処理装置（２\n４，２６）と，前記仮想プロセッサに命令スレッドの実行を分散する少なくとも１\nつのマネージャ（３８）とを有するコンピュータシステムにおいて，実行する前記\n命令スレッドを複数の所定のタイプに応じて分類する分類手段（３６）を有するこ\nとと，前記命令スレッドの実行を分散する前記マネージャ（３８）を，実行する前\n記命令スレッドをそれぞれタイプに応じて前記仮想プロセッサ（２４Ｃ，２４Ｓ，\n２６Ｃ，２６Ｓ）に方向付けるように設計することを特徴とするコンピュータシス\nテム。\n【請求項２】\n前記同じ中央処理装置（２４，２６）の各仮想プロセッサ（２４Ｃ，２４Ｓ，２\n６Ｃ，２６Ｓ）を前記所定のタイプの１つに関連付ける手段（Ｃ，Ｓ）を備える，\n請求項１に記載のコンピュータシステムにおいて，前記命令スレッドの実行を分散\nする前記マネージャ（３８）を，実行する前記命令スレッドをそれぞれ該スレッド\nと同じタイプの仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）に方向付ける\nように設計するコンピュータシステム。\n【請求項３】\n前記中央処理装置（２４，２６）は２つの仮想プロセッサ（２４Ｃ，２４Ｓ，２\n６Ｃ，２６Ｓ）を有し，１つは命令スレッドの第１のタイプ（Ｃ）に関連付け，も\nう１つは命令スレッドの第２のタイプ（Ｓ）に関連付け，実行するコンピュータプ\nロセスはそれぞれ前記第１のタイプか前記第２のタイプである，請求項１または２\nに記載のコンピュータシステム。\n【請求項４】\n－  「計算」と呼ぶ命令スレッドの前記第１のタイプ（Ｃ）は，結果を供給する\nように前記コンピュータシステムが実行するようになっているプログラムに対して，\n該プログラムの実行に参加して結果を直接生成する命令スレッドに関係し，\n－  「サービス」と呼ぶプロセスの前記第２のタイプ（Ｓ）は，該プログラムの\n実行に参加して「計算」タイプの前記命令スレッドに付属サービスを供給する命令\nスレッドに関係する，\n請求項３に記載のコンピュータシステム。\n【請求項５】\n少なくとも２つの中央処理装置（２４，２６）を有し，それぞれが複数の仮想プ\nロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）を備え，仮想プロセッサ上で複数の\n命令スレッドを組み合わせて実行する，請求項１から４のいずれか一項に記載のコ\nンピュータシステムにおいて，前記命令スレッドの実行を分散する前記マネージャ\n（３８）を，中央処理装置にある仮想プロセッサとは独立して，実行する命令スレ\nッドそれぞれに対して中央処理装置を選択するように設計するコンピュータシステ\nム。\n【請求項６】\nコンピュータシステム（１８）の同じ中央処理装置（２４，２６）に属する複数\nの仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）上で複数の命令スレッドを\n組み合わせて実行するのを管理する方法であって，前記仮想プロセッサに前記命令\nスレッドの実行を分散するステップ（１０４）を含む方法において，複数の所定の\nタイプに応じて実行する前記命令スレッドを分類する予備ステップ（１００）を含\nむことと，前記命令スレッドの実行を分散するステップ（１０４）で，実行する命\n令スレッドそれぞれをタイプに応じて仮想プロセッサに方向付けることとを特徴と\nする方法。\n【請求項７】\n前記分類ステップ（１００）で，命令スレッドを管理するアプリケーションプロ\nグラミングインターフェースの関数でタイプを識別するパラメータに基づいて，前\n記命令スレッドをそれぞれタイプで分類する，請求項６に記載の方法。\n【請求項８】\n前記分類ステップ（１００）で，命令スレッドの実行を含むプログラムの実行コ\nマンドでタイプを識別するパラメータに基づいて，前記命令スレッドをそれぞれこ\nのタイプで分類する，請求項６に記載の方法。\n【請求項９】\nスーパーコンピュータタイプのサーバクラスタ（１０）の複数の処理ノード上で\n複数の命令スレッドを実行することの管理に対する請求項６から８のいずれか一項\nに記載の方法の適用であって，各処理ノード（１８）が，同じ中央処理装置に属す\nる複数の仮想プロセッサ（２４Ｃ，２４Ｓ，２６Ｃ，２６Ｓ）上で複数の命令スレ\nッドを組み合わせて実行する少なくとも１つの中央処理装置（２４，２６）を有す\nる適用。\n【請求項１０】\n通信ネットワークからダウンロード可能なコンピュータプログラムおよび／また\nはコンピュータで再生可能な媒体に記録したコンピュータプログラムおよび／また\nはプロセッサのなかでもとりわけコンピュータのオペレーティングシステム（３４）\nで実行可能なコンピュータプログラムであって，前記プログラムをコンピュータ上\nで実行した場合に，請求項６から８のいずれか一項に記載の複数の命令スレッドを\n組み合わせた実行の管理方法のステップを実行するプログラムコードの命令を含む\nことを特徴とするコンピュータプログラム。\n(2)  本願の出願当初の明細書及び図面は，平成２６年３月３１日の手続補正\n及び本件補正によって，補正されていない（甲６，９，１２）。\n本願の出願当初の明細書及び図面（当初明細書等。甲６）には，次の記載がある。\n「【技術分野】\n【０００１】\n本発明は，命令スレッドの実行を管理するコンピュータシステムであって，同じ\n中央処理装置に属する複数の仮想プロセッサ上で複数の命令スレッドを組み合わせ\nて実行する少なくとも１つの中央処理装置と，命令スレッドの実行を仮想プロセッ\nサに分散する少なくとも１つのマネージャとを有するコンピュータシステムに関す\nる。本発明はまた，その方法，サーバクラスタへの本方法の適用，および本方法を\n実行するための命令を含むコンピュータプログラムにも係る。\n【背景技術】\n【０００２】\n以下の説明文において，「コンピュータシステム」とは，コンピュータプログラム\nの命令を実行することができ，そのために少なくとも１つの中央処理装置でプロセ\nッサの計算コアまたはＣＰＵ（英語の「Ｃｅｎｔｒａｌ  Ｐｒｏｃｅｓｓｉｎｇ  Ｕ\nｎｉｔ」）とも呼ばれるものを有する少なくとも１つのプロセッサを備えるあらゆ\nるシステムを指す。プロセッサには，単一の計算コアのみ，または複数の計算コア\nを備えることができることがわかるであろう。本発明によるコンピュータシステム\nは，複雑性が増す順に，１つまたは複数の計算コアを有するマイクロプロセッサ，\n１つまたは複数のマイクロプロセッサを有する単純なマイクロコンピュータ，また\nは複数のマイクロコンピュータを，データ転送ネットワークを介して相互接続した\nさらに複雑なシステムで構成することができる。本発明を実装することができるコ\nンピュータシステムの複雑性は，原則として目的とする適用例によって異なる。\n【０００３】\n「コンピュータプロセス」とは，より一般には「プロセス」と呼ばれ，プロセッ\nサの中央処理装置（すなわち計算コア）によって，場合よってはその他の資源を用\nいて，特別に割り当てたメモリ空間で実行する命令の集合を指す。コンピュータプ\nログラム自体は命令を構造化した集合で構成されるため，コンピュータプロセスを\nコンピュータプログラムまたはコンピュータプログラムの一部分を実行するインス\nタンスと考えることができる。同じ１つのプログラムを（同じ１つのプロセッサま\nたはさまざまなプロセッサ上で平行かつ連続的に）複数回実行することができるた\nめ，このプログラムは複数のコンピュータプロセスを生成することができる。\n【０００４】\nコンピュータプロセスは，必ずしも単一の線形的な命令系列を備えている必要は\nなく，非同期に複数の系列を要求することができる。そのため，より一般に「スレ\nッド」と呼ばれる「命令スレッド」とは，コンピュータプロセスの実行に参加する\nこのような線形的な命令系列を指す。その結果，命令実行の観点から，コンピュー\nタプロセスとは常に命令スレッドまたは命令スレッドの集合であると考えてよい。\n【０００５】\n「同じ中央処理装置に属する複数の仮想プロセッサ上で複数の命令スレッドを組\nみ合わせて実行する中央処理装置」とは，命令スレッド実行の並列処理を，中央処\n理装置の内部資源（とりわけ実行の「パイプライン」，レジスタおよびキャッシュメ\nモリ）のいくつかを共有することによって増進させるメカニズムを備える中央処理\n装置のことである。このような中央処理装置には，資源を同時に共有することがで\nきる命令スレッドと同じだけ仮想プロセッサがある。ユーザから見れば，単一の中\n央処理装置ではなく，複数，さらに正確にはこの中央処理装置にある仮想プロセッ\nサの数だけ中央処理装置があるかのように見える。\n【０００６】\nこのメカニズムは一般に，「ハイパースレッディング」または「同時マルチスレッ\nディング」と呼ばれる。このメカニズムを実装している中央処理装置の目的は，命\n令スレッドの共有メモリ空間からくるデータを待つことで生じる非アクティブな時\n間を活用することである。具体的には，命令スレッドがこのような待機状態にある\nとき，この命令スレッドを実行する中央処理装置は自動的に別の命令スレッドの実\n行に進むため，複数の異なる仮想プロセッサがあるかのような印象を与える。\n【０００７】\nオペレーティングシステムＬｉｎｕｘ（登録商標）は，現在このようなメカニズ\nムをサポートしており，ハイパースレッディングメカニズムを搭載したマイクロプ\nロセッサ上でこのオペレーティングシステムを実行すると，このメカニズムがアク\nティブのときにはこのマイクロプロセッサに属するＮ個の仮想プロセッサがあるよ\nうにユーザには見える。またこのオペレーティングシステムは，有利なように命令\nスレッドを実行する際にロードバランシングアルゴリズムも実行するため，この命\n令スレッドには仮想プロセッサの特性を考慮する必要がある。特に，このオペレー\nティングシステムは，同じ中央処理装置の別の仮想プロセッサに命令スレッドを切\nり替えて仮想プロセッサをアンロードすることはない。この制約により，ロードバ\nランシングアルゴリズムが非常に重くなる。\n【０００８】\n具体的には，この制約は，例えば携帯電話のアプリケーションに内蔵するマイク\nロプロセッサなどに用いるリアルタイム計算およびオンボード処理のアプリケーシ\nョンでとりわけ問題が起こる。\n【０００９】\n具体的な第２の例によれば，サーバクラスタに組織した複数の処理ノードを有す\nるＨＰＣ（英語の「Ｈｉｇｈ  Ｐｅｒｆｏｒｍａｎｃｅ  Ｃｏｍｐｕｔｉｎｇ」）タ\nイプのスーパーコンピュータの環境では，ユーザは中央処理装置上でのアプリケー\nションの配置を細かくコントロールすることを望み，例えばそれぞれの通信メカニ\nズムに有利に働く共有キャッシュを利用することもある。\n【００１０】\nこれらの命令スレッドを管理するアプリケーションプログラミングインターフェ\nースのシステムを呼び出すことによって，命令スレッドを細かく配置できる可能性\nがあり，それによってユーザ（すなわちプログラマ）は，命令スレッドに対するオ\nペレーティングシステムタスクのスケジューラの挙動を明示することができるが，\nこれには関連するアプリケーションに対して，コンピュータシステムのトポロジー\nの知識およびソフトウェア層との競合が生じるおそれのある配置作業が必要になる。\n【００１１】\n仮想プロセッサの特性を考慮することは，実際には複雑である。それによって実\n際に問題が起こり，ＨＰＣスーパーコンピュータのアプリケーションで自動的な管\n理ができなくなることさえある。\n【発明の概要】\n【発明が解決しようとする課題】\n【００１２】\nそのため，前述の問題および制約を少なくとも部分的に緩和することができる，\n命令スレッドを組み合わせた実行の管理システムを備えることが望まれる。\n【課題を解決するための手段】\n【００１３】\nよって本発明は，命令スレッドの実行を管理するコンピュータシステムであって，\n同じ中央処理装置に属する複数の仮想プロセッサ上で複数の命令スレッドを組み合\nわせて実行する少なくとも１つの中央処理装置と，命令スレッドの実行を仮想プロ\nセッサに分散する少なくとも１つのマネージャとを有するコンピュータシステムに\nおいて，実行する命令スレッドを複数の所定のタイプに応じて分類する分類手段を\n有することと，命令スレッドの実行を分散するマネージャを，実行する命令スレッ\nドをそれぞれタイプに応じて仮想プロセッサに方向付けるように設計することを特\n徴とするコンピュータシステムを目的とする。\n【００１４】\nしたがって，命令スレッドをタイプごとに分類し，これをタイプに応じて命令ス\nレッドの実行を分散するマネージャを用いて体系的にそれぞれの仮想プロセッサに\n方向付けることによって，計算資源を保護する。その結果，中央処理装置を最適な\n形で使用することになり，関連するアプリケーションの実行が加速する。さらに，\nハイパースレッディングメカニズムによりユーザ（プログラマ）が原因となること\nもあるエラーのリスクが抑えられる。\n【００１５】\n選択的に，本発明によるコンピュータシステムはさらに，この同じ中央処理装置\nの各仮想プロセッサをこれらの所定のタイプの１つに関連付ける手段を備えること\nができ，命令スレッドの実行を分散するマネージャを，実行する命令スレッドをそ\nれぞれこのスレッドと同じタイプの仮想プロセッサに方向付けるように設計するこ\nとができる。\n【００１６】\nしたがって，命令スレッドを分散するマネージャは，場合によっては命令スレッ\nドに対して中央処理装置を選択するのに関わるだけでよく，仮想プロセッサの正確\nな選択は命令スレッドのタイプによって自動的に決まる。その結果，ハイパースレ\nッディングメカニズムはユーザから隠すことができる。よって，ユーザがこのメカ\nニズムを理解していないためにエラーが生じるリスクは一切なくなる。さらに，命\n令スレッドは自動的に正しい仮想プロセッサに方向付けられるため，パフォーマン\nスは一層改善される。\n【００１７】\n同じく選択的に，中央処理装置は２つの仮想プロセッサを有し，１つは命令スレ\nッドの第１のタイプに関連付け，もう１つは命令スレッドの第２のタイプに関連付\nけ，実行するコンピュータプロセスはそれぞれ第１のタイプか第２のタイプとする。\n【００１８】\n同じく選択的に，\n－  「計算」と呼ぶ命令スレッドの第１のタイプは，結果を供給するようにコン\nピュータシステムが実行するようになっているプログラムに対して，このプログラ\nムの実行に参加して結果を直接生成する命令スレッドに関係し，\n－  「サービス」と呼ぶプロセスの第２のタイプは，このプログラムの実行に参\n加して「計算」タイプの命令スレッドに付属サービスを供給する命令スレッドに関\n係する。\n【００１９】\n同じく選択的に，本発明によるコンピュータシステムは，少なくとも２つの中央\n処理装置を備えることができ，それぞれがこの同じ中央処理装置に属する複数の仮\n想プロセッサ上で複数の命令スレッドを組み合わせて実行し，命令スレッドの実行\nを分散するマネージャを，中央処理装置が備える仮想プロセッサとは独立して，実\n行する命令スレッドそれぞれに対して中央処理装置を選択するように設計すること\nができる。\n【００２０】\n本発明はまた，コンピュータシステムの同じ中央処理装置に属する複数の仮想プ\nロセッサ上で複数の命令スレッドを組み合わせて実行するのを管理する方法であっ\nて，仮想プロセッサに命令スレッドの実行を分散するステップを含む方法において，\n複数の所定のタイプに応じて実行する命令スレッドを分類する予備ステップを含む\nことと，命令スレッドの実行を分散するステップで，実行する命令スレッドそれぞ\nれをタイプに応じて仮想プロセッサに方向付けることとを特徴とする方法も目的と\nする。\n【００２１】\n選択的に，分類ステップで，命令スレッドを管理するアプリケーションプログラ\nミングインターフェースの関数でタイプを識別するパラメータに基づいて，命令ス\nレッドをそれぞれタイプで分類する。\n【００２２】\n同じく選択的に，分類ステップで，命令スレッドの実行を含むプログラムの実行\nコマンドでタイプを識別するパラメータに基づいて，この命令スレッドをそれぞれ\nこのタイプで分類する。\n【００２３】\n本発明はまた，スーパーコンピュータタイプのサーバクラスタの複数の処理ノー\nド上で複数の命令スレッドを実行することの管理に対する上記のように定義した方\n法の適用であって，各処理ノードが，同じ中央処理装置に属する複数の仮想プロセ\nッサ上で複数の命令スレッドを組み合わせて実行する少なくとも１つの中央処理装\n置を有する適用も目的とする。\n【００２４】\n最後に，本発明はまた，通信ネットワークからダウンロード可能なコンピュータ\nプログラムおよび／またはコンピュータで再生可能な媒体に記録したコンピュータ\nプログラムおよび／またはプロセッサのなかでもとりわけコンピュータのオペレー\nティングシステムで実行可能なコンピュータプログラムであって，前記プログラム\nをコンピュータ上で実行した場合に，上記のように定義した複数の命令スレッドを\n組み合わせた実行の管理方法のステップを実行するプログラムコードの命令を含む\nことを特徴とするコンピュータプログラムも目的とする。\n【００２５】\n本発明は，添付の図を参照しながら例のみを目的として挙げた以下の説明文を読\nめばよりよく理解できるであろう。」\n「【発明を実施するための形態】\n【００２７】\n本発明はどのようなアプリケーションからも独立して，同じ中央処理装置に属す\nる複数の仮想プロセッサ上で複数の命令スレッドを組み合わせて実行する少なくと\nも１つの中央処理装置と，仮想プロセッサに命令スレッドの実行を分散する少なく\nとも１つのマネージャとを備えるあらゆるコンピュータシステムに実装することが\nでき，以下に一実施形態を詳細に説明する。\n【００２８】\n最も単純な事例では，本発明は，ハイパースレッディングメカニズムを搭載した\nマイクロプロセッサを備えれば実装することができる。リアルタイム計算および／\nまたはオンボードのアプリケーションが本発明から利益を引き出すことができる。\n【００２９】\nネットワーク接続したコンピューティングデバイスまたはＨＰＣスーパーコンピ\nュータの最も複雑なアプリケーションでは，少なくとも１つのマイクロプロセッサ\nを有する各装置が本発明を実装できることが有利である。\n【００３０】\n図１に示す実施形態はＨＰＣコンピュータの適用例であり，以下に本発明の一実\n施形態を詳細に説明する。実際にこれは本発明の特に重要な産業上の適用例である。\nただし，前述したとおり，本発明はこのようなＨＰＣコンピュータの設備に限定さ\nれるものではないことは明らかである。\n【００３１】\n図１に示すコンピューティングデバイス１２，１４，１６，１８の設備１０は，\n例えば帯域がきわめて広いデータ伝送ネットワーク２０を少なくとも１つ介して相\n互接続したサーバクラスタで組織したＨＰＣコンピュータを非常に簡略化した不完\n全な例である。この設備１０は，例えばとりわけ計算ノードを形成する符号１２，\n１４，１６および１８で示したコンピューティングデバイスと，サービスノード，\n管理ノードまたは格納ノードを形成するコンピューティングデバイス（図示せず）\nとを有する。計算ノード１２，１４，１６および１８の全体構造は同じであっても\nよいが，コンピューティングデバイス１８の構造のみを以下に詳述する。\n【００３２】\n例えばマイクロコンピュータタイプの計算サーバであるコンピューティングデバ\nイス１８は，\n－  第１の中央処理装置２４および第２の中央処理装置２６が接続する通信バス\nであって，コンピュータプログラム，さらに詳細には命令スレッドにより生じるコ\nンピュータプロセスを実行するための通信バス２２と，\n－  ＲＯＭ２８（英語の「Ｒｅａｄ  Ｏｎｌｙ  Ｍｅｍｏｒｙ」）タイプの読み出\nし専用メモリ，および処理データおよび／または起動プログラム（例えばＢＩＯＳ\nタイプのアプリケーション）を格納し，周辺機器を管理するためのＲＡＭ３０（英\n語の「Ｒａｎｄｏｍ  Ａｃｃｅｓｓ  Ｍｅｍｏｒｙ」）タイプの書き込み可能なメモ\nリと，\n－  少なくとも１つのハードディスク３２と\nを有する。\n【００３３】\nこのコンピューティングデバイス１８は，場合によってはさらに（この図には示\nしていないが）従来のように，以下の素子：スクリーン，キーボード，マウス，ネ\nットワーク２０との通信インターフェース，およびＣＤ－ＲＯＭまたはＤＶＤのリ\nーダ／レコーダなどの交換可能な媒体へのデータのリーダ／レコーダを１つまたは\n複数有する。\n【００３４】\nハードディスク３２は，コンピューティングデバイス１８の起動時にＢＩＯＳア\nプリケーションをロードしたＬｉｎｕｘシステムなどのオペレーティングシステム\n３４をファイルの形態で格納する。同じ中央処理装置の複数の仮想プロセッサ上で\n命令スレッドを組み合わせて実行するメカニズムが，このオペレーティングシステ\nムに対してアクティブになる。例えばこのメカニズムは，中央処理装置２４および\n２６にそれぞれ２つの仮想プロセッサがあるようなものである。つまり，仮想プロ\nセッサ２４Ｃおよび２４Ｓは第１の中央処理装置２４に，仮想プロセッサ２６Ｃお\nよび２６Ｓは第２の中央処理装置２６に対するものである。」\n「【００３７】\nより一般に，前述の構造は，コンピューティングデバイスのあらゆるタイプのネ\nットワークに適しているためＨＰＣタイプである必要はなく，この構造では各コン\nピューティングデバイスのオペレーティングシステムは，仮想プロセッサ上で命令\nスレッドを組み合わせて実行するメカニズムを利用する。\n【００３８】\nつまり，先ほど構造的に説明したようなコンピューティングデバイス１８は，本\n発明を実装することができる装置の非限定的な一例にすぎないことがわかるであろ\nう。コンピューティングデバイスの構想には多種多様なアーキテクチャがあり，同\nじ中央処理装置に属する複数の仮想プロセッサ上で複数の命令スレッドを組み合わ\nせて実行する中央処理装置を最低１つ備える装置はすべて適切である。\n【００３９】\n本発明の一実施形態によれば，コンピューティングデバイス１８は，複数の所定\nのタイプに応じて，また特に，\n－  「計算」と呼ぶ命令スレッドの第１のタイプは，結果を供給するようにコン\nピューティングデバイス１８が実行するようになっているプログラムに対して，こ\nのプログラムの実行に参加して結果を直接生成する命令スレッドに関係し，\n－  「サービス」と呼ぶプロセスの第２のタイプは，このプログラムの実行に参\n加して「計算」タイプの命令スレッドに付属サービスを供給する命令スレッドに関\n係する\nという２つのタイプの命令スレッドに応じて，実行する命令スレッドを分類する分\n類手段３６を有する。\n【００４０】\nサービスの命令スレッドは，例えば結果の保存，メモリの管理，出入力の管理，\nデータの通信，モニタリング，ファイルへのアクセスなどに係る。\n【００４１】\nアプリケーションに応じて，分類手段３６はさまざまな形態を取ることができる。\n【００４２】\n第１の適用例では，実行するプログラムが複数の命令スレッドの実行を要求し，\nそのうちのいくつかの命令スレッドが計算に参加し，残りの命令スレッドが付属サ\nービスに参加する。この場合，このプログラムは，命令スレッドを管理するアプリ\nケーションプログラミングインターフェースの関数である，例えばアプリケーショ\nンプログラミングインターフェースＰＯＳＩＸの関数ｓｃｈｅｄ＿ｓｅｔｓｃｈｅ\nｄｕｌｅｒ（）を，計算タイプ（ＨＴＣＡＬＣＵＬ）かサービスタイプ（ＨＴ＿Ｓ\nＥＲＶＩＣＥ）かを識別するパラメータに基づいて呼び出すように設計する。した\nがって，オペレーティングシステム３４によって実装する命令スレッドの分類手段\n３６は，このパラメータを自動的に認識して仮想プロセッサに方向付ける命令スレ\nッドのタイプを識別することからなる。\n【００４３】\n第２の適用例では，複数のプログラムを実行する必要があり，そのうちのいくつ\nかは計算プログラム，残りはサービスプログラムである。この場合，ユーザは，計\n算かサービスかのタイプをパラメータで識別するコマンドを用いてプログラムの実\n行を開始するようにする。例えばこれは，コマンドｈｔ＿ｓｃｈｅｄ－［ＣＡＬＣ\nＵＬまたはＳＥＲＶＩＣＥ］＜プログラム名＞である。このようにオペレーティン\nグシステム３４で実装した命令スレッドの分類手段３６は，このパラメータを自動\n的に認識してプログラムが要求する命令スレッドのタイプを識別することからなる。\n【００４４】\n第３の適用例では，並列計算プログラムに広く使用されるＭＰＩ（英語の「Ｍｅ\nｓｓａｇｅ  Ｐａｓｓｉｎｇ  Ｉｎｔｅｒｆａｃｅ」）ライブラリが，計算モードで\n開始される主要プログラムの枠組みでのサービスに向けた固有の命令スレッドを生\n成する（第２の適用例を参照）。この場合，このライブラリは，サービスタイプ（Ｈ\nＴ＿ＳＥＲＶＩＣＥ）を識別するパラメータに基づいて関数ｓｅｔｓｃｈｅｄｕｌ\nｅｒ（）を呼び出すことができる。したがって，オペレーティングシステム３４に\nよって実装する命令スレッドの分類手段３６は，このパラメータを自動的に認識し\nてこのＭＰＩライブラリが生成する命令スレッドのタイプを識別することからなる。\n【００４５】\n命令スレッドのタイプが前述したように先験的に明示されない第４の適用例では，\nオペレーティングシステム３４の分類手段３６を，自動的に，その上簡潔に，とり\nわけこれらの命令スレッドの起動元であるアプリケーションを自動的に認識するこ\nとによってタイプを決定するように設計することができる。\n【００４６】\nその上，コンピューティングデバイス１８は，同じ中央処理装置の各仮想プロセ\nッサを前述した２つのタイプの一方に関連付ける手段を有する。図１に示すように，\nこの関連付け手段は，例えば計算タイプかサービスタイプかをそれぞれ識別するパ\nラメータＣおよびＳである。この関連付け手段は，例えば該当する中央処理装置２\n４，２６，または変形例ではオペレーティングシステム３４によって明示的または\n暗黙的に管理される。したがって，図１に概略的に示した例では，第１の中央処理\n装置２４の仮想プロセッサ２４Ｃは計算タイプであり，第１の中央処理装置２４の\n仮想プロセッサ２４Ｓはサービスタイプであり，第２の中央処理装置２６の仮想プ\nロセッサ２６Ｃは計算タイプであり，第２の中央処理装置２６の仮想プロセッサ２\n６Ｓはサービスタイプである。\n【００４７】\nオペレーティングシステム３４は，仮想プロセッサ２４Ｃ，２４Ｓ，２６Ｃおよ\nび２６Ｓに命令スレッドの実行を分散するマネージャ３８を有する。さらに正確に\nは，この分散マネージャ３８は，実行する命令スレッドをそれぞれタイプに応じて\n１つの仮想プロセッサに方向付けし，さらに正確にはタイプが同じ仮想プロセッサ\nにも方向付けするように設計する。したがって，仮想プロセッサ２４Ｃまたは２６\nＣには計算タイプの命令スレッドしか方向付けできず，仮想プロセッサ２４Ｓまた\nは２６Ｓにはサービスタイプの命令スレッドしか方向付けできない。\n【００４８】\n具体的には，分散マネージャ３８は，\n－  実行する命令スレッドそれぞれに対して，中央処理装置にある仮想プロセッ\nサ２４Ｃ，２４Ｓまたは２６Ｃ，２６Ｓとは独立して中央処理装置２４または２６\nを選択する第１のソフトウェア手段４０と，\n－  選択した中央処理装置の仮想プロセッサのうち，実行する命令スレッドと同\nじタイプのものを自動的に割り当てる第２のソフトウェア手段４２と\nを有する。\n【００４９】\n次に，図１のコンピューティングデバイス１８が実装する複数のコンピュータプ\nロセスを組み合わせた実行の管理方法を図２を参照して詳述する。\n【００５０】\n第１の分類ステップ１００では，実行待機状態にある命令スレッドＴ１，Ｔ２お\nよびＴ３を計算タイプ（右斜線）かサービスタイプ（左斜線）であるかによって分\n類する。このタイプは，コマンドのパラメータまたはアプリケーションプログラミ\nングインターフェースの関数のパラメータで先験的に定義し，前述したようにオペ\nレーティングシステム３４のソフトウェア手段３６によって自動的に認識すること\nができる。このタイプは，オペレーティングシステム３４のソフトウェア手段３６\nによって直接，自動的に定義することもできる。\n【００５１】\n次のステップ１０２では，オペレーティングシステム３４の分散マネージャ３８\nは，ソフトウェア手段４０を用いて各命令スレッドに対して中央処理装置２４また\nは２６を選択し，選択した中央処理装置の待ち行列にこの命令スレッドを配置する。\n【００５２】\nその後，各命令スレッドをソフトウェア手段４２が実行する仮想プロセッサに割\nり当てるステップ１０４では，中央処理装置２４または２６の待ち行列に配置した\n各命令スレッドが，実際にはこの命令スレッドと同じタイプのこの中央処理装置２\n４または２６の仮想プロセッサの待ち行列に自動的に配置される。\n【００５３】\n最後に，実行ステップ１０６では，前のステップで割り当てられた仮想プロセッ\nサによって各命令スレッドを実行する。\n【００５４】\n前述したようなコンピューティングデバイス１８によって，複数の仮想プロセッ\nサ上での命令スレッドの実行管理が容易になることは明らかである。\n【００５５】\n先行技術では，仮想プロセッサ上で命令スレッドを組み合わせて実行するメカニ\nズムを実装することができるコンピューティングデバイスにロードしたオペレーテ\nィングシステムは，一般の計算媒体と同じようにあらゆる仮想プロセッサを備えて\nいるため，命令スレッドの分散が一層複雑になっている。\n【００５６】\n本発明によれば，オペレーティングシステムによる命令スレッドの分散が簡略化\nし，とりわけＨＰＣスーパーコンピュータまたはリアルタイム計算のアプリケーシ\nョンを実装するプロセッサなど計算が強く求められる環境で，命令スレッドを組み\n合わせて実行するメカニズムから多くの利益が引き出される。さらに正確には，前\n述した実施形態では，同じ１つの中央処理装置にある２つの仮想プロセッサを，相\n互に交換可能な２つの計算媒体ではなく，計算に対する１つの主要な実行媒体およ\nび付属サービスに対する１つの二次的な実行媒体として示した。したがって，Ｎ個\nの中央処理装置がある一般化したコンピューティングデバイス１８では，命令スレ\nッドを組み合わせて実行するメカニズムを実装したとしても，実際にはユーザ（お\nよびオペレーティングシステム）にはＮ個の中央処理装置しか見えず，このメカニ\nズムを実装していないかのように見える。その結果，命令スレッドの分散で起こる\n管理上の制約を受けることなくこのメカニズムから利益が引き出される。\n【００５７】\n選択した中央処理装置の仮想プロセッサに命令スレッドを自動的に割り当てるこ\nとによって，命令スレッドはその役割および制約に応じて仮想プロセッサに分配さ\nれ，ユーザまたはオペレーティングシステムがこの分配に介入することはない。\n【００５８】\n命令スレッドが分配されると，同じ１つの中央処理装置にある２つの仮想プロセ\nッサ上で実行メカニズムを平行に実装することの利点が，以下の点にあることがわ\nかる。\n－  中央処理装置は２つの異なる待ち行列を管理するため，１つの命令スレッド\nから別の命令スレッドへの移行を管理する必要がなくなり，この同時の実行はハー\nドウェアが管理する。\n－  特に，仮想プロセッサが実行する命令スレッドが１つしか残っていないとき，\n中央処理装置は仮想プロセッサに割り込むことなく仮想プロセッサにコードを実行\nさせることができる。\n－  １つのプログラムから別のプログラムへの移行は，命令ごとに行われる。\n【００５９】\nこの非常に細かい粒度は，とりわけ支障を来すおそれのあるデーモンの場合に明\n確に有益になり得る。実際，同じ１つの中央処理装置にある計算の仮想プロセッサ\nは減速するが，一定時間の間サービスの仮想プロセッサからブロックされることは\nない。支障（デーモンおよび割り込み）による影響は，計算の仮想プロセッサによ\nって著しく減少する。\n【００６０】\nＨＰＣ環境では，計算コードを計算の仮想プロセッサに配置し，付属サービスを\nサービスの仮想プロセッサに配置することができ，これはバッチマネージャなどの\n使用ツールに対して明白な方法で行う。リアルタイム環境では，これによって重要\nな命令スレッドを他のすべてのサービス命令スレッドから自動的に隔離し，スケジ\nューリングのために起こる割り込みは一切なく，選択した中央処理装置で利用可能\nな実行時間の最低５０％をこの重要な命令スレッドのために確保することができる。\n【００６１】\n最後に，コンピューティングデバイス１８と，各命令スレッドに１つのタイプを\n先験的に割り当てるこの機能性を考慮していないプログラムとの互換性に関しては，\nデフォルトとして命令スレッドを１つのサービスの仮想プロセッサに方向付ける必\n要があることは明らかである。実際，オペレーティングシステムが開始するデーモ\nンはすべて，計算に支障を来さないようにサービスの仮想プロセッサで実行する必\n要がある。そのため，命令スレッドを計算の仮想プロセッサに方向付けるために計\n算コードのみを特別に適合させる必要がある。この適合は，必ずしもプログラム自\n体から行う必要はなく，例えば前述のＭＰＩライブラリなど外部のツールで実行し\nてもよい。\n【００６２】\nさらに，本発明は前述した実施形態に限定されるものではないことがわかるであ\nろう。とりわけ，各中央処理装置が３つ以上の仮想プロセッサを備えられるメカニ\nズムを実装することができる場合，３つ以上のタイプの命令スレッドを定義するこ\nとが有利になり得る。\n【００６３】\nまた，何度も前述して示唆したように，図１に示すＨＰＣスーパーコンピュータ\nの設備が本発明を実装できる唯一のものではない。例えばリアルタイム計算および\n／またはオンボード処理などこれよりも遙かに簡易なコンフィギュレーションでは，\n複数の仮想プロセッサ上で複数の命令スレッドを組み合わせて実行する少なくとも\n１つの中央処理装置を有する単一のプロセッサ（またはこのようなプロセッサを備\nえるコンピュータ）を備えていれば，本発明を実装することができる。\n【００６４】\nさらに一般的には，ここに開示した教示に照らし合わせて，上に記載した実施形\n態にさまざまな修正を加えてもよいことは当業者には明らかであろう。以下の特許\n請求の範囲では，使用した用語が請求項を本明細書で明らかにした実施形態に限定\nするものと解釈してはならず，本文の記載およびそこから予見される内容は，ここ\nに開示した教示の実装に一般知識を応用することによって当業者が到達しうる範囲\n内であることから，請求項が範囲に含めると想定するあらゆる同等のものも含まれ\nると解釈すべきである。\n【図１】\n【図２】\n」\n(3)  前記第２の２の事実及び前記(1)及び(2)の事実によると，本願の出願当初の\n発明（以下「当初発明」という。），本願発明及び本願補正発明（以下，併せて「本\n発明」という。）について，次のとおり認められる。\nア  技術分野\n本発明は，命令スレッドの実行を管理するコンピュータシステムであって，同じ\n中央処理装置に属する複数の仮想プロセッサ上で複数の命令スレッドを組み合わせ\nて実行する少なくとも一つの中央処理装置と，命令スレッドの実行を仮想プロセッ\nサに分散する少なくとも一つのマネージャとを有するコンピュータシステムに関す\nる。本発明は，また，その方法，サーバクラスタへの本方法の適用及び本方法を実\n行するための命令を含むコンピュータプログラムにも係る。（【０００１】）\nここで，「同じ中央処理装置に属する複数の仮想プロセッサ上で複数の命令スレ\nッドを組み合わせて実行する中央処理装置」とは，命令スレッド実行の並列処理を，\n中央処理装置の内部資源（とりわけ実行の「パイプライン」，レジスタ及びキャッシ\nュメモリ）のいくつかを共有することによって増進させるメカニズムを備える中央\n処理装置のことである。（【０００５】）\nイ  課題\nハイパースレッディングメカニズムを搭載したマイクロプロセッサ上で，従来の\nオペレーティングシステム（Ｌｉｎｕｘ（登録商標））を実行すると，命令スレッド\nを実行する際にロードバランシングアルゴリズムも実行するため，命令スレッドは\n仮想プロセッサの特性を考慮する必要があった。特に，このオペレーティングシス\nテムは，同じ中央処理装置の別の仮想プロセッサに命令スレッドを切り替えて仮想\nプロセッサをアンロードすることはないという制約があるため，ロードバランシン\nグアルゴリズムが非常に重くなっていた（【０００７】）。この制約は，例えば携帯電\n話のアプリケーションに内蔵するマイクロプロセッサなどに用いるリアルタイム計\n算およびオンボード処理のアプリケーションでとりわけ問題が生じていた（【００\n０８】）。\n別の例によると，ＨＰＣ（Ｈｉｇｈ  Ｐｅｒｆｏｒｍａｎｃｅ  Ｃｏｍｐｕｔｉ\nｎｇ）タイプのスーパーコンピュータの環境では，ユーザが中央処理装置へのアプ\nリケーションの配置を細かくコントロールすることを望む（【０００９】）。ユーザ\n（すなわちプログラマ）は，命令スレッドを管理するアプリケーションプログラミ\nングインターフェースのシステムを呼び出すことによって，命令スレッドを細かく\n配置し，それによって，命令スレッドに対するスケジューラの挙動を明示すること\nができるが，このためには，コンピュータシステムのトポロジーの知識が必要であ\nり，他のソフトウェア層と競合するおそれのある配置が不可避であった（【００１\n０】）。\n仮想プロセッサの特性を考慮することは，複雑であり，ＨＰＣスーパーコンピュ\nータのアプリケーションにおいて自動的な管理ができなくなることさえあった。\n（【００１１】）\nそのため，前述の問題および制約を少なくとも部分的に緩和することができる，\n命令スレッドを組み合わせた実行の管理システムが望まれていた。（【００１２】）\nウ  課題解決手段\n本発明は，前記技術分野において，実行する命令スレッドを複数の所定のタイプ\nに応じて分類する分類手段又は分類ステップを有し，実行する命令スレッドをそれ\nぞれタイプに応じて仮想プロセッサに方向付けるように命令スレッドの実行を分散\nするマネージャが設計されているものである。（【００１３】，【００２０】～【００\n２２】）\n選択的に，本発明は，実行する命令スレッドを同じタイプの仮想プロセッサに方\n向付けるようにすることができる。（【００１５】）\n選択的に，本発明は，同じ中央処理装置の各仮想プロセッサをこれらの所定のタ\nイプの一つに関連付ける手段を備えることができ，中央処理装置は二つの仮想プロ\nセッサを有し，実行するコンピュータプロセスは第１のタイプか第２のタイプとし，\n仮想プロセッサの一つは命令スレッドの第１のタイプに関連付け，仮想プロセッサ\nのもう一つは命令スレッドの第２のタイプに関連付けることができる。（【００１７】）\n選択的に，前記第１のタイプ及び第２のタイプは，それぞれ，「計算」と呼ばれる\nタイプ及び「サービス」と呼ばれるタイプとすることができ，「計算」タイプの命令\nスレッドは，実行結果を提供するプログラムの実行に参加して結果を直接生成する\n命令スレッドに関係し，「サービス」タイプの命令スレッドは，このプログラムの実\n行に参加して「計算」タイプの命令スレッドに付属サービスを提供する命令スレッ\nドに関係する。（【００１８】）\n選択的に，本発明によるコンピュータシステムは，少なくとも二つの中央処理装\n置を備えることができ，マネージャを，中央処理装置が備える仮想プロセッサとは\n独立して，実行する命令スレッドそれぞれに対して中央処理装置を選択するように\n設計することができる。（【００１９】）\n選択的に，分類ステップでは，命令スレッドを管理するアプリケーションプログ\nラミングインターフェースの関数で用いられるタイプを識別するためのパラメータ\nに基づいて，命令スレッドをそれぞれのタイプに分類してもよいし（【００２１】，\n【００４２】），あるいは，プログラムの実行コマンドで用いられるタイプを識別す\nるためのパラメータに基づいて，このプログラムによって実行される命令スレッド\nをそれぞれのタイプで分類してもよい。（【００２２】，【００４３】）\nエ  効果\n本発明は，命令スレッドをタイプごとに分類し，これをタイプに応じてそれぞれ\nの仮想プロセッサに方向付けることによって，計算資源が保護できる。その結果，\n中央処理装置を最適な形で使用することになり，関連するアプリケーションの実行\n速度が加速する。さらに，ユーザ（プログラマ）がハイパースレッディングメカニ\nズムを理解していないことに起因するエラーのリスクが抑えられる。（【００１４】，\n【００１６】）\n本発明によると，一つの中央処理装置にある二つの仮想プロセッサ上で実行メカ\nニズムを平行に実装することにより，以下の利点が得られる。\n①  中央処理装置は二つの異なる待ち行列を管理するため，一つの命令スレッドか\nら別の命令スレッドへの移行を管理する必要がなくなる。\n②  特に，実行すべき命令スレッドが仮想プロセッサ毎に一つずつの場合には，割\nり込みをせずに仮想プロセッサがコードを実行できる。\n③  一つのプログラムから別のプログラムへの移行は，命令ごとに行われる。\n同じ一つの中央処理装置にある計算の仮想プロセッサは減速するが，一定時間の\n間サービスの仮想プロセッサからブロックされることはない。支障（デーモン及び\n割り込み）による影響は，計算の仮想プロセッサにとって著しく減少する。（【００\n５９】）\n計算コードを計算の仮想プロセッサに配置し，付属サービスをサービスの仮想プ\nロセッサに配置するので，リアルタイム環境では，重要な命令スレッドを他のすべ\nてのサービス命令スレッドから自動的に隔離し，スケジューリングのために起こる\n割り込みは一切なく，選択した中央処理装置で利用可能な実行時間の最低５０％を\nこの重要な命令スレッドのために確保することができる。（【００６０】）\nオ  実施例等\n本発明の実施形態は，同一の中央処理装置に属する複数の仮想プロセッサ上で複\n数の命令スレッドを組み合わせて実行する中央処理装置を２個（第１の中央処理装\n置２４及び第２の中央処理装置２６）と，仮想プロセッサに命令スレッドの実行を\n分散するマネージャ３８とを備えるコンピューティングデバイス１８であって，第\n１の中央処理装置２４及び第２の中央処理装置２６を接続する通信バスと，ＲＯＭ\n２８と，ＲＡＭ３０と，ハードディスク３２とを有する。（【００２７】，【００３２】，\n【００４７】）\n本発明の実施形態には，「計算」タイプ及び「サービス」タイプの二つのプロセス\nのタイプがあり，「計算」と呼ぶ命令スレッドの第１のタイプは，結果を供給するよ\nうにコンピューティングデバイス１８が実行するようになっているプログラムに対\nして，このプログラムの実行に参加して結果を直接生成する命令スレッドに関係し，\n「サービス」と呼ぶプロセスの第２のタイプは，このプログラムの実行に参加して\n「計算」タイプの命令スレッドに付属サービスを供給する命令スレッドに関係する\nものであり，本発明の実施形態は，これら二つのタイプの命令スレッドに応じて，\n実行する命令スレッドを分類する分類手段３６を有する。（【００３９】）\nさらに，コンピューティングデバイス１８は，同じ中央処理装置の各仮想プロセ\nッサを前述した二つのタイプの一方に関連付ける手段を有する。この関連付け手段\nは，例えば計算タイプかサービスタイプかをそれぞれ識別するパラメータＣ及びＳ\nである。一例では，第１の中央処理装置２４の仮想プロセッサ２４Ｃは計算タイプ\nであり，第１の中央処理装置２４の仮想プロセッサ２４Ｓはサービスタイプであり，\n第２の中央処理装置２６の仮想プロセッサ２６Ｃは計算タイプであり，第２の中央\n処理装置２６の仮想プロセッサ２６Ｓはサービスタイプである。（【００４６】）\n分散マネージャ３８は，実行する命令スレッドとタイプが同じ仮想プロセッサに\nも方向付ける。したがって，仮想プロセッサ２４Ｃ又は２６Ｃには計算タイプの命\n令スレッドしか方向付けされず，仮想プロセッサ２４Ｓ又は２６Ｓにはサービスタ\nイプの命令スレッドしか方向付けされない。（【００４７】）\nアプリケーションに応じて，分類手段３６はさまざまな形態を取ることができる。\n（【００４１】）\n第１の適用例では，一つのプログラムのうちいくつかの命令スレッドが計算に参\n加し，残りの命令スレッドが付属サービスに参加するものであり，このようなプロ\nグラムは，アプリケーションプログラミングインターフェースの関数ｓｃｈｅｄ＿\nｓｅｔｓｃｈｅｄｕｌｅｒ（）を，計算タイプ（ＨＴＣＡＬＣＵＬ）かサービスタ\nイプ（ＨＴ＿ＳＥＲＶＩＣＥ）かを識別するためのパラメータに基づいて呼び出す\nように作られる。分類手段３６は，前記パラメータを自動的に認識して命令スレッ\nドのタイプを識別する。（【００４２】）\n第２の適用例では，複数のプログラムが実行され，そのうちのいくつかは計算プ\nログラムであり，残りはサービスプログラムである。この場合，プログラムの実行\nを開始するには，ユーザは，計算かサービスかのタイプをパラメータで識別するコ\nマンドを用いる。このコマンドは，例えば，コマンドｈｔ＿ｓｃｈｅｄ－［ＣＡＬ\nＣＵＬまたはＳＥＲＶＩＣＥ］＜プログラム名＞である。分類手段３６は，前記パ\nラメータを自動的に認識して命令スレッドのタイプを識別する。（【００４３】）\n第３の適用例では，ＭＰＩ（Ｍｅｓｓａｇｅ  Ｐａｓｓｉｎｇ  Ｉｎｔｅｒｆａ\nｃｅ）ライブラリによって，計算タイプで実行された主プログラムから，サービス\nタイプの命令スレッドが形成される。この場合，ＭＰＩライブラリは，サービスタ\nイプ（ＨＴ＿ＳＥＲＶＩＣＥ）を識別するパラメータに基づいて関数ｓｅｔｓｃｈ\nｅｄｕｌｅｒ（）を呼び出す。命令スレッドの分類手段３６は，このパラメータを\n自動的に認識して命令スレッドのタイプを識別する。（【００４４】）\n第４の適用例では，前述の適用例とは異なり，命令スレッドのタイプが事前には\n明示されない。分類手段３６は，命令スレッドの起動元であるアプリケーションを\n自動的に認識することによってタイプを決定する。（【００４５】）\n２  取消事由１（補正の適法性についての判断の誤り）について\n(1)   新規事項追加禁止要件違反について\nア  前記１(1)のとおり，本件補正前の請求項６の命令スレッドのタイプは，\nいずれも，単に「タイプ」と記載されており，「（Ｓ，Ｃ）」の記号を伴わないもので\nあったところ，前記第２の１のとおり，原告は，平成２６年８月２６日付けで，甲\n１発明等を引用例とする進歩性の欠如を理由とする拒絶査定を受けた（甲７，１０）\n後，本件補正をした。\nイ  本件補正後の請求項６の，「（Ｓ，Ｃ）」は，それ自体のみからその技術的\nな意義を読み取れず，また，本件補正後の請求項６の記載中に，その技術的な意義\nを明確にする定義等の記載は見当たらない。\n本件補正後の請求項６の従属項である同請求項７～１０にも，本件補正後の請求\n項６の「（Ｓ，Ｃ）」の技術的な意義を明確にする記載はない。\nウ(ｱ)  当初明細書等には，命令スレッドのタイプについては，二つ以上ある\nこと（【００１３】，【００１４】，【００１７】，【００２０】），【００３９】，【００４\n２】，【００４６】），三つ以上ある場合もあること（【００６２】）が記載されており，\n命令スレッドのタイプが第１のタイプと第２のタイプである場合において，命令ス\nレットの第１のタイプが計算タイプであり，第２のタイプがサービスタイプである\n場合があることが記載されている（【００３９】，【００４２】，【００４３】，【００４\n４】，【００４６】，【００４７】，【００５０】）。\nまた，当初明細書等には，命令スレッドのタイプは，①アプリケーションプログ\nラミングインターフェースの関数でタイプを識別するパラメータ（計算タイプ：Ｈ\nＴＣＡＬＣＵＬ，サービスタイプ：ＨＴ＿ＳＥＲＶＩＣＥ）に基づく場合（【００２\n１】，【００４２】，【００５０】），②プログラムの実行コマンドでタイプを識別する\nパラメータ（ＣＡＬＣＵＬ，ＳＥＲＶＩＣＥ）に基づく場合（【００２２】，【００４\n３】，【００５０】），③命令スレッドの起動元のアプリケーションを自動的に認識す\nることによって決定される場合（【００４５】）があることが記載されている。\nさらに，命令スレッドと仮想プロセッサの関係については，仮想プロセッサのタ\nイプは，パラメータＣ及びパラメータＳによって識別され，パラメータＣは計算タ\nイプに，パラメータＳはサービスタイプに関連付けられ，仮想プロセッサ２４Ｃ及\nび２６Ｃは計算タイプであり，仮想プロセッサ２４Ｓ及び２６Ｓはサービスタイプ\nである場合（【００４６】～【００４８】）があることが記載されている。\n(ｲ)  以上によると，当初明細書等においては，「Ｓ」及び「Ｃ」は，仮想プ\nロセッサのタイプとして記載されていること，命令スレッドのタイプとしては，「計\n算タイプ」及び「サービスタイプ」という文言が用いられていることが認められる。\nしかし，前記(ｱ)のとおり，仮想プロセッサのタイプは，パラメータＣ及びパラメ\nータＳによって識別され，パラメータＣは計算タイプに，パラメータＳはサービス\nタイプに関連付けられ，仮想プロセッサの２４Ｃ及び２６Ｃは「計算タイプ」，同２\n４Ｓ及び２６Ｓは「サービスタイプ」とされている。また，命令スレッドのタイプ\nがアプリケーションプログラミングインターフェースの関数でタイプを識別するパ\nラメータ（計算タイプ：ＨＴＣＡＬＣＵＬ，サービスタイプ：ＨＴ＿ＳＥＲＶＩＣ\nＥ）や，プログラムの実行コマンドでタイプを識別するパラメータ（ＣＡＬＣＵＬ，\nＳＥＲＶＩＣＥ）に基づく場合があることが記載されているところ，C が計算（ｃ\nａｌｃｕｌａｔｉｏｎ），Ｓがサービス（ｓｅｒｖｉｃｅ）の頭文字に由来すること\nも明らかである。\nエ  そうすると，当初明細書等の記載を考慮して，特許請求の範囲に記載さ\nれた用語の意義を解釈すると，本件補正後の請求項６～８で命令スレッドのタイプ\nとされている記載「タイプ（Ｓ，Ｃ）」は，「サービスタイプ」，「計算タイプ」の意\n味であると解することができる。\nオ  以上によると，本件補正は，本件補正前の請求項６において，命令スレ\nッドの「タイプ」は，どのような種類のタイプが存在するのかについて，記載がな\nかったのを，「タイプ（Ｓ，Ｃ）」とし，当初明細書等に記載されていた「タイプ（サ\nービスタイプ，計算タイプ）」としたものであり，当初明細書等に記載された事項の\n範囲内を超えるものではない。\nしたがって，本件補正は，新規事項を追加するものではなく，原告の主張する取\n消事由１のうち，新規事項追加禁止要件違反についての判断の誤りを主張する点に\nついては，理由がある。\nカ(ｱ)  被告は，当初明細書等においては，仮想プロセッサのタイプとして\n「Ｃ」及び「Ｓ」が用いられているものの，命令スレッドのタイプとして「Ｃ」及\nび「Ｓ」は用いられてはおらず，命令スレッドのタイプとしては，「計算タイプ」及\nび「サービスタイプ」を用いているから，命令スレッドのタイプと仮想プロセッサ\nのタイプは明確に使い分けられている旨主張する。\nしかし，この主張を採用することができないことは，既に判示したとおりである。\n(ｲ)  また，被告は，「Ｓ」及び「Ｃ」は，参照符号であり，発明特定事項と\nはならず，単なる例示にすぎない旨主張する。\nしかし，本件補正後の請求項６の「タイプ（Ｓ，Ｃ）」は，既に判示したとおり，\n「タイプ（サービスタイプ，計算タイプ）」の意味であるから，単に「請求項の記載\nの内容を理解するために必要があるときは，当該願書に添付した図面において使用\nした符号を括弧をして用いる」（特許法施行規則様式２９の２［備考］１４ロ）場合\nとは異なっており，発明特定事項であるということができる。\nしたがって，被告の上記主張は，採用することができない。\n(2)  目的要件違反について\nア  前記(1)のとおり，本件補正により，請求項６の「タイプ」の後に付加さ\nれる「（Ｓ，Ｃ）」は，「（サービスタイプ，計算タイプ）」を意味するものと解される。\nイ  したがって，本件補正前は限定のなかった請求項６の「タイプ」に本件\n補正によって「（Ｓ，Ｃ）」を付加することにより，サービスタイプと計算タイプが\n含まれることを明らかにした上，それぞれの命令スレッドがそれぞれのタイプに応\nじて仮想プロセッサに方向付けられるものであることを特定したものであって，請\n求項６に，「サービスタイプと計算タイプがそれぞれのタイプに応じて仮想プロセ\nッサに方向付けられる」という本件補正前にはない限定を加えたものであるから，\n「特許請求の範囲の減縮」に当たるということができる。\nウ  被告は，本件補正後の請求項６における「複数の所定のタイプ」という\n用語は，「命令スレッド」の「タイプ」を意味するものとして明確であり，「複数の\n所定のタイプ」に付加された「（Ｓ，Ｃ）」も，本願の願書に添付した図面において\n使用した符号を括弧をして用いたものとして解釈し得るところ，明細書の発明の詳\n細な説明で技術的に裏付けられているのが「Ｓ」及び「Ｃ」のタイプを使用するも\nのだけであるとか，実施例が「Ｓ」及び「Ｃ」のタイプを使用するものだけである\nことのみから，特許請求の範囲に記載された「複数の所定のタイプ」を「少なくと\nも『Ｓ』及び『Ｃ』のタイプを含むもの」と限定して解することはできない旨主張\nする。\nしかし，本願発明において命令スレッドの「タイプ」として「計算タイプ」と「サ\nービスタイプ」以外のものがあるとしても，特許請求の範囲及び明細書の記載から，\n既に判示したとおり解することができる。\nしたがって，被告の上記主張を採用することはできない。\nエ  そうすると，本件補正は，特許請求の範囲の減縮を目的とするものに該\n当する。\nしたがって，原告の取消事由１のうち，目的要件違反についての判断の誤りを主\n張する点については，理由がある。\n(3)  小括\nそうすると，本願補正発明６は，サービスタイプと計算タイプの各命令スレッド\nが，それぞれのタイプに応じて仮想プロセッサに方向付けられるものであるところ，\n独立特許要件違反についての審決の判断は，これを前提としていないから，前記の\n目的要件違反についての判断の誤りは，独立特許要件違反の有無を判断するまでも\nなく，審決の結論に影響を及ぼす。\nそして，無効審判において，本願補正発明６につき上記のような解釈に基づく審\n理・判断がされたとは認められないから，本件については，再度特許庁において上\n記の解釈に基づく審理・判断を行う必要があるものと考えられる。\n第６  結論\n以上の次第で，原告の主張する取消事由１には，理由があるから，その余の点を\n判断するまでもなく，審決は，取消しを免れない。\nよって，主文のとおり判決する。\n知的財産高等裁判所第２部\n裁判長裁判官\n森   義 之\n裁判官\n永 田 早 苗\n裁判官\n森 岡 礼 子\n"
}
{
  "trial_type": "IPCase",
  "date": {
    "era": "Heisei",
    "year": 24,
    "month": 7,
    "day": 26
  },
  "case_number": "平成23(行ケ)10302",
  "case_name": "審決取消請求事件",
  "court_name": "知的財産高等裁判所",
  "right_type": "特許権",
  "lawsuit_type": "行政訴訟",
  "lawsuit_id": "82467",
  "detail_page_link": "https://www.courts.go.jp/app/hanrei_jp/detail7?id=82467",
  "full_pdf_link": "https://www.courts.go.jp/app/files/hanrei_jp/467/082467_hanrei.pdf",
  "contents": "平成２４年７月２６日判決言渡\n平成２３年（行ケ）第１０３０２号  審決取消請求事件\n口頭弁論終結日  平成２４年５月３１日\n判                決\n原            告      ｲﾝｶ ｲﾝﾀｰﾈｯﾄ ｶﾝﾊﾟﾆｰ ﾘﾐﾃｯﾄﾞ\n訴訟代理人弁理士      林   佳 輔\n訴訟代理人弁護士      高   橋   雄 一 郎\n同                    大   堀   健 太 郎\n同                    北 島 志 保\n訴訟代理人弁理士      望 月 尚 子\n同                    坂 場 紀 雄\n同                    中 山 秀 明\n同                    本 田 昭 雄\n同                    納   戸   慶 一 郎\n訴訟復代理人弁理士    荒 尾 達 也\n被              告    特 許 庁 長 官\n指 定 代 理 人    田 中 秀 人\n同       樋 口 信 宏\n同       長 島 孝 志\n同       田 村 正 明\n主                  文\n１  原告の請求を棄却する。\n２  訴訟費用は原告の負担とする。\n３  この判決に対する上告及び上告受理の申立てのための付加期間を\n３０日と定める。\n事  実  及  び  理  由\n第１  請求\n特許庁が不服２００８－１７３７３号事件について平成２３年５月１１日にした\n審決を取り消す。\n第２  争いのない事実\n１  特許庁における手続の概要\n(1) 原告は，発明の名称を「オンライン上での有害情報遮断システム及び方法，\n並びにそのためのコンピュータで読出し可能な記録媒体」とする発明について，平\n成１２年１１月２８日（パリ条約による優先権主張外国庁受理１９９９年１２月３\n１日，韓国）を国際出願日とする国際出願をした（以下「本願」という。）。\n(2) 本願については，平成１７年５月１２日付けで拒絶理由通知がされ，これを\n受けて，原告は，同年８月１７日付けで，特許請求の範囲を変更する旨の手続補正\n（甲３。以下，これによる補正後の明細書及び図面を「本件明細書」という。）を\nしたが，平成２０年３月３１日付けで拒絶査定がされた。\n(3) これに対し，原告は，同年７月７日，拒絶査定不服審判請求（不服２００８\n－１７３７３号事件）をしたが，特許庁は，平成２３年５月１１日付けで「本件審\n判の請求は，成り立たない。」旨の審決（以下「審決」という。）をし，その謄本\nは，同月２４日，原告に送達された。\n２  特許請求の範囲の記載\n本件明細書に記載の特許請求の範囲の請求項１に記載の発明（以下「本願発明」\nという。）は，次のとおりである。\n「実行対象のファイルにおける有害情報をリアルタイムで遮断する方法において，\n（ａ）ウェブサーバーとクライアントシステムが相互連結されたコンピューター\nネットワークにおいて，前記ウェブサーバーがコンピューターネットワークを通じ\nて前記クライアントシステムからの接続要請を受信するステップ；\n（ｂ）前記ウェブサーバーが前記クライアントシステムに有害情報遮断コードモ\nジュールを伝送するステップ：及び\n（ｃ）前記有害情報遮断コードモジュールの伝送が完了すると，前記クライアン\nトシステムが前記有害情報遮断コードモジュールを自動的に駆動して，コンピュー\nタウィルスを含む有害情報をリアルタイムで遮断するステップを含み，\n前記ステップ（ｃ）が，\n（ｃ１）ファイルＩ／Ｏルーチンを奪うことにより前記クライアントシステム上\nにおけるファイル入出力（Ｉ／Ｏ）を監視するステップ；\n（ｃ２）前記ステップ（ｃ１）で監視されたファイル入出力（Ｉ／Ｏ）と関連し\nている実行対象のファイルの有害有無を判断するステップ；及び\n（ｃ３）前記ステップ（ｃ２）で有害と判断されたファイルの治療が可能な場合\nは適切な処理を行い，前記ステップ（ｃ２）で有害と判断されたファイルの治療が\n不可能な場合は該当ファイルの実行を中止させるステップを含むことを特徴とする\n方法。」\n３  審決の内容\n(1) 審決の内容は，別紙審決書写しのとおりである。要するに，本願発明は，「山\n口英ほか３８名，“ｂｉｔ別冊  情報セキュリティ”，共立出版株式会社」（甲７。\n以下「引用文献１」という。）及び国際公開第９８／４１９１９号（甲８。日本語\n訳は甲９。以下，「引用文献２」という。）に記載された各発明（以下，引用文献\n１に記載された発明を「引用発明１」と，引用文献２に記載された発明を「引用発\n明２」ということがある。）に基づいて容易に発明できたものであるから，特許法\n２９条２項の規定により特許を受けることができないとするものである。\n(2) 審決が認定した引用発明１の内容\nウィルスに感染した実行形式のプログラムファイル及びウィルスに感染したマク\nロファイルをもつ文書ファイルにおけるウィルス部の実行をリアルタイムで未然に\n防ぐウィルスの解析・検出方法であって，\nパーソナルコンピュータ上で動作するワクチンソフトウェアによって，\n（ｃ１）ＯＳの機能であるファイルＩ／Ｏをフックすることにより，前記パーソ\nナルコンピュータ上におけるファイルの起動や当該ファイルのオープンといったフ\nァイルＩ／Ｏを監視するステップ；\n（ｃ２）前記ステップ（ｃ１）で監視されたファイルＩ／Ｏと関連している実行\n形式のプログラムファイル及びマクロファイルをもつ文書ファイル（以下「実行フ\nァイル」という。）の実行前に，前記実行ファイルのウィルス感染の有無を判断す\nるステップ；\n（ｃ３）前記ステップ（ｃ２）で前記実行ファイルがウィルスに感染していると\n判断された場合に，当該ウィルスを特定し駆除可能であれば，当該ウィルスの駆除\nを行い，当該ウィルスが未知のウィルスであってもユーザに警告を発し，当該ウィ\nルスの危険な動作を未然に防ぐステップ；\nを含むことを特徴とするウィルスの解析・検出方法。\n(3) 審決が認定した本願発明と引用発明１との一致点\n実行ファイルにおける有害情報をリアルタイムで遮断する方法において，\nクライアントシステム上で，ウィルス対策プログラムがコンピュータウィルスを含\nむ有害情報をリアルタイムで遮断するステップを含み，\n前記ステップが，\n（ｃ１）ファイルＩ／Ｏルーチンを奪うことにより前記クライアントシステム上\nにおけるファイル入出力（Ｉ／Ｏ）を監視するステップ；\n（ｃ２）前記ステップ（ｃ１）で監視されたファイル入出力（Ｉ／Ｏ）と関連し\nている実行ファイルの有害有無を判断するステップ；及び\n（ｃ３）前記ステップ（ｃ２）で有害と判断されたファイルの治療が可能な場合\nは適切な処理を行い，前記ステップ（ｃ２）で有害と判断されたファイルの治療が\n不可能な場合は該ファイルの危険な動作を未然に防ぐステップを含むことを特徴と\nする方法。\n(4) 審決が認定した本願発明と引用発明１との相違点\nア  相違点１\n「ウィルス対策プログラム」について，本願発明の「有害情報遮断コードモジュ\nール」は，「（ａ）ウェブサーバーとクライアントシステムが相互連結されたコン\nピューターネットワークにおいて，前記ウェブサーバーがコンピューターネットワ\nークを通じてウェブブラウザーが実行された前記クライアントシステムからの接続\n要請を受信するステップ」と「（ｂ）前記ウェブサーバーが前記クライアントシス\nテムに，有害情報遮断コードモジュールを伝送するステップ」によって，前記有害\n情報遮断コードモジュールの伝送が完了すると，前記クライアントシステムによっ\nて自動的に駆動されるものであるのに対して，引用発明１の「ワクチンソフトウェ\nア」は，パーソナルコンピュータ上への実装駆動方法が不明な点。\nイ  相違点２\n「（ｃ３）」のステップにおいて，本願発明は「ステップ（ｃ２）で有害と判断\nされたファイルの治療が不可能な場合は該当ファイルの実行を中止させる」のに対\nして，引用発明１は，「ステップ（ｃ２）で実行対象のプログラムファイルがウィ\nルス感染していると判断された場合に，…当該ウィルスが，未知のウィルスであっ\nてもユーザに警告を発し，当該ウィルスの危険な動作を未然に防ぐ」ものである点。\n第３  審決取消事由に関する当事者の主張\n１  原告の主張\n(1) 取消事由１（一致点の認定の誤り）\n審決には，本願発明と引用発明１との一致点の認定において，以下のとおりの誤\nりがある。すなわち，\nア  「モニタリング法」について\n引用文献１には「モニタリング法」が自動でウィルスを防ぐとの記載はなく，引\n用文献１の「３．２  動的解析による対策手法」の記載全体からみて，「モニタリ\nング法」は手動で行われる手法であると考えるのが自然である。「モニタリング法」\nは「メモリ常駐」することが記載されているからといって，「リアルタイム」とは\nいえないし，「モニタリング法」が自動化されている必然性も蓋然性もない。引用\n文献１に記載された「モニタリング法」は手動で行う手法であって，本願発明のよ\nうにリアルタイムで実行対象のファイルの問題ある動作を未然に防ぐことはできな\nい。\nイ  「ウィルスの発病」について\n引用文献１には「実行形式のプログラムファイル」と「マクロをもちうる文書フ\nァイル」とが別々に列挙されており，両者は感染場所が異なり発病メカニズムも異\nなる。しかるに，審決は，「マクロをもちうる文書ファイル」と「実行形式のファ\nイルプログラム」を同一視し，いずれについてもファイルＩ／Ｏをフックすること\nを適用できるとして一致点を認定している。\nウ  「ファイルＩ／Ｏをフックすること」について\nウィルスに感染したファイルが読み込まれることはウィルス発病の必要かつ十分\nな条件ではない。現に，シフトキーを押しながら文書をオープンすると，マクロは\n実行されないから，「マクロを含む文書」をオープンすることと，マクロの実行と\nは関係がなく，「ファイルのオープン」は，発病の契機でもない。ファイルＩ／Ｏ\nとマクロの実行は直接関係ないから，ウィルスを検出するためには，ファイルＩ／\nＯではなく，むしろ「マクロの実行」を監視することに動機付けられるというべき\nである。\nまた，ＯＳにはファイルＩ／Ｏ以外にも多数の機能があるから，多数のＯＳの機\n能からファイルＩ／Ｏの機能に着目して選択するにはそれなりの根拠が必要である。\nしたがって，格別の根拠なく，当業者に自明であるとして，「ファイルＩ／Ｏを監\n視する態様を含む」と認定することは誤りである。\nエ  以上のとおり，引用文献１の「モニタリング法」は人が精神活動を発揮させ\nながら手動で行う手法であってリアルタイムで行うものではないし，また，「実行\n形式のファイル」と「マクロをもちうる文書ファイル」とでは，ウィルスの発病の\nメカニズムが異なるし，引用文献１の「ＯＳの機能をフックする」との記載をもっ\nてファイルＩ／Ｏをフックすることを認定することもできないのであるから，審決\nの一致点に関する認定は誤っている。\n(2) 取消事由２（相違点１に係る容易想到性判断の誤り）\n引用発明１は「モニタリング法」であり，引用発明２は「パターンマッチング法」\nであるから，引用発明１と引用発明２とでは技術的に共通の分野に属するとはいえ\nない。引用発明２は，イベントが発生してからウィルス検出オブジェクトを実装駆\n動するものであって，リアルタイムで監視を行う本願発明とはタイミングが逆にな\nっており，引用発明１と引用発明２とを組み合わせることはできない。また，引用\n文献２だけにＡｃｔｉｖｅＸコントロールやＪａｖａアプレットを用いてワクチン\nソフトウェアを実装することが記載されていても，これが当時の技術常識であった\nとは到底いえない。\nこのように，審決の相違点１に係る容易想到性の判断には誤りがあり，この誤り\nは審決の結論に影響を及ぼす。\n２  被告の反論\n(1) 取消事由１（一致点の認定の誤り）に対し\nア  引用文献１の記載によれば，モニタリング法とは，ワクチンソフトウェアが\nメモリに常駐してプログラムのファンクションコールやＡＰＩの呼出しを監視し，\nプログラムの実行前に危険な動作を未然に防ぐものであることが理解できるから，\n当該監視はリアルタイムに行われるものであって，審決に誤りはない。\nイ  審決には，「実行形式のプログラムファイルの実行は，当該ファイルの起動\nといったファイルＩ／Ｏを契機とすること」，及び，「マクロファイルをもつ文\n書ファイルの実行は，当該ファイルのオープンといったファイルＩ／Ｏを契機と\nすること」が述べられている。プログラムファイルを起動するためには，通常，Ｏ\nＳが当該プログラムファイルをメモリ上にロードすることが必要であり，ロードす\nるに際して，前記プログラムファイルのＩ／Ｏが伴うことは当業者にとって自明の\n事項であるから，審決の認定に誤りはない。\nウ  原告が主張する引用文献１のシフトキーを押しながら文書をオープンすると\nの記載は，単なるなお書きであり，「データファイル（文書）のマクロ部分に感染\nするウィルス（マクロウィルス）」は，当該ファイル（すなわち，マクロを含む文\n書）のオープンといったファイルＩ／Ｏを契機として発病する。\nエ  ウィルスに感染したファイルを開くと，ウィルスが発病（活動開始）するの\nであるから，審決において「すなわち，前記「ＯＳの機能をフックすることにより，\nファンクションコールやＡＰＩの呼出しを監視する」態様が，ＯＳの機能であるフ\nァイルＩ／Ｏをフックすることにより，前記パーソナルコンピュータ上におけるフ\nァイルの起動や当該ファイルのオープンといったファイルＩ／Ｏを監視する態様を\n含むことは，当業者にとって自明である。」と認定した点に誤りはない。\nオ  以上のとおり，審決には，引用発明１の内容についての認定の誤り及び一致\n点についての認定に誤りはない。\n(2) 取消事由２（相違点１に係る容易想到性判断の誤り）に対し\nプログラムの実装方法として，ＡｃｔｉｖｅＸコントロールやＪａｖａアプレッ\nトを用いることは，本願出願前に当業者にとって技術的常識であったこと，及び，\nウィルス対策プログラムのクライアント上への実装駆動方法として，Ａｃｔｉｖｅ\nＸコントロールやＪａｖａアプレットを用いることが当業者にとって公知の発明\n（引用発明２）であったことからすると，ウィルス対策プログラムのクライアント\n上への実装駆動方法として，ＡｃｔｉｖｅＸコントロールやＪａｖａアプレットを\n用いることは，当業者であれば容易に想到し得たものである。\n引用文献２に記載されたワクチンソフトウェアは，いつ発生するか分からない常\n時監視が必要なイベントをもトリガとするものであるから，モニタリング法に非常\nに近接した技術をも包含する。引用発明１の「ワクチンソフトウェア」と引用発明\n２の「ウィルス検出オブジェクト」とは，ともにウィルス対策プログラムである点\nにおいて技術的に共通の分野に属する。\n以上のとおりであり，原告主張の取消事由２に理由はない。\n第４  当裁判所の判断\n当裁判所は，審決には原告主張の取消事由はなく原告の請求は棄却されるべきと\n判断する。その理由は次のとおりである。\n１  認定事実\n(1) 本願発明に係る特許請求の範囲の記載は，前記第２の２に記載のとおりであ\nる。\n(2) 本件明細書には，以下の記載がある（甲１）。\n「【発明の詳細な説明】\n（技術分野）\n本発明は，保安システムに関するもので，特にクライアントとウェブサーバーが連\n結されたコンピューターネットワークにおいて，オンラインでコンピュータウイル\nスなどの有害情報を診断，治療及び遮断するシステム及び方法に関するものであ\nる。」\n「【０００４】\nこのような各種有害情報に対する従来の対処方法としては，基本的に先被害／後復\n旧方式であった。このような保護政策は，コンピュータシステムが識別されていな\nい有害情報によって被害を被ってから初めてその対処方案（例えば，ワクチンプロ\nグラムの開発）を模索する手動的な方式である。このような保護政策における他の\n短所は，有害情報に対処するための各種ワクチンプログラムなどを各パーソナルコ\nンピュータに手動でインストールしなければならないということであり，コンピュ\nータ利用者には煩わしさがあった。さらに，各種有害情報は絶えず新しく考案され\nてインターネットを通じて速いスピードで配布されているため，常に最新バージョ\nンのワクチンプログラムを備えるのは容易なことではない。\n【０００５】\nしたがって，現在インストールされているワクチンプログラムでは対処できない新\nしいコンピュータウイルスのような新種有害情報が利用者のコンピュータシステム\nに浸透した場合は，これを遮断する方法がなく，このような新種コンピュータウイ\nルス等によるコンピュータシステムの機能麻痺または個人情報の流出被害は不回避\nなものと認識されている。また，コンピュータ利用者は，確認されていないコンピ\nュータウイルスが発見される度に，最新バージョンのワクチンプログラムを確保す\nるために，有害情報関連専門業者またはオンライン通信会社にアクセスしなければ\nならなかった。しかも，このような最新バージョンのワクチンプログラムをダウン\nロードした後，手動でインストールしなければならないため，無駄な時間が費やさ\nれるという煩わしさがあった。」\n「【０００７】\n（発明の開示）\n本発明は上記問題点に鑑みてなされたものであり，クライアントシステムがコンピ\nューターネットワークを通じてウェブサーバーに接続することで，前記クライアン\nトシステムに有害情報遮断プログラムが自動的に伝送及びインストールされ，クラ\nイアントシステムのファイル及び通信パケットの入出力をリアルタイムで監視し，\n有害情報を能動的に遮断できるオンライン有害情報遮断システム及び方法を提供す\nることを第１の目的とする。」\n「【０００９】\n上記第１の目的を達成するために，本発明はコンピュータウイルスを含む有害情報\nを遮断する方法において，（ａ）ウェブサーバーとクライアントシステムが相互連\n結されたコンピューターネットワークにおいて，前記ウェブサーバーがコンピュー\nターネットワークを通じて前記クライアントシステムからの接続要請を受信するス\nテップ；（ｂ）前記ウェブサーバーが前記クライアントシステムに有害情報遮断コ\nードモジュールを伝送するステップ：及び（ｃ）前記有害情報遮断コードモジュー\nルの伝送完了後，前記クライアントシステムにおいて前記有害情報遮断コードモジ\nュールが自動的に実行され，コンピュータウイルスを含む有害情報をリアルタイム\nで遮断するステップを含むことを特徴とする。」\n「【００１２】\n前記ステップ（ｃ）で実行された有害情報遮断コードモジュールは，現在の有害情\n報遮断コードモジュールの実行状態を別途のウィンドウに表示し，前記ウィンドウ\nを閉じれば，前記有害情報遮断コードモジュールの実行が終了されることが好まし\nい。前記ステップ（ｃ）で実行される有害情報遮断コードモジュールは，前記クラ\nイアントシステムが他のウェブサーバーに接続しようとする場合にも，前記クライ\nアントシステムでそのまま継続して動作することが好ましい。前記ステップ（ｂ）\nで伝送される有害情報遮断コードモジュールは，Ａｃｔｉｖｅ－Ｘ\nＴＭまたはＪａｖ\nａ\nＴＭプログラムであることが好ましい。」\n「【００２４】\n適切には，有害情報遮断コードモジュールは，クライアント１３０で駆動される実\n行可能なアプリケーションプログラムである。例えば，マイクロソフト社のウィン\nドウ環境における使用のためのＡｃｔｖｉｅ Ｘ\nＴＭ制御，及びウェブブラウザーで\n実行され得るジャバアプレット（Ｊａｖａ\nＴＭ ａｐｐｌｅｔ）及びジャバスクリプ\nト（Ｊａｖａ Ｓｃｒｉｐｔ\nＴＭ）がある。また，高級言語で作成され，オブジェク\nトコード化されたプログラムをウェブブラウザーとリンクさせて，該当プログラム\nを実行させてもよい。」\n「【００２９】\nこの実施形態において，図２ｂを参考にすると，ステップ２１０及びステップ２２\n０が，図２ａを参考にして説明した前記第１実施形態（中略）のような方法で行わ\nれる。次いで，クライアント１３０が主に前記第２ウェブサーバー１２０にアクセ\nスする（ステップ２３０）。\n【００３０】\n前記第２ウェブサーバー１２０は，自分が提供するオンラインサービス情報の他に，\n有害情報管理サーバー１１０への接続に用いられるハイパーリンク（ｈｙｐｅｒｌ\nｉｎｋ）情報をクライアント１３０に提供する（ステップ２３５）。前記ハイパー\nリンク情報は，有害情報管理サーバー１１０のフロントホームページ用リンク情報\nではなく，クライアント１３０が別途のウィンドウを通じて前記有害情報管理サー\nバー１１０から有害情報遮断コードモジュールを直接受信することができるように\nするリンク情報であることが好ましい。\n【００３１】\n次に，クライアント１３０は，第２ウェブサーバー１２０からの前記ハイパーリン\nク情報に従って，有害情報管理サーバー１１０にＨＴＴＰ要請を提供する（ステッ\nプ２４５）。\n前記有害情報管理サーバー１１０は，前記クライアント１３０からの前記ＨＴＴＰ\n要請に対するＨＴＴＰ応答として有害情報遮断コードモジュールを伝送する（ステ\nップ２５５）。\n【００３２】\n有害情報遮断コードモジュールの伝送が完了すると，前記有害情報遮断コードモジ\nュールはクライアント１３０において自動的に実行され（ステップ２６０），コン\nピュータウイルスを含む有害情報をリアルタイムで遮断する（ステップ２７０），\nというのは第１実施形態におけると同様である。\n【００３３】\n前記有害情報遮断コードモジュールについてより詳しく説明する。図３は，本発明\nに適用される有害情報遮断コードモジュールの一例の構成を示し，図４は，図３に\n示した有害情報遮断コードモジュールの動作を説明するフローチャートである。\n【００３４】\n図３に示すように，有害情報遮断コードモジュールは，入出力管理ユニット３１０，\n有害情報遮断ユニット３２０及び情報伝達ユニット３３０を含む。また，有害情報\n遮断コードモジュールは，現在の有害情報遮断コードモジュールの実行状態を表示\nする別途のウィンドウ３４０と関連し，前記ウィンドウ３４０を閉じれば，有害情\n報遮断コードモジュールの実行が終了されるのが好ましいというのは上述のとおり\nである。\n【００３５】\n前記入出力管理部３１０は，クライアント１３０上におけるファイル入出力（Ｉ／\nＯ）を監視する。前記ファイルＩ／Ｏの監視とは，ファイルＩ／Ｏルーチンを奪っ\nて（ｈｏｏｋｉｎｇｕｐ）該当ファイル情報を得ることを意味する。前記入出力管\n理ユニット３１０は，ネットワークからの有害情報を遮断するために，クライアン\nト１３０上におけるネットワークパケットＩ／Ｏも監視することが好ましい。バッ\nクオリフィスウイルスと不法個人情報を流出させることの可能なコンピュータウイ\nルスは，ファイルＩ／Ｏを点検したり，プロセスを点検することによって遮断され\nもするが，その内容は後述する。適切には，入出力管理ユニット３１０は，クライ\nアント１３０が接続しようとするインターネットアドレスをモニターする機能も持\nっているため，コンピュータ利用者が猥褻サイトに接続することを遮断する。\n【００３６】\n有害情報遮断ユニット３２０は，ファイルまたはパケットの有害有無を診断し，そ\nのファイルまたはパケットが有害である場合は，適切な治療を行う。情報伝達ユニ\nット３３０は，有害情報であると判断されたファイルまたはパケットの情報を有害\n情報管理サーバー１１０に通知する。」\n(3) 引用文献１には，次の記載がある(甲７)。\n「２．１ 活動開始」\n「ＰＣ内に侵入したウィルスは，そのプログラムコードが実行されるまでは何もす\nることができない。」\n「ＣＯＭやＥＸＥなどの実行形式のプログラムに感染するウィルスの場合は，ユー\nザによって，もしくはＯＳ（Ｏｐｅｒａｔｉｎｇ  Ｓｙｓｔｅｍ）やその他のプロ\nグラムによって起動されるのを待っている。」\n「アプリケーションソフトウェアのデータファイル（文書）のマクロ部分に感染す\nるウィルス（マクロウィルス）の場合は，そのマクロを含む文書が開かれるのを待\nっている。」\n「２．２  感染・増殖」\n「ウィルスを感染場所によって分類すると，\n（１）ブートセクタ\n（２）実行形式のプログラムファイル\n（３）マクロをもちうる文書ファイル\nの大きく３種類に分けられる。」\n「２．２．２  実行形式のプログラムファイル\n実行形式のプログラムは，プログラムのスタートアドレスから実行が開始する。」\n「ウィルスは感染可能なファイルを検索し，対象ファイルにウィルスコードを追加\nし，ウィルス部が実行されるようにスタートアドレスのコード（もしくはスタート\nアドレス自体）を書き換える（図２）。このとき，ウィルス部の実行を終えた後で\n元のプログラム（宿主）を正しく実行するために，スタートアドレスのコード（も\nしくはスタートアドレス自体）を別の場所に保管している。その保管場所が特定で\nきれば，感染ファイルからウィルスコードを取り除くこと（ウィルスの駆除）が可\n能となる。」\n「上記のとおり，少なくとも，実行形式のファイルを開いて書込みを行うものは疑\nうべきであり，さらに常駐終了するならば要注意である。」\n「２．２．３  マクロをもちうる文書ファイル\n文書ファイルのマクロプログラムは，本来，文書の編集作業をサポートしたり定\n型業務プログラムを作成するためのものだったが，アプリケーションソフトのマク\nロ機能に制限がない場合は，バイナリのウィルスと同様，悪意をもったコードを書\nいて実行することができる」\n「ウィルスは，感染対象となる文書ファイルを検索する場合もあるが，多くの場合\nは，まずアプリケーションが起動時に読み込む特殊なファイルのマクロ部分に感染\nする。」\n「これらのファイルに感染した場合は，ウィルスはアプリケーションの起動時に読\nみ込まれ，コマンドマクロの機能をフックし，アプリケーシヨンに常駐する。」\n「３．対策\nこれまでも随時対策のポイントを述べてきたが，ここでは改めてウィルスの解\n析・検出手法を述べる」，「これらのうち，いくつかはワクチンソフトウェアに実\n装され，自動化されている。」\n「３．ｌ  静的解析による対策手法」\n「パターンマッチング法（スキャン法）は，解析によって得られた特徴的なコード\nをブートセクタやファイルから検索する手法である。もちろんこれは既知のウィル\nスにしか効果はないが，ウィルスを特定し，駆除可能であればそれを行う，ほとん\nどのワクチンで利用されている基本的な対策手法である。」\n「静的ヒューリスティック法は，ウィルスの行動パターンを小さな要素に分解し，\n検査対象ファイルにそれらの要素がどれだけ含まれているかをチェックする手法で\nある。」\n「３．２  動的解析による対策手法」\n「モニタリング法は，メモリ常駐型ワクチンともいうべきもので，ＯＳの機能をフ\nックすることにより，プログラムのファンクションコールやＡＰＩの呼出しを監視\nする。これにより，プログラムの実行前にパターンマッチング法で既知ウィルスの\n検査を行ったり，未知ウィルスであってもその危険な動作を未然に防ぐことが可能\nとなる。\n動的ヒューリスティック法は，モニタリング法に静的ヒューリスティック法を応\n用したもので，実行中のプログラムの危険度をより正確に判定することができる。」\n(4) 引用文献２（日本語訳）には，次のとおりの記載がある(甲９)。\n「好適な実施例では，ブラウザ３３０はＭｉｃｒｏｓｏｆｔ社製のインターネッ\nトエクスプローラである。クライアント３００はウィルス検出サーバ４００の生成\nするウィルス検出オブジェクトの形で供給されるプログラムを実行できるエンジン\nを含み得る。なお，クライアント３００にはエンジンを他の方法でも形成できるが，\nこの発明ではエンジンをブラウザ３３０と連携して構成し，したがってブラウザ３\n３０はウィルス検出オブジェクトの形のプログラムの実行に備えて「イネーブルさ\nれた」状態にあると考えられる。この好適な実施例ではＭｉｃｒｏｓｏｆｔ社製の\nプログラミングツールＡｃｔｉｖｅＸをウィルスの反復検出用のウィルス検出オブ\nジェクトの生成に用いている。このＡｃｔｉｖｅＸツールはＡｃｔｉｖｅＸ用語で\n「ｃｏｎｔｒｏｌｓ」と呼ばれるオブジェクト，すなわちサーバに常駐できクライ\nアントからアクセスできる実行可能なコードを含むオブジェクトの生成の手段であ\nる。このｃｏｎｔｒｏｌｓはクライアントにも転送され，クライアントがそのため\nの手段を備えている場合は，そのクライアントで実行される。好ましい実施例では，\nブラウザ３３０はＡｃｔｉｖｅＸでイネーブルされ，ウィルス検出オブジェクトは\nＡｃｔｉｖｅＸ  ｃｏｎｔｒｏｌｓである。ブラウザ３３０には，ウィルス検出オ\nブジェクトの実行可能部分の生成用に種々の代替手段を利用できる。例えば，ブラ\nウザ３３０はＮｅｔｓｃａｐｅ社製のネットスケープナビゲータで構成することも\nできる。また，ウィルス検出（および処置）オブジェクトは例えばＪａｖａアプレ\nットなどのアプレットで構成できる。ＪａｖａプログラミングツールはＳｕｎ  Ｍ\nｉｃｒｏｓｙｓｔｅｍｓ社から市販されている。」\n２  判断\n(1) 取消事由１（一致点の認定の誤り）について\nア  引用発明１の内容\n引用文献１に記載された引用発明１は，審決の認定のとおり，次の内容であると\n認められる。\nウィルスに感染した実行形式のプログラムファイル及びウィルスに感染したマク\nロファイルをもつ文書ファイルにおけるウィルス部の実行をリアルタイムで未然に\n防ぐウィルスの解析・検出方法であって，\nパーソナルコンピュータ上で動作するワクチンソフトウェアによって，\n（ｃ１）ＯＳの機能であるファイルＩ／Ｏをフックすることにより，前記パーソ\nナルコンピュータ上におけるファイルの起動や当該ファイルのオープンといったフ\nァイルＩ／Ｏを監視するステップ；\n（ｃ２）前記ステップ（ｃ１）で監視されたファイルＩ／Ｏと関連している実行\nファイルの実行前に，前記実行ファイルのウィルス感染の有無を判断するステップ；\n（ｃ３）前記ステップ（ｃ２）で前記実行ファイルがウィルスに感染していると\n判断された場合に，当該ウィルスを特定し駆除可能であれば，当該ウィルスの駆除\nを行い，当該ウィルスが未知のウィルスであってもユーザに警告を発し，当該ウィ\nルスの危険な動作を未然に防ぐステップ；\nを含むことを特徴とするウィルスの解析・検出方法。\nイ  本願発明と引用発明１の対比\nそこで，引用発明１と前記第２の２のとおりの本願発明とを対比する。\n引用発明１の「実行ファイル」（実行形式のプログラムファイル及びマクロファ\nイルをもつ文書ファイル）は，本願発明の「実行対象のファイル」に相当する。引\n用発明１の「ウィルス部」は，本願発明の「有害情報」及び「コンピュータウィル\nスを含む有害情報」に相当する。引用発明１の「未然に防ぐ」及び「ウィルスの解\n析・検出方法」は，それぞれ，本願発明の「遮断する」及び「方法」に相当する。\n引用発明１の「パーソナルコンピュータ」は，本願発明の「クライアントシステム」\nに相当する。引用発明１の「（ｃ１）」のステップは，本願発明の「（ｃ１）」の\nステップに相当する。引用発明１の「実行ファイルのウィルス感染の有無」は，本\n願発明の「実行対象のファイルの有害有無」に相当する。引用発明１の「（ｃ２）」\nのステップは，本願発明の「（ｃ２）」のステップに相当する。引用発明１の「ス\nテップ（ｃ２）で前記実行ファイルがウィルスに感染していると判断された場合に，\n当該ウィルスを特定し駆除可能であれば，当該ウィルスの駆除を行い」は，本願発\n明の「ステップ（ｃ２）で有害と判断されたファイルの治療が可能な場合は適切な\n処理を行い」に相当する。引用発明１の「ワクチンソフトウェア」と本願発明の「有\n害情報遮断コードモジュール」とは，ともにウィルス対策プログラムである点で共\n通する。引用発明１の「ステップ（ｃ２）で前記実行ファイルがウィルスに感染し\nていると判断された場合に，…当該ウィルスが未知のウィルスであってもユーザに\n警告を発し，当該ウィルスの危険な動作を未然に防ぐ」において，「当該未知のウ\nィルス」は自動的に駆除（すなわち，治療）できないことは当業者にとって自明で\nあるから，引用発明１の「ステップ（ｃ２）で前記実行ファイルがウィルスに感染\nしていると判断された場合に，…当該ウィルスが未知のウィルスであってもユーザ\nに警告を発し，当該ウィルスの危険な動作を未然に防ぐ」ことと，本願発明の「ス\nテップ（ｃ２）で有害と判断されたファイルの治療が不可能な場合は該当ファイル\nの実行を中止させる」こととは，ともに，「前記ステップ（ｃ２）で有害と判断さ\nれたファイルの治療が不可能な場合は該ファイルの危険な動作を未然に防ぐ」もの\nである点で共通する。\nウ  本願発明と引用発明１の一致点\n以上によれば，本願発明と引用発明１の一致点は次のとおりと認定され，審決の\n認定に誤りはない。\n実行ファイルにおける有害情報をリアルタイムで遮断する方法において，\nクライアントシステム上で，ウィルス対策プログラムがコンピュータウィルスを\n含む有害情報をリアルタイムで遮断するステップを含み，\n前記ステップが，\n（ｃ１）ファイルＩ／Ｏルーチンを奪うことにより前記クライアントシステム上\nにおけるファイル入出力（Ｉ／Ｏ）を監視するステップ；\n（ｃ２）前記ステップ（ｃ１）で監視されたファイル入出力（Ｉ／Ｏ）と関連し\nている実行ファイルの有害有無を判断するステップ；及び\n（ｃ３）前記ステップ（ｃ２）で有害と判断されたファイルの治療が可能な場合\nは適切な処理を行い，前記ステップ（ｃ２）で有害と判断されたファイルの治療が\n不可能な場合は該ファイルの危険な動作を未然に防ぐステップを含むことを特徴と\nする方法。\nエ  原告の主張について\n(ｱ) 「モニタリング法」について\n原告は，「モニタリング法」は，本願発明とは異なり，手動で行われるもので，\nリアルタイムでの監視はできないと主張する。\nしかし，原告の主張は，以下のとおり失当である。\nすなわち，①引用文献１には，主に手動で行うことを主眼としているものの，「こ\nれらのうちいくつかはワクチンソフトウェアに実装され，自動化されている。」と\nの説明がされており，同説明部分は，自動化がされていることを前提とした記述で\nあると解され，また，②引用文献１には，「モニタリング法」について，「メモリ\n常駐型ワクチン」であり，「プログラムのファンクションコールやＡＰＩの呼出し\nを監視する」と説明がされており，同説明部分も，自動でリアルタイムの監視を行\nう場合を前提とする記述であると解され，さらに，③引用文献１には，「動的ヒュ\nーリスティック法」について，「モニタリング法に静的ヒューリスティック法を応\n用したもので，実行中のプログラムの危険性をより正確に判定する」と説明がされ\nており，同説明部分も，モニタリング法が「実行中のプログラムの危険性」を判定\nする自動でリアルタイムでの監視であることを前提とする記述であると解される。\nそうすると，引用文献１の「モニタリング法」は実行中のプログラムを自動でリ\nアルタイムに監視するものと解されることになり，原告の主張は採用できない。\n(ｲ) 「ウィルスの発病」について\n原告は，「実行形式のファイルプログラム」と「マクロをもちうる文書ファイル」\nを同一視して一致点と認定した点には誤りがあると主張する。\nしかし，原告のこの点の主張も採用できない。\n確かに，引用文献１は，前記１(3)記載のとおり，「実行形式のファイルプログラ\nム」と「マクロをもちうる文書ファイル」とを区別し，それぞれのコンピュータウ\nィルスにより，感染や増殖の機能や機構が異なる趣旨の記載がある。しかし，感染\nや増殖の機能や機構において異なるコンピュータウィルスが存在する旨の記述は存\n在するが，引用文献１の「３．対策」の項では，「実行形式のファイルプログラム」\nと「マクロをもちうる文書ファイル」を区別して論じていない。異なるコンピュー\nタウィルスのいずれであっても，プログラム又はマクロの実行前にはメモリ上にロ\nードすることが必須であり，ロードに際してファイルＩ／Ｏを伴うことに関して相\n違はない。そうすると，両者について格別の区別をせずに一致点とした審決の認定\nに誤りはなく，原告の主張は採用できない。\n(ｳ) 「ファイルＩ／Ｏをフックすること」について\n原告は，引用文献１の「ＯＳの機能をフックする」との記載から「ファイルＩ／\nＯをフックする」と認定することは，誤りであると主張する。\nしかし，原告のこの点の主張も，以下のとおり採用できない。\nすなわち，一般に，「ＯＳの機能」は多数の機能を有するが（甲１４，１７），\nこれらの「ＯＳの機能」の中に「ファイルＩ／Ｏ」を含むことは，自明であると解\nされる。そして，プログラムファイルを実行するためには，通常，ＯＳが当該プロ\nグラムファイルをメモリ上にロードすることが必要であり，ロードするに際して，\n当該プログラムファイルのＩ／Ｏを伴うことは当業者にとっては自明である。この\n点は，引用文献１に「ＰＣ内に侵入したウィルスは，そのプログラムコードが実行\nされるまでは何もすることができない。」，「ＣＯＭやＥＸＥなどの実行形式のプ\nログラムに感染するウィルスの場合は，ユーザによって，もしくはＯＳ（Ｏｐｅｒ\nａｔｉｎｇ  Ｓｙｓｔｅｍ）やその他のプログラムによって起動されるのを待って\nいる。」，「アプリケーションソフトウェアのデータファイル（文書）のマクロ部\n分に感染するウィルス（マクロウィルス）の場合は，そのマクロを含む文書が開か\nれるのを待っている。」と記載されていることからも，明らかである（これはシフ\nトキーを押しながら文書をオープンする際も変わらない。）。そして，モニタリン\nグ法が「プログラムの実行前に」プログラムのファンクションコールやＡＰＩの呼\n出を監視するとされていることからすれば，引用文献１でいう「ＯＳの機能をフッ\nクする」との記載は，ＯＳの機能のうちプログラムの実行前に行われる機能をフッ\nクすることを含む趣旨と理解するのが自然であり，上記の当業者に自明の事項を前\n提とすると，「ＯＳの機能」には「ファイルＩ／Ｏ」が含まれることが自明である\nといえる。以上のとおり，引用文献１の「ＯＳの機能をフックする」との記載に接\nした当業者は，「ファイルＩ／Ｏをフックする」ことを含むとものと理解するから，\n「ＯＳの機能をフックする」との記載を「ファイルＩ／Ｏをフックする」ことを含\nむものとした審決の一致点の認定に誤りはない。\nオ  小括\n以上によれば，取消事由１についての原告の主張は，採用することができず，本\n判決と同趣旨の審決における本願発明と引用発明１との一致点の認定に，原告主張\nの誤りはない。\n(2) 取消事由２（相違点１に係る容易想到性判断の誤り）について\nア  審決の認定した相違点１の内容は，前記第２の３(4)アのとおりであり，相違\n点１に係る構成について，プログラムの実装方法としてＡｃｔｉｖｅＸコントロー\nルやＪａｖａアプレットを用いることは，前記１(4)のとおり，引用文献２に記載さ\nれているから，この引用発明２を引用発明１に組み合わせることは，当業者にとっ\nて容易であったといえる。したがって，審決の判断に誤りはない。\nイ  原告の主張について\n(ｱ) 原告は，引用発明１と引用発明２では技術的に共通の分野に属しないから，\n相違点１に係る構成に至ることは容易とはいえないと主張する。\nしかし，原告の上記主張は，以下のとおり失当である。\nすなわち，引用発明１の「ワクチンソフトウェア」は，監視対象となるコンピュ\nータで実行され，ウィルスを検出するものであり，引用発明２の「ウィルス検出オ\nブジェクト」も，同様に監視対象となるコンピュータで実行され，ウィルスを検出\nするものである点で共通である。\n引用発明１と引用発明２とでは，具体的なウィルスの検出手法が，「モニタリン\nグ法」と「パターンマッチング法」とで異なるとしても，引用発明１の「ワクチン\nソフトウェア」と，引用発明２の「ウィルス検出オブジェクト」は，いずれも監視\n対象となるコンピュータで実行され，ウィルスを検出するソフトウェアである点で\n一致しており，技術的に共通の分野に属するものといえる。そして，ウィルスを検\n出するソフトウェアの実装駆動方法が，その検出手法の相違により適用できないと\nする格別の事情も存在しないから，引用発明１の「ワクチンソフトウェア」に，引\n用発明２の「ウィルス検出オブジェクト」の実装駆動方法を適用することは，当業\n者にとって困難とはいえない。\n(ｲ) 原告は，引用発明１と引用発明２とはタイミングが逆で両者を組み合わせる\nことはできないと主張する。\nしかし，原告の主張は，以下のとおり失当である。すなわち，引用文献２に記載\nされたウィルス検出オブジェクトは，クライアントでトリガリング・イベントが発\n生した後に送信されるものではあるが，その点を根拠として，引用文献２に記載さ\nれているウィルス検出オブジェクトの実装駆動方法を引用発明１に適用することが\n困難になるとも認められない。\n(ｳ) 原告は，引用文献２だけにＡｃｔｉｖｅＸコントロールやＪａｖａアプレッ\nトを用いてワクチンソフトウェアを実装することが記載されていても，これが当時\nの技術常識であったとはいえないと主張する。\nしかし，原告の主張は，以下のとおり失当である。すなわち，本件明細書の発明\nの詳細な説明（【００２４】，【００１２】段落）において，ＡｃｔｉｖｅＸコン\nトロールやＪａｖａアプレットを用いて有害情報遮断コードモジュールを構成する\n実施例が，これらを用いることについて特段の説明を伴わずに掲げられていること\n等に照らすならば，ＡｃｔｉｖｅＸコントロールやＪａｖａアプレットを用いたプ\nログラムの実装方法が本願の出願当時技術常識であったと解するのが相当である。\n３  結論\n以上によれば，原告主張の取消事由１及び２については，いずれも理由がない。\n原告はその他縷々主張するがいずれも理由がなく，他に審決を取り消すべき違法は\nない。\nよって，原告の請求は理由がないから，原告の請求を棄却することとして，主文\nのとおり判決する。\n知的財産高等裁判所第１部\n裁判長裁判官\n飯      村      敏      明\n裁判官\n八      木      貴  美  子\n裁判官\n小      田      真      治\n"
}
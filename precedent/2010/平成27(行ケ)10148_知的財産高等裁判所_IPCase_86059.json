{
  "trial_type": "IPCase",
  "date": {
    "era": "Heisei",
    "year": 28,
    "month": 8,
    "day": 3
  },
  "case_number": "平成27(行ケ)10148",
  "case_name": "審決取消請求事件",
  "court_name": "知的財産高等裁判所",
  "right_type": "特許権",
  "lawsuit_type": "行政訴訟",
  "lawsuit_id": "86059",
  "detail_page_link": "https://www.courts.go.jp/app/hanrei_jp/detail7?id=86059",
  "full_pdf_link": "https://www.courts.go.jp/app/files/hanrei_jp/059/086059_hanrei.pdf",
  "contents": "平成２８年８月３日判決言渡  同日原本領収  裁判所書記官\n平成２７年（行ケ）第１０１４８号  審決取消請求事件\n口頭弁論終結日  平成２８年７月６日\n判     決\n原        告    ボード  オブ  リージエンツ，\nユニバーシテイ  オブ  テキ\nサス  システム\n同訴訟代理人弁護士    森    﨑    博    之\n同       弁理士    稲    葉    良    幸\n土    屋    徹    雄\n大    石    幸    雄\n被        告    特許庁長 官\n同 指定代理 人     石    井    茂    和\n高    木        進\n相    崎    裕    恒\n冨    澤    武    志\n主     文\n１  原告の請求を棄却する。\n２  訴訟費用は原告の負担とする。\n３  この判決に対する上告及び上告受理申立てのための付加期間を３０\n日と定める。\n事実及び理由\n第１  請求\n特許庁が不服２０１４－８２６９号事件について平成２７年３月２４日にした審\n決を取り消す。\n第２  事案の概要\n１  特許庁における手続の経緯等\n(1)  原告は，平成２２年６月１１日，発明の名称を「分散型プレディケート予測\nを実現するための方法，システム，およびコンピュータによってアクセス可能な媒\n体」とする特許出願をしたが（特願２０１２－５２２８３４号。優先日：平成２１\n年９月９日，優先権主張国：米国。請求項数２０。以下「本願」という。甲１），\n平成２５年１２月２７日付けで拒絶査定を受けた（甲７）。\n(2)  原告は，平成２６年５月７日，これに対する不服の審判を請求するとともに，\n特許請求の範囲を補正した（以下「本件補正」という。請求項数１５。甲２）。\n(3)  特許庁は，これを不服２０１４－８２６９号事件として審理し，平成２７年\n３月２４日，「本件審判の請求は，成り立たない。」との別紙審決書（写し）記載\nの審決（以下「本件審決」という。）をし，その謄本は，同年４月３日，原告に送\n達された。\n(4)  原告は，平成２７年７月３０日，本件審決の取消しを求めて本件訴訟を提起\nした。\n２  特許請求の範囲の記載\n本件補正後の特許請求の範囲の請求項１ないし１５の記載は，次のとおりである\n（甲２）。以下，本件補正後の請求項１ないし１５に記載された発明を，請求項の\n番号に従って「本願発明１」などといい，本願発明１ないし１５を併せて，「本願\n発明」という。また，その明細書（甲１）を，図面を含めて「本願明細書」という。\nなお，「／」は，原文の改行部分を示す（以下同じ。）。\n【請求項１】複数のプロセッサコアを含むマルチコアプロセッサを備えるコンピ\nューティングシステムであって，前記複数のプロセッサコアの各々がプレディケー\nト予測器を備え，少なくとも１つのプレディケート予測器が，前記複数のプロセッ\nサコアのうちの対応するプロセッサコアにマッピングされたプレディケート命令の\n出力を予測するように構成され，前記プレディケート命令は，命令ブロックに含ま\nれる分岐命令から生成され，前記命令ブロックは，前記複数のプロセッサコアのう\nちのどのプロセッサコアが前記分岐命令を実行するのに割り当てられるかを決定す\nるブロックアドレスを含み，前記予測は，前記分岐命令内に符号化された情報に基\nづき，前記分岐命令内に符号化された前記情報は，概略プレディケート経路を表す，\nコンピューティングシステム。\n【請求項２】前記複数のプロセッサコアの少なくとも１つのプロセッサコアが，\n前記分岐命令を備えるアプリケーションプログラムを実行するように構成される，\n請求項１に記載のコンピューティングシステム。\n【請求項３】コンパイラの実行により，前記分岐命令に前記情報が符号化される，\n請求項１に記載のコンピューティングシステム。\n【請求項４】前記マルチコアプロセッサが，エクスプリジット・データ・グラフ\n・エグゼキューション（ｅｘｐｌｉｃｉｔ  ｄａｔａ  ｇｒａｐｈ  ｅｘｅｃｕｔ\nｉｏｎ）マイクロアーキテクチャを備える，請求項１に記載のコンピューティング\nシステム。\n【請求項５】前記少なくとも１つのプレディケート予測器が，基本予測器および\nグローバル履歴レジスタを備え，前記予測は，前記基本予測器および前記グローバ\nル履歴レジスタにさらに基づく，請求項１に記載のコンピューティングシステム。\n【請求項６】前記グローバル履歴レジスタが，コアローカルプレディケート履歴\nレジスタを備え，前記コアローカルプレディケート履歴レジスタは，前記対応する\nプロセッサコアの前記プレディケート予測器に関するデータを記憶するように構成\nされる，請求項５に記載のコンピューティングシステム。\n【請求項７】前記グローバル履歴レジスタが，グローバルブロック履歴レジスタ\nを備え，前記グローバルブロック履歴レジスタは，複数の命令ブロックに関する複\n数のエントリを記憶するように構成され，前記複数のエントリの各々は，関連する\n分岐命令に対応する予測された終了コードを含む，請求項５に記載のコンピューテ\nィングシステム。\n【請求項８】前記グローバル履歴レジスタが，／前記対応するプロセッサコアの\n前記プレディケート予測器に関するデータを記憶するように構成されるコアローカ\nルプレディケート履歴レジスタと，／複数の命令ブロックに関する複数のエントリ\nを記憶するように構成されるグローバルブロック履歴レジスタとを備え，／前記複\n数のエントリの各々は，関連する分岐命令に対応する予測された終了コードを含む，\n請求項５に記載のコンピューティングシステム。\n【請求項９】マルチコアプロセッサ内の複数のプロセッサコアの各々に対してプ\nレディケート予測器を使用することと，／前記複数のプロセッサコアのうちの対応\nするプロセッサコアにマッピングされたプレディケート命令の出力を予測すること\nと，／を含み，／少なくとも１つのプレディケート予測器が，基本予測器およびグ\nローバル履歴レジスタを含み，前記グローバル履歴レジスタが，複数の命令ブロッ\nクに関する複数のエントリを記憶するように構成されるグローバルブロック履歴レ\nジスタを含み，前記複数のエントリの各々は，関連する分岐命令に対応する予測さ\nれた終了コードを含み，／前記プレディケート命令は，分岐命令から生成され，前\n記プレディケート命令の前記出力を予測することは，前記分岐命令内に符号化され\nた情報に基づき，前記プレディケート命令の前記出力を予測することは，前記基本\n予測器および前記グローバル履歴レジスタにさらに基づき，前記分岐命令内に符号\n化された前記情報は，概略プレディケート経路を表す，／マルチコアプロセッサ内\nでプレディケート予測を提供する方法。\n【請求項１０】前記複数のプロセッサコアの少なくとも１つのプロセッサコアに\nよってアプリケーションプログラムを実行することをさらに含み，前記アプリケー\nションプログラムが，前記分岐命令を含む，請求項９に記載の方法。\n【請求項１１】コンパイラを用いて，前記分岐命令に前記情報を符号化すること\nをさらに含む，請求項９に記載の方法。\n【請求項１２】前記分岐命令は，命令ブロックに含まれ，前記命令ブロックは，\nブロックアドレスを含み，前記ブロックアドレスを用いて，どのプロセッサコアが\n前記分岐命令を実行するかを決定することをさらに含む，請求項１０に記載の方法。\n【請求項１３】マルチコアプロセッサコンピューティングシステム内でプレディ\nケート予測を提供するためのコンピュータ実行可能命令が記憶された，コンピュー\nタによってアクセス可能な媒体であって，処理構成が前記コンピュータ実行可能命\n令を実行するときに処理手順を実行するように構成され，前記処理手順が，／マル\nチコアプロセッサの複数のプロセッサコアの各々に対してプレディケート予測器を\n使用することであって，前記プロセッサコアの各々が少なくとも１つのプレディケ\nート予測器を備える，使用することと，／前記複数のプロセッサコアのうちの対応\nするプロセッサコアにマッピングされたプレディケート命令の出力を予測すること\nと，／を含み，前記プレディケート命令は，命令ブロックに含まれる分岐命令から\n生成され，前記プレディケート命令の前記出力を予測することは，前記分岐命令内\nに符号化された情報に基づき，前記命令ブロックは，前記複数のプロセッサコアの\nうちのどのプロセッサコアが前記分岐命令を実行するのに割り当てられるかを決定\nするブロックアドレスを含み，前記分岐命令内に符号化された前記情報は，概略プ\nレディケート経路を表す，／コンピュータによってアクセス可能な媒体。\n【請求項１４】複数のプロセッサコアを含むマルチコアプロセッサを備えるコン\nピューティングシステムであって，前記複数のプロセッサコアの各々がプレディケ\nート予測器を備え，少なくとも１つのプレディケート予測器が，前記複数のプロセ\nッサコアのうちの対応するプロセッサコアにマッピングされたプレディケート命令\nの出力を予測するように構成され，前記少なくとも１つのプレディケート予測器が，\n基本予測器およびグローバル履歴レジスタを備え，前記グローバル履歴レジスタが，\n前記対応するプロセッサコアの前記プレディケート予測器に関するデータを記憶す\nるように構成されるコアローカルプレディケート履歴レジスタと，複数の命令ブロ\nックに関する複数のエントリを記憶するように構成されるグローバルブロック履歴\nレジスタとを備え，前記複数のエントリの各々は，関連する分岐命令に対応する予\n測された終了コードを含み，前記プレディケート命令は，分岐命令から生成され，\n前記予測は，前記分岐命令内に符号化された情報に基づき，前記予測は，前記基本\n予測器および前記グローバル履歴レジスタにさらに基づき，前記情報は，概略プレ\nディケート経路を表す，／コンピューティングシステム。\n【請求項１５】マルチコアプロセッサ内の複数のプロセッサコアの各々に対して\nプレディケート予測器を使用することと，／前記複数のプロセッサコアのうちの対\n応するプロセッサコアにマッピングされたプレディケート命令の出力を予測するこ\nとと，／を含み，／前記プレディケート命令は，命令ブロックに含まれる分岐命令\nから生成され，前記命令ブロックは，前記複数のプロセッサコアのうちのどのプロ\nセッサコアが前記分岐命令を実行するのに割り当てられるかを決定するブロックア\nドレスを含み，前記プレディケート命令の前記出力を予測することは，前記分岐命\n令内に符号化された情報に基づき，前記分岐命令内に符号化された前記情報は，概\n略プレディケート経路を表す，／マルチコアプロセッサ内でプレディケート予測を\n提供する方法。\n３  本件審決の理由の要旨\n(1)  本件審決の理由は，別紙審決書（写し）記載のとおりである。要するに，以\n下のとおり，本願発明は，①その明細書の発明の詳細な説明の記載が，当業者がそ\nの実施をすることができる程度に明確かつ十分に記載したものであるとはいえず，\n特許法３６条４項１号に規定する要件（以下「実施可能要件」ということがあ\nる。）を満たしておらず，②発明の詳細な説明に記載したものであるとはいえず，\nその特許請求の範囲の記載が，同条６項１号に規定する要件（以下「サポート要\n件」ということがある。）を満たしておらず，③明確であるとはいえず，その特許\n請求の範囲の記載が，同項２号に規定する要件（以下「明確性要件」ということが\nある。）を満たしていないから，特許を受けることができないものであって，本願\nは拒絶すべきものである，というものである。\n(2)  実施可能要件について\n本願明細書には，「概略プレディケート経路情報」は，どのタイミングで何によ\nって作成されたものであり，どのような形で存在する情報とされ，システム内でど\nのように利用されるのかについての説明がなく，その結果，本願発明は，当該「概\n略プレディケート経路情報」を含む分岐命令から生成されるプレディケート命令の\n出力予測がどのようになされるのかを，その出発時点から不知とされることとなり，\n当業者による発明の実施が困難である。\nなお，本件審決書には，「本願の全ての請求項（請求項１乃至２０）に係る発明\nに関して，特許法第３６条第４項第１号でいう実施可能要件を満たしているとはい\nえず…」（本件審決書１３頁）と記載されており，本件補正前の特許請求の範囲請\n求項１ないし２０に係る発明を対象として，実施可能要件を満たすものであるか否\nかを判断したかのような記載となっているが，本件審決の全体の記載から，本件補\n正後の特許請求の範囲請求項１ないし１５に係る発明について，実施可能要件を満\nたしていない旨を判断したものと理解することが可能であるから，上記「請求項１\n乃至２０」は「請求項１乃至１５」の誤記と認める（原告もこれを認めた。）。\n(3)  サポート要件について\n本願明細書において，唯一，処理の具体的情報を示している箇所は，図４で図示\nしたコアローカル履歴レジスタと予測テーブルとが連結された組合せ（【００２\n８】，図６Ａ）や，グローバル分岐履歴レジスタと予測テーブルとが連結された組\n合せ（【００２９】，図６Ｂ）であるが，これらの記載のみならず，図２のうち，\n２０３及び２０７の２箇所でどのような処理が講じられているのかについての情報\nを示すことが必要である。\nしかし，本願明細書には，特許請求の範囲請求項１に記載された「プレディケー\nト予測器」に求められる予測器自体の構成及び当該予測器に与えられる情報や出力\n情報を特定できる記載はなく，どの請求項についても，本願発明の課題を解決でき\nる水準に達した記載はない。\nしたがって，本願発明に係る特許請求の範囲の記載は，課題を解決するための一\n貫した手段が適切に反映されているとはいえず，サポート要件を満たしているとは\nいえない。\n(4)  明確性要件について\nア  本件補正前の請求項２，３及び１３には「プレディケート経路情報」という\n用語が用いられているが，このような用語を用いるだけでは「プレディケート経路\n情報」なるものが技術的にいかなるものであるのかが不明である（なお，本件審決\nでは，上記用語が本件補正後のどの請求項で用いられているものか言及はないが，\n本件補正後の請求項１，９及び１３ないし１５における「情報は，概略プレディケ\nート経路を表す，」との記載に対応するものと善解される。）。\nイ  本件補正前の請求項６，８ないし１０，１６，１８及び１９には「グローバ\nル履歴レジスタ」という用語が用いられているが，このような用語を用いるだけで\nは「グローバル履歴レジスタ」なるものが技術的にいかなるものであるのかが不明\nである。特に，どのような意味で「グローバル」であり，何の「履歴」に関するも\nのであるのかが不明である（なお，本件審決では，上記用語が本件補正後のどの請\n求項で用いられているものか個別的な言及はないが，本件補正後の請求項５ないし\n９及び１４において，「グローバル履歴レジスタ」との用語が用いられている。）。\nウ  本件補正前の請求項８，１０及び１８には「コアローカルプレディケート履\n歴レジスタ」という用語が用いられているが，このような語を用いるだけでは「コ\nアローカルプレディケート履歴レジスタ」なるものが技術的にいかなるものである\nのかが不明である。特に，どのような意味で「コアローカル」であるのかが不明で\nある（なお，本件審決では，上記用語が本件補正後のどの請求項で用いられている\nものか個別的な言及はないが，本件補正後の請求項６，８及び１４において，「コ\nアローカルプレディケート履歴レジスタ」との用語が用いられている。）。\nエ  本件補正前の請求項９，１１及び１９には「グローバルブロック履歴レジス\nタ」という語が用いられているが，このような語を用いるだけでは「グローバルブ\nロック履歴レジスタ」なるものが技術的にいかなるものであるのかが不明である。\n特に，どのような意味で「グローバル」であるのかが不明であり，「ブロック履\n歴」とは何を意味するのかが不明である（なお，本件審決では，上記用語が本件補\n正後のどの請求項で用いられているものか個別的な言及はないが，本件補正後の請\n求項７ないし９及び１４において，「グローバルブロック履歴レジスタ」との用語\nが用いられている。）。\n４  取消事由\n(1)  実施可能要件に係る判断の誤り（取消事由１）\n(2)  サポート要件に係る判断の誤り（取消事由２）\n(3)  明確性要件に係る判断の誤り（取消事由３）\n第３  当事者の主張\n１  取消事由１（実施可能要件に係る判断の誤り）について\n〔原告の主張〕\n(1)  本願明細書の記載\n本願明細書には，①対象のアーキテクチャは，ＥＤＧＥアーキテクチャのような\nハイブリッドなデータフローのアーキテクチャであること（【０００４】），②コ\nンパイラが，各ブロックの分岐命令に，プログラム内での分岐命令の順序にしたが\nって，３ビットの「終了コード」（「出口コード」ともいう。甲３「ｅｘｉｔ  ｃ\nｏｄｅ」）を割り当てること（【００２９】），③「概略プレディケート経路情\n報」は，コンパイラによって，分岐命令に符号化され，特定のブロックの具体的な\n分岐を識別可能であること（【００２２】，【００２６】），④予測器が，分岐命\n令に符号化された「概略プレディケート経路情報」を用いてプレディケート予測を\n行うこと（【００２２】）が記載されている。\n(2)  本願の出願時における技術常識\nア  甲９の１には，ＥＤＧＥアーキテクチャにおいて，出口分岐（ｅｘｉｔ  ｂ\nｒａｎｃｈ）ごとに，分岐命令に格納される３ビットの識別子が与えられることが\n記載されている。\nイ  甲１０の１には，ＥＤＧＥアーキテクチャにおいて，分岐命令内に３ビット\nの出口番号（ｅｘｉｔ  ｎｕｍｂｅｒ）が符号化されることが記載されている。\nウ  甲９の１及び甲１０の１の上記各記載に基づけば，「ＥＤＧＥアーキテクチ\nャにおいて，分岐命令に出口を識別する識別子を割り当て，それを分岐命令に符号\n化すること」は，本願の優先日前に技術常識であったということができる。\n(3)  本願明細書には前記(1)の記載があり，ＥＤＧＥアーキテクチャにおいて，\n分岐命令に出口を識別する例えば３ビットの識別子を割り当て，それを分岐命令に\n符号化することは，前記(2)のとおり，本願の優先日前に技術常識であったから，当\n業者であれば，本願の「概略プレディケート経路情報」は，出口を識別する例えば\n３ビットの「終了コード」（出口コード）として分岐命令に符号化された情報であ\nると理解する。\nまた，本願明細書には，予測器が，分岐命令に符号化された「概略プレディケー\nト経路情報」を用いてプレディケート予測を行うことが記載されているから（前記\n(1)④），当業者であれば，本願の「概略プレディケート経路情報」は，コンパイル\nのタイミングでコンパイラによって（【００２２】），分岐命令の分岐先を，例え\nば３ビットの終了コード（出口コード）で表した形式で，分岐命令に符号化された\n情報であり（【００２２】，【００２６】，【００２９】及び技術常識），予測器\nによってプレディケート予測に用いられる情報である（【００２２】）と理解する。\n(4)  以上によれば，本件審決における実施可能要件に係る判断は，誤りである。\n〔被告の主張〕\n(1)  本願発明の課題\n本願明細書の記載（【０００２】～【０００５】）によれば，本願発明の課題は，\n「（大規模な）分散型プロセッサ」で実行される「プログラムの制御フロー」にお\nいて「ｉｆ変換」により「分岐命令」から生成された「プレディケート命令」によ\nる「プレディケーション」を用いた場合に「全体に命令を分散させ」ることが可能\nとなるように行うに当たって，「プレディケート予測を単一のユニットに集中させ\nる」ことなく「（より正確な）プレディケート予測」を行うこと，とされている。\n(2)  本願発明に係る特許請求の範囲の記載\n特許請求の範囲請求項１の記載によれば，本願発明１の発明の発明特定事項は，\n①「マルチコアプロセッサ」に含まれた「プロセッサコア」の各々が「プレディケ\nート予測器」を備えること，②この「プレディケート予測器」のうちの「少なくと\nも１つ」が「対応するプロセッサコアにマッピングされたプレディケート命令の出\n力を予測」するように構成されたものであること，③「プレディケート命令」が\n「分岐命令」から「生成され」ること，④「分岐命令」が「複数のプロセッサコア\nのうちのどのプロセッサコアが前記分岐命令を実行するのに割り当てられるかを決\n定するブロックアドレス」を含む「命令ブロック」に含まれること，⑤「前記予測\n（「プレディケート命令の出力」の「予測」）」が「分岐命令内に符号化された」\n「概略プレディケート経路を表す」「情報」に基づきなされること，等である。\n上記①ないし③は，前記(1)の本願発明の課題のうち，分散型のアーキテクチャに\nおける「分岐命令」から生成された「プレディケート命令」による「プレディケー\nション」及び「プレディケート予測」に関するものであり，かつ「プレディケート\n予測」を「分散的に行わせる」という課題又は前提を示しているものと理解できる。\n他方で，上記①ないし⑤において，「命令ブロック」，「ブロックアドレス」及\nび「概略プレディケート経路」等の意義を明らかにする記載はない。また，上記②，\n④及び⑤について，本願発明の課題に対応する課題解決手段として，これらが相互\nにどのような役割を果たすのかを理解できる程度に一貫した記載となっておらず，\n「プレディケート命令の出力」，「命令ブロック」，「ブロックアドレス」，「概\n略プレディケート経路」及び「（概略プレディケート経路を表す）情報」の相互の\n関係が明らかとなるように記載されていない。とりわけ，「概略プレディケート経\n路を表す」「情報」の意義と，これを用いた処理の内容が明らかでなく，上記①の\n「プレディケート予測器」の機能や上記②の「プレディケート命令の出力」の「予\n測」の処理内容を当業者が把握することができるように記載されたものとなってい\nない。\n(3)  本願明細書の発明の詳細な説明の記載\nア  「概略プレディケート経路」及び「概略プレディケート経路を表す」「情\n報」の意義に関する記載\n本願明細書の発明の詳細な説明は，「分岐命令」に「符号化」された「概略プレ\nディケート経路情報」が，具体的にどのような情報であるのか，本願発明の課題で\nある「正確なプレディケート予測」において，どのような機能を担うのか，が特定\nされるように記載されておらず，「概略プレディケーション経路情報２０６」と本\n願発明の課題の前提となる「プレディケート命令」や「プレディケーション」との\n関係が特定されるようにすら記載されていない。\nイ  「概略プレディケート経路を表す」「情報」を用いた処理の内容に関する記\n載\n本願明細書の発明の詳細な説明は，「概略プレディケーション経路情報２０６」\nと，本願発明の課題の前提となる「プレディケート命令」や「プレディケーショ\nン」との関係が特定されるように記載されていない。\n【００２６】ないし【００３５】に履歴を用いた何らかの処理が記載されている\nとしても，「概略プレディケート経路情報」と本願発明の課題の前提となる「プレ\nディケート命令」や「プレディケーション」との関係は依然として特定されていな\nいから，「プレディケート命令」や「プレディケーション」との関係すら特定され\nない「概略プレディケート経路情報」を用いた履歴による「プレディケート予測」\nによって，本願発明の課題を解決することはできない。\nまた，本願明細書の発明の詳細な説明では，①「ローカル終了履歴」や「グロー\nバル終了履歴」との用語は，一般的な技術用語ではないにもかかわらず，これらの\n技術用語の意味が特定されるように記載されていない，②「コアローカル履歴レジ\nスタ」と「ローカル終了履歴」とが，同じ図番４０１で示されており，これらが，\n異なるものを指すのか，一般的な理解とは異なり同じものを指すのか，が明らかで\nない，③「予測テーブル４０６～４０９」はインデックスを与えられるとあるが，\n具体的にどのようなテーブルでどのような値を保持するのか記載されていない，④\n「コアローカル予測テーブル４１２」がいかなるテーブルで，どのような値を保持\nするものであるのか，理解できるように記載されていない，⑤「予測テーブル４０\n６～４０９」から取り出された値，「コアローカル予測テーブル４１２」からの値\nにわたる加算４０４の符号４０５に基づいた「予測」とは，いかなるものであるの\nか，当業者が理解することができるように記載されていない。\n(4)  原告の主張について\nア  原告は，本願明細書の【００２９】に「 出口コード」が記載されている\n（「終了コード」が「出口コード」と同義である）旨主張する。\nしかし，日本語の「終了」と「出口」とは，必ずしも同じ意味の用語ではなく，\n技術的な文脈では異なる用語として用いられる場合もある。しかも，【００２９】\nでは，分岐命令に割り当てられた「終了コード」が予測の対象とされているが，\n「終了コード」と「プレディケート予測」との関係が不明であり，予測の対象が\n「プレディケート命令の出力（ないし，プレディケートの値）」である旨をいう特\n許請求の範囲の記載やこれが「ブロックアドレス」である旨を示す【００２６】の\n記載とも整合しておらず，【００２９】の記載が意味するところも明らかでない。\nしたがって，【００２９】に記載された「終了コード」が「出口コード」である\nとする原告の上記主張は，本願明細書の記載内容に基づかないものであって，失当\nである。\nまた，本願明細書の【００２２】の記載は，抽象的な内容を示すにとどまり，こ\nの記載を根拠として，本願発明の課題を解決するための手段について実施可能な程\n度に具体的な記載があるということはできない。\nイ  原告が技術常識を示すものとして挙げる甲９の１及び甲１０の１は，いずれ\nも，いわゆる学術論文であって，ここで記載された内容を，発明の詳細な説明への\n記載を省略できるような技術常識であると，当然に取り扱うことができるようなも\nのではない。上記各文献を参照することで，仮に原告が主張するような本願明細書\nの理解に達することができるとしても，これらの学術文献を参照しなければ記載の\n意味を特定できない本願明細書が実施可能要件を満たしたものであるとはいえない。\nまた，この点を措いても，上記各文献において，「分岐命令に出口を識別する例\nえば３ビットの識別子を割り当て，それを分岐命令に符号化する」点は，広く商用\n化されたプロセッサにおいて採用されたアーキテクチャとはいえないＴＲＩＰＳア\nーキテクチャの一部として記載されているにすぎないから，上記の点が，本願明細\n書の発明の詳細な説明において記載を省略することが許される程度の技術常識であ\nるということはできない。\nさらに，原告は，本願明細書の【０００４】及び【００２１】において例示され\nたＥＤＧＥアーキテクチャが，上記各文献に記載されたＴＲＩＰＳアーキテクチャ\nであるかのように主張している。しかし，上記各文献においては，両者は明確に区\n別されているところ，「分岐命令に出口を識別する例えば３ビットの識別子を割り\n当て，それを分岐命令に符号化する」点は，「ＥＤＧＥアーキテクチャ」を定義す\nる特徴ではなく，そのバリエーションの一つである「ＴＲＩＰＳアーキテクチャ」\nの，「ＥＤＧＥアーキテクチャ」を定義する特徴とは異なる特徴として，記載され\nている。\n(5)  以上のとおり，本願明細書の発明の詳細な説明は，課題を解決するための手\n段について，当業者が実施できる程度に明確かつ十分に記載されているとはいえず，\n実施可能要件を満たしていない。\n２  取消事由２（サポート要件に係る判断の誤り）について\n〔原告の主張〕\n(1)  本件審決における判断は，本願明細書で実施形態として示された，「コアロ\nーカル履歴レジスタと予測テーブルとが連結された組合せ」又は「グローバル分岐\n履歴レジスタと予測テーブルとが連結された組合せ」が，本願発明の課題を解決す\nるためには必須の手段であることを前提に，本願発明に係る特許請求の範囲の記載\nは，これらの全ての手段を備えるものではないから，サポート要件を満たさないと\nするものである。\nしかし，本願明細書の【００１３】に記載されているように，本願明細書に記載\nされた実施形態は，本願発明の例示的な構成にすぎず，本願発明の課題を解決する\nために，実施形態に示された手段の全てが必須というわけではない。\nしたがって，本件審決におけるサポート要件に係る判断は，誤りである。\n(2)  被告の主張について\n被告は，本願発明１に係る特許請求の範囲請求項１の記載が，単一のプレディケ\nート予測器によってプレディケート予測を行う態様を包含するものであることを前\n提に，当該態様では，プレディケート予測を単一のユニットに集中させることなく\nプレディケート予測を行うという本願発明の課題を解決できない旨主張する。\nしかし，請求項１には「前記複数のプロセッサコアの各々がプレディケート予測\n器を備え」と記載されており，複数のプロセッサコアの各々がプレディケート予測\n器を備えることが明確に記載されている。そして，請求項１における「少なくとも\n１つのプレディケート予測器が…プレディケート命令の出力を予測するように構成\nされ」との記載は，複数のプロセッサコアの各々がプレディケート予測器を備える\nことを前提としたものであり，複数のプレディケート予測器の全てが予測を行わな\nい態様を除外した記載にすぎない。\nここで，仮に常に単一のプレディケート予測器によってプレディケート予測が行\nわれるとすれば，複数のプロセッサコアの各々にプレディケート予測器を備えた技\n術的意義がないこととなるのは明らかであるから，当業者であれば，請求項１は，\n常に単一のプレディケート予測器によってプレディケート予測が行われる態様を含\nむものではないと理解する。\nすなわち，本願発明１は，複数のプロセッサコアの各々にプレディケート予測器\nを備えたことにより，プレディケート予測を単一のユニットに集中させることなく\nプレディケート予測を行うことが可能な構成としたものであって，プレディケート\n予測を単一のユニットに集中させることなくプレディケート予測を行うという課題\nを解決できない態様を包含するものではない。\n〔被告の主張〕\n(1)  本願発明１の発明特定事項は，前記１〔被告の主張〕(2)のとおりである。\n①及び②において，「プロセッサコア」の各々が「プレディケート予測器」を備え\nる一方で，プレディケート命令の出力を予測するのは，そのうちの少なくとも１つ\nとされており，「プレディケート予測」を行う「プレディケート予測器」は，単独\nであっても構わない記載となっているところ，「プレディケート予測」自体は，複\n数のプロセッサであることを前提としたものではない（乙２，乙３の１）。\nしたがって，本願発明１に係る特許請求の範囲の記載は，それ自体は複数のプロ\nセッサを前提としていない「プレディケート予測」を行う「プレディケート予測\n器」を複数のプロセッサに備えつつ単一の「プレディケート予測器」によって「プ\nレディケート予測」を行う態様を包含した記載となっている。\n(2)  これに対し，本願明細書の発明の詳細な説明には，本願発明が，「プレディ\nケート予測を単一のユニットに集中させる」ことなく「プレディケート予測」を行\nうことを課題とするものであることが記載されている。\n(3)  前記(1)と(2)の記載を対比すると，特許請求の範囲に包含される，単一の\n「プレディケート予測器」によって「プレディケート予測」を行う態様によって，\n発明の詳細な説明に記載された，「プレディケート予測を単一のユニットに集中さ\nせる」ことなく「プレディケート予測」を行うという課題を解決できないことは，\n明らかである。\nしたがって，特許請求の範囲請求項１の記載は，当業者が発明の詳細な説明に記\n載された課題を解決できると認識できる範囲を超えて，この課題と無関係の態様を\nも含み得るように一般化されたものを記載したものであるから，サポート要件に違\n反する。\n３  取消事由３（明確性要件に係る判断の誤り）について\n〔原告の主張〕\n(1)  「プレディケート経路情報」について\n前記１〔原告の主張〕のとおり，当業者であれば，本願明細書の記載及び本願の\n優先日前における技術常識に基づいて，本願発明における「概略プレディケート経\n路情報」を理解することができる。\nしたがって，「プレディケート経路情報」という用語についても，その技術的意\n味は明確である。\n(2)  「グローバル履歴レジスタ」，「コアローカルプレディケート履歴レジス\nタ」及び「グローバルブロック履歴レジスタ」について\n「グローバル履歴レジスタ」は，「コア２１１～２１３の各々の中で更新される\nグローバル履歴情報を維持」するものである（【００２７】）。\nそして，本願明細書において，【００２８】及び図６Ａには，グローバル履歴レ\nジスタの実施例として，コア２１１～２１３の各々に設けられたコアローカル履歴\nレジスタ６００（グローバル履歴レジスタ６０１～６０３）が開示されているとこ\nろ，この実施例は，【００３３】の「いくつかの実施例では，グローバル履歴レジ\nスタは，コアローカルプレディケート履歴レジスタである。」との記載に対応する。\nまた，【００２９】及び図６Ｂには，グローバル履歴レジスタの実施例として，コ\nア２１１～２１３に対して１つのグローバルブロック履歴レジスタ６０５が設けら\nれた構成が開示されているところ，この実施例は，【００３３】の「他の実施例で\nは，グローバル履歴レジスタは，グローバルブロック履歴レジスタである。」との\n記載に対応する。\nすなわち，図６Ａに示すように，グローバル履歴レジスタを複数のコアのそれぞ\nれに設けたものがコアローカル履歴レジスタであり，グローバル履歴レジスタを複\n数のコアで共有したものがグローバルブロック履歴レジスタである。\n以上のとおり，本願明細書には，グローバル履歴レジスタ，コアローカルプレデ\nィケート履歴レジスタ及びグローバルブロック履歴レジスタの構成例が明確に記載\nされている。\nしたがって，当業者にとって，特許請求の範囲に記載された「グローバル履歴レ\nジスタ」，「コアローカルプレディケート履歴レジスタ」及び「グローバルブロッ\nク履歴レジスタ」という用語の技術的意味は明確である。\n(3)  以上によれば，本件審決における明確性要件に係る判断は，誤りである。\n〔被告の主張〕\n(1)  「プレディケート経路情報」について\n本願明細書には，「概略プレディケート経路情報」（「概略プレディケートを表\nす」「情報」）が具体的にどのような情報であるのか，及びこれを用いた処理の内\n容について，明確に記載されていない。\nしたがって，「プレディケート経路情報」は，本願明細書の記載を参酌しても，\nその技術的な意味，内容が明確であるということはできない。\n(2)  「グローバル履歴レジスタ」，「コアローカルプレディケート履歴レジス\nタ」及び「グローバルブロック履歴レジスタ」について\nア  グローバル履歴レジスタ\n特許請求の範囲に記載された「グローバル履歴レジスタ」とは，どのような意味\nで「グローバル」であり，何の「履歴」に関するものか不明であるところ，本願明\n細書の記載を参酌しても，どのような意味で「グローバル」であり，何の「履歴」\nに関するものかは記載されていない。\nしたがって，「グローバル履歴レジスタ」は，その技術的意味が明確であるとい\nうことはできない。\nイ  コアローカルプレディケート履歴レジスタ\n特許請求の範囲に記載された「コアローカルプレディケート履歴レジスタ」とは，\nどのような意味で「コアローカル」であり，何の「履歴」に関するものか不明であ\nるところ，本願明細書の記載を参酌しても，どのような意味で「コアローカル」で\nあり，何の「履歴」に関するものかは記載されていない。\nしたがって，「コアローカルプレディケート履歴レジスタ」は，その技術的意味\nが明確であるということはできない。\nまた，特許請求の範囲請求項６には「グローバル履歴レジスタがコアローカルプ\nレディケート履歴レジスタを備え」との記載があるが，「グローバル」と「ローカ\nル」とは相反する語であることからも，「コアローカル」の意味するところが不明\n確となっている。\nウ  グローバルブロック履歴レジスタ\n特許請求の範囲に記載された「グローバルブロック履歴レジスタ」とは，どのよ\nうな意味で「グローバル」であり，何の「履歴」に関するものか不明であるところ，\n本願明細書の記載を参酌しても，どのような意味で「グローバル」であり，何の\n「履歴」に関するものかは記載されていない。\nしたがって，「グローバルブロック履歴レジスタ」は，その技術的意味が明確で\nあるということはできない。\n第４  当裁判所の判断\n１  本願発明について\n(1)  本願発明に係る特許請求の範囲は，前記第２の２記載のとおりであるところ，\n本願明細書（甲１）の発明の詳細な説明には，おおむね，次の記載がある（図２，\n４，６Ａ及び６Ｂについては，別紙本願明細書図面目録を参照。）。\nア  背景技術\n【０００２】分散型の，ウィンドウの大きなプロセッサでは，プレディケーショ\nンは，プログラムの制御フローにおいて頻繁に変化を生じさせる分岐を，命令を保\n護することができるデータ値に変換するために使用される技術であり，このデータ\n値により，どの命令を実行しどの命令を実行しないかを決定することができる。プ\nレディケーションによって制御フローを直線化することができ，分岐がとり得る可\n能な両経路に提供される命令が折り畳まれる（ｔｏ  ｂｅ  ｃｏｌｌａｐｓｅｄ）\nのを容易にし，全ての命令をフェッチし，プレディケートに応じて命令の一部のみ\nを実行する。このモデルは，大きなコードブロックを生成して多くの実行ユニット\n全体に広めるには効果的であり得るが，プレディケートを用いないアーキテクチャ\nでは分岐であったはずのプレディケートが，実行時に評価され得るという問題が生\nじ得る（フェッチされてからすぐに予測される分岐とは異なる）。プレディケート\nの評価のこの遅延により，性能が大幅に低下し得る。\n【０００３】現在の技術では，２つの，おそらくは望ましくない選択肢のうちの\n１つを採用する。１つ目のそのような技術は，プレディケーションを回避すること\nを選び，これは，あらゆる制御判断を分岐として残し得るとともに，大規模な分散\n型プロセッサ全体に命令を分散させることを不可能にし得る。２つ目の選択肢は，\n命令をプレディケートする一方，フェッチおよびプレディケート予測を単一のユニ\nットに集中させることであり得るが，フェッチの帯域幅が狭くなり，大規模な分散\n型マルチコアプロセッサ全体に命令を分散させることはやはり不可能になる。\n【０００４】ＥＤＧＥ（エクスプリジット・データ・グラフ・エグゼキューショ\nン：Ｅｘｐｌｉｃｉｔ  Ｄａｔａ  Ｇｒａｐｈ  Ｅｘｅｃｕｔｉｏｎ）アーキテク\nチャのようなハイブリッドなデータフローのアーキテクチャでは，制御フローには\n分岐とプレディケートとが混在していることがある。どの分岐がプレディケートに\nｉｆ変換（ｉｆ－ｃｏｎｖｅｒｔ）され得るかを決定することは，複雑な問題にな\nり得る。予測の難しい分岐がプレディケートされるのを好ましいものとすることが\nでき，制御フローを十分に直線化するのに役立つ分岐がプリディケートされる。残\nりの制御ポイントは，分岐として残され得る。そのような区分によって，予測スキ\nームは全ての分岐と最も予測可能なプレディケートを予測することができ，予測の\n難しいプレディケートの評価は遅らせて実行時に選択する。\nイ  発明が解決しようとする課題\n【０００５】しかし，分散型のデータフローのマシンでは，完全に制御の履歴を\n管理して正確なプレディケート予測を容易にすることは難しいことがある。この分\n野における従来の試みでは，通常，予測の難しい分岐に“ｉｆ変換”を適用するコ\nンパイラ，および，ランタイム情報の不足によりコンパイラが誤りを犯した場合の，\n回復するための特定のマイクロアーキテクチャ機構に依存してきた。その結果，現\n在知られているほとんどのデータフローマシンは，商業用途で効果的であり得る方\n式では，プレディケート予測を利用していない。\nウ  課題を解決するための手段\n【０００６】システム，方法，およびコンピュータによってアクセス可能な媒体\nの例が，分散型マルチコアアーキテクチャにおいてプレディケート予測を生成する\nために提供される。そのようなシステム，方法，およびコンピュータによってアク\nセス可能な媒体を用いることで，分岐命令についての概略プレディケート経路情報\n（ａｐｐｒｏｘｉｍａｔｅ  ｐｒｅｄｉｃａｔｅ  ｐａｔｈ  ｉｎｆｏｒｍａｔｉ\nｏｎ）をインテリジェントに符号化することができる。この静的に生成された情報\nを用いることで，分散型プレディケート予測器は，信頼性の高いプレディケートの\n正確な予測に役立ち得る，動的なプレディケート履歴を生成することができ，同時\nにコア間の通信を最小にする。\nエ  発明を実施するための形態\n【００２１】本明細書で説明されるのは，分散型マルチコアマイクロアーキテク\nチャのためのプレディケート予測スキームの例であり，これはプロセッサ１０１上\nで実装することができ，例えば，ＥＤＧＥ（ｅｘｐｌｉｃｉｔ  ｄａｔａ  ｇｒａ\nｐｈ  ｅｘｅｃｕｔｉｏｎ）マイクロアーキテクチャとともに使用されるようにな\nされ得る。分散型スキームの例は，分岐命令において概略プレディケート経路情報\nをインテリジェントに符号化するコンパイラに依存し得る。この静的に生成された\n情報を用いて，分散型プレディケート予測器は，信頼性の高いプレディケートの正\n確な予測を容易にしつつコア間の通信を低減する，動的なプレディケート履歴を生\n成することができる。正確かつ効率的な分散型プレディケート予測スキームの例に\nより，コンパイラが，例えばオーバーヘッド計算を軽減するプレディケート予測器\nによって，コードを積極的にプレディケートすることが容易になる。\n【００２２】したがって，図２に示されるように，コンピューティング環境２０\n１がコンピュータシステム１００に設けられてよく，ソフトウェアアプリケーショ\nンプログラム２０２およびコンパイラ２０４を含んでもよい。アプリケーションプ\nログラム２０２は命令データフロー２０３を生成することができ，命令データフロ\nー２０３の一部または多くは，分岐命令であってよい。コンパイラ２０４は，概略\nプレディケート経路情報２０６によって，分岐命令２０５を符号化することができ\nる。結果として得られる命令データ２０７は，実行のためにプロセッサ１０１，２\n１０に流れ得る。プロセッサ２１０は複数のプロセッサコア（簡単にするために，\n例えば３つのプロセッサコアがコア２１１～２１３として図示される）を含んでも\nよく，複数のプロセッサコアの各々はプレディケート予測器２１４～２１６の１つ\nをそれぞれ含んでもよい。そして，これらの予測器２１４～２１６は，コンパイラ\nで符号化されたプレディケート経路情報２０６を用いて，信頼性の高いプレディケ\nートの正確な予測を容易にする（ブロック２２０）。\n【００２６】さらに，それぞれの所有者コア２１１～２１３のうちの１つまたは\n複数は，次のブロックアドレスを予測しやすくすることができる。コア２１１～２\n１３のそれぞれは，完全な機能ブロック予測器２１４～２１６の１つをそれぞれ含\nんでもよく，予測器は複数のコアについて同一であっても，互いに異なっていても\nよい。ブロック予測器２１４～２１６の次の１つは，どの分岐がブロックから取り\n出されるかを予測できる終了予測器と，予測される終了目標に基づいてブロック２\n１４～２１６の次の１つのアドレスを予測できる，予測器２１４～２１６のうち，\n関連する目標となる予測器とを含んでもよい。図４を参照すると，予測器２１４～\n２１６の終了予測器は，２レベルのローカル予測器，グローバル予測器，および／\nまたは選択予測器を含んでもよく，これらは，ローカル終了履歴４０１およびグロ\nーバル終了履歴４０２を使用できる。終了履歴４０１，４０２は，それぞれのブロ\nックの各分岐命令に対して静的に割り当てられた，概略プレディケート経路情報２\n０６を用いて，コア２１１～２１３から生成され得る。概略プレディケート経路情\n報２０６は，分岐命令に符号化されることが可能であり，特定のブロックの具体的\nな分岐を識別することができる。コンパイラ２０４は，最初は，それぞれのブロッ\nクの分岐命令の順序に基づいて，概略プレディケーション経路情報２０６を割り当\nててもよい。コア２１１～２１３は，終了を用いて，（従来のアーキテクチャで使\n用され得るような）取得された／取得されていない情報の代わりに，関連する予測\n器の中でローカル履歴およびグローバル履歴を生成することができる。\n【００２７】コア２１１～２１３の各々は，コアにマッピングされたプレディケ\nート命令の出力を予測することができるプレディケート予測構成によって増強され\n得る。基本予測器とグローバル履歴レジスタとを含み得る，グローバル履歴に基づ\nく予測器が，各コアで使用され得る。そのようなグローバル履歴予測器は，コア２\n１１～２１３の各々の中で更新されるグローバル履歴情報を維持し，同時にコア２\n１１～２１３の間での通信を減らそうとしてもよい。まず図４を参照すると，一実\n施例では，幾何履歴長（ＧＥＨＬ：ｇｅｏｍｅｔｒｉｃ  ｈｉｓｔｏｒｙ  ｌｅｎ\nｇｔｈ）予測器４００は，分散型プレディケート予測を実行するための基本予測器\nとして使用され得る。ＧＥＨＬ予測器４００は，グローバル分岐履歴レジスタ４０\n２および分岐アドレス（例えばコアローカル履歴レジスタ４０１）の独立の機能に\nよってインデックスを与えられる，いくつかの予測テーブル４０６～４０９を含ん\nでもよい。予測は，テーブル４０６～４０９から取り出された値，ならびにコアロ\nーカル履歴レジスタ４０１に関連するコアローカル予測テーブル４１２からの値に\nわたる加算４０４の符号４０５に基づいてよい。本実施例では，記憶の大部分が，\n最近の分岐履歴の相互関係を得るために使用され得るが，依然として，一定の古い\n分岐との相互関係を得ることも容易にする。\n【００２８】ここでグローバルプレディケート履歴情報を見ると，いくつかの適\n切な実施例が与えられ得る。ある実施例は高い正確性を実現することができ，同時\nにコア２１１～２１３の間の通信を低減する。図６ａを参照すると，そのような実\n施例の１つでは，コアローカルプレディケート履歴レジスタ（ＣＬＰＨＲ）６００\nが使用され得る。したがって，例えば，予測器は，別のコアと何ら情報を通信する\nことなく，コア内のみで使用可能な情報を用いるだけで，提供され得る。本実施例\nでは，コア２１１～２１３の各々は，そのようなコアにマッピングされるプレディ\nケート命令を追跡できる，自身に固有の唯一のグローバル履歴レジスタ６０１～６\n０３を有してよい。そして，コンパイラ２０４は，従属命令をそのコアにマッピン\nグしようとしてもよい。その結果，従属プレディケート命令は同一のコアにマッピ\nングされることが可能であり，これにより，ＣＬＰＨＲ６００がそれらの命令の間\nの相互関係を利用しやすくなり得る。\n【００２９】図６ｂを参照すると，別の実施例では，グローバルブロック履歴レ\nジスタ（ＧＢＨＲ）６０５が提供され得る。分散型の終了予測器がブロックの終了\nコードを予測すると，そのような終了予測器は，終了予測番号またはコードを連結\nさせることもでき，したがってＧＢＨＲ６０５を生成する。本実施例では，コンパ\nイラ２０４は，各ブロック内の分岐命令に，プログラム内での分岐命令の順序にし\nたがって，３ビットの終了コードを割り当てることができる。したがって，ＧＢＨ\nＲ６０５は，グローバル履歴情報として使用され得る。ブロック内のプレディケー\nトからの情報を何ら使用することなく，終了予測器とプレディケート予測器の両方\nが同一の履歴情報を共有することができ，これにより，追加の通信機構の必要性を\n減らす，またはなくすことができる。\n【００３１】図４を再び参照すると，いくつかの実施例では，プレディケート予\n測の正確性を推定するように構成され得る，信頼性予測テーブル４１０が提供され\n得る。したがって，信頼性推定テーブル４１０は，予測器が，予測の難しいプレデ\nィケート（例えば信頼性の低いプレディケート）を「除去する」ことを容易にし得\nる。信頼性予測テーブル４１０のエントリはカウンタ，例えばカウンタ４１１をリ\nセットしていてもよく，カウンタは，分岐における正しい連続的な予測の数を計数\nすることができる。例えば，誤った予測が発生すると，カウンタ４１１は０にリセ\nットされ得る。プレディケートは，対応するカウンタの値がある閾値よりも高い場\n合，予測されるように選択され得る。いくつかの実施例では，信頼性テーブルのエ\nントリ（例えばカウンタ４１１）は，より少数のコアで構成するために信頼性の高\nい閾値をサポートすることができる，３ビットのリセットカウンタであってよい。\n【００３２】本発明の方法の実施例が図５として示されている。コンピュータシ\nステム１００はプロセッサ１０１を含んでもよく，プロセッサ１０１は実行される\nと，以下の手順を実行するように構成され得る。具体的には，プロセッサ１０１は，\nコンパイラ２０４に，概略プレディケート経路情報を用いて分岐命令を符号化させ\nることができる（手順５０１）。次に，結果として得られる命令データが，実行の\nためにプロセッサ１０１に提供され得る（手順５０２）。次いで，各プロセッサコ\nアと関連するこれらの予測器は，コンパイラで符号化された経路情報を使用して，\n信頼性の高いプレディケートの正確な予測を容易にすることができる（手順５０\n３）。\n【００３３】いくつかの実施例に開示されているのは，複数のプロセッサコアを\n含むマルチコアプロセッサを含むコンピューティングシステムであり，コアの各々\nは少なくとも１つのプレディケート予測器を含み，プレディケート予測器はプレデ\nィケート予測を生成する。いくつかの実施例では，コンピューティングシステムは，\n符号化されたプレディケート経路情報を有する１つまたは複数の分岐命令を含む，\nアプリケーションプログラムをさらに含んでもよい。別の実施例では，プレディケ\nート経路情報を符号化することは，コンパイラによって実現される。別の様々な実\n施例においては，１つまたは複数の分岐命令の各々のブロックアドレスによって，\nマルチコアプロセッサのどのプロセッサコアがそれぞれの分岐命令を実行するのか\nが決定される。他の実施例では，マルチコアプロセッサは，エクスプリジット・デ\nータ・グラフ・エグゼキューション・マイクロアーキテクチャを含む。さらに他の\n実施例では，１つまたは複数のプレディケート予測器は，基本予測器およびグロー\nバル履歴レジスタを含む。別の実施例では，基本予測器は，幾何履歴長予測器であ\nる。一方いくつかの実施例では，グローバル履歴レジスタは，コアローカルプレデ\nィケート履歴レジスタである。他の実施例では，グローバル履歴レジスタは，グロ\nーバルブロック履歴レジスタである。さらに他の実施例では，グローバル履歴レジ\nスタは，コアローカルプレディケート履歴レジスタおよびグローバルブロック履歴\nレジスタを含む。さらに別の実施例では，コンピューティングシステムは，信頼性\n予測テーブルをさらに含む。\n【００３４】他の実施例で開示されているのは，マルチコアプロセッサの複数の\nプロセッサコアを介して１つまたは複数の分岐命令を提供することを含む，マルチ\nコアプロセッサ内でプレディケート予測を提供し，プレディケート予測器を用いて\nプレディケート予測を生成するための方法であって，プロセッサコアの各々は少な\nくとも１つのプレディケート予測器を含む。いくつかの実施例では，方法は，１つ\nまたは複数の分岐命令内の概略プレディケート経路情報を符号化することを，さら\nに含んでもよい。別の例では，プレディケート経路情報の符号化は，コンパイラに\nよって実行される。さらなる実施例では，方法は，どのプロセッサコアが１つまた\nは複数の分岐命令の各々のブロックアドレスを用いて分岐命令を実行するかを決定\nすることを，さらに含む。一方別の実施例では，１つまたは複数のプレディケート\n予測器は，基本予測器およびグローバル履歴レジスタを含む。さらに別の実施例で\nは，基本予測器は，幾何履歴長予測器である。さらに別の実施例では，グローバル\n履歴レジスタは，コアローカルプレディケート履歴レジスタである。様々な別の実\n施例では，グローバル履歴レジスタは，グローバルブロック履歴レジスタである。\n【００３５】さらに別の実施例で開示されているのは，マルチコアプロセッサコ\nンピューティングシステム内でプレディケート予測を提供するためのコンピュータ\n実行可能命令が記憶されている，コンピュータによってアクセス可能な媒体であっ\nて，処理構成が，命令を実行するときに，１つまたは複数の分岐命令内の概略プレ\nディケート経路情報を符号化することを含む手順を実行するように構成され，マル\nチコアプロセッサの１つまたは複数のプロセッサコア上の１つまたは複数の分岐命\n令を実行し，１つまたは複数のプロセッサコアの各々は，１つまたは複数のプレデ\nィケート予測器を含み，処理構成はさらに，１つまたは複数のプレディケート予測\n器を用いてプレディケート予測を生成する。\n(2)  前記(1)の記載によれば，本願明細書には，本願発明に関し，以下の点が開\n示されているものと認められる。\nア  本願発明は，分散型マルチコアアーキテクチャにおいてプレディケート予測\nを生成するためのシステム，方法及びコンピュータによってアクセス可能な媒体に\n関する（【０００６】，【００２１】）。\nプレディケーションは，プロセッサが実行するプログラムの制御フローにおいて\n頻繁に変化を生じさせる分岐を，命令のためのデータ値（プレディケート）に変換\nするために使用される技術であり，全ての命令をフェッチ（読み込み）して，その\nうちの一部の命令のみを，上記データ値（プレディケート）に応じて，実行するよ\nうに決定することで，プログラムの制御フローを直線化することができる。分散型\nのマルチコアプロセッサにおいてプレディケーションを使用するモデルは，大きな\nコードブロックを生成して，多くの実行ユニット全体に広めるには効果的であるが，\nフェッチされてからすぐに予測される分岐とは異なり，プレディケートが命令の実\n行時に評価されるため，この評価の遅延により，性能が大幅に低下するという問題\nがある（【０００２】）。上記性能の低下に対処する方法として，①プレディケー\nションを回避することが考えられるが，この方法では，あらゆる制御判断を分岐と\nして残すことになるため，大規模な分散型のマルチコアプロセッサ全体に命令を分\n散させることができない。他の方法として，②プレディケーションを行うに当たり，\nフェッチ及びプレディケート予測を単一のユニットに集中させることが考えられる\nが，この方法では，フェッチの帯域幅が狭くなるため，大規模な分散型のマルチコ\nアプロセッサ全体に命令を分散させることができない（【０００３】）。他方，Ｅ\nＤＧＥアーキテクチャのようなハイブリッドなデータフローのアーキテクチャでは，\n分岐とプレディケートとが混在していることがあるが，この場合，どの分岐をプレ\nディケートにｉｆ変換するか決定するのが複雑となり（【０００４】），また，完\n全に制御の履歴を管理して正確なプレディケート予測を 行うことは困難である\n（【０００５】）。そのため，現在知られているほとんどの分散型のデータフロー\nマシンでは，プレディケート予測が利用されていないという問題があった（【００\n０５】）。\nイ  本願発明は，前記アの問題を課題とし，かかる課題を解決するため，分散型\nマルチコアアーキテクチャにおいてプレディケート予測を生成するためのシステム，\n方法及びコンピュータによってアクセス可能な媒体を提供する（【０００６】）。\nウ  本願発明のシステム，方法及びコンピュータによってアクセス可能な媒体を\n用いることにより，分岐命令についての概略プレディケート経路情報をインテリジ\nェントに符号化することができ，この静的に生成された概略プレディケート経路情\n報を用いることで，分散型プレディケート予測器は，信頼性の高いプレディケート\nの正確な予測に役立ち得る，動的なプレディケート履歴を生成することができ，同\n時にコア間の通信を最小にするという作用効果を奏する（【０００６】）。\n２  取消事由１（実施可能要件に係る判断の誤り）について\n(1)  特許法３６条４項１号が実施可能要件を定める趣旨は，明細書の発明の詳細\nな説明に，当業者がその実施をすることができる程度に発明の構成等が記載されて\nいない場合には，発明が公開されていないことに帰し，発明者に対して特許法の規\n定する独占的権利を付与する前提を欠くことになるからであると解される。\nそして，物の発明における発明の実施とは，その物の生産，使用等をする行為を\nいうから（同法２条３項１号），物の発明について上記の実施可能要件を充足する\nためには，当業者が，明細書の発明の詳細な説明の記載及び出願当時の技術常識と\nに基づいて，過度の試行錯誤を要することなく，その物を製造し，使用することが\nできる程度の記載があることを要する。\n(2)  本願発明１について\nア  前記１(2)によれば，本願発明１は，ＥＤＧＥアーキテクチャのようなハイブ\nリッドなデータフローのアーキテクチャでは，分岐とプレディケートとが混在して\nいることがあるが，この場合，どの分岐をプレディケートにｉｆ変換するか決定す\nるのが複雑となり，また，完全に制御の履歴を管理して正確なプレディケート予測\nを行うことは困難であるため，現在知られているほとんどの分散型のデータフロー\nマシンでは，プレディケート予測が利用されていないという問題を課題とし，かか\nる課題を解決するため，分散型マルチコアアーキテクチャにおいてプレディケート\n予測を生成するためのシステムを提供するものであり，本願発明１のシステムを用\nいることにより，分岐命令についての概略プレディケート経路情報をインテリジェ\nントに符号化することができ，この静的に生成された概略プレディケート経路情報\nを用いることで，分散型プレディケート予測器は，信頼性の高いプレディケートの\n正確な予測に役立ち得る，動的なプレディケート履歴を生成することができ，同時\nにコア間の通信を最小にするという作用効果を奏するというものである。\nそして，本願発明１に係る特許請求の範囲（請求項１）の記載によれば，本願発\n明１は，複数のプロセッサコアを含むマルチコアプロセッサを備えるコンピューテ\nィングシステムであって，①複数のプロセッサコアの各々がプレディケート予測器\nを備え，②少なくとも１つのプレディケート予測器が，複数のプロセッサコアのう\nちの対応するプロセッサコアにマッピングされたプレディケート命令の出力を予測\nするように構成され，③プレディケート命令は，命令ブロックに含まれる分岐命令\nから生成され，④命令ブロックは，複数のプロセッサコアのうちのどのプロセッサ\nコアが分岐命令を実行するのに割り当てられるかを決定するブロックアドレスを含\nみ，⑤予測は，分岐命令内に符号化された情報に基づき，分岐命令内に符号化され\nた情報は，概略プレディケート経路を表す，という構成を有する。すなわち，本願\n発明１は，「複数のプロセッサコア」の各々が備える「プレディケート予測器」の\nうち，少なくとも１つの「プレディケート予測器」が，分岐命令内に符号化された\n「概略プレディケート経路を表す」「情報」に基づき，対応するプロセッサコアに\nマッピングされた「プレディケート命令の出力を予測する」というものである。\nそうすると，本願発明１が実施可能要件を満たすというためには，本願明細書の\n発明の詳細な説明に，少なくとも，「複数のプロセッサコア」という分散された環\n境において，「プレディケート予測器」が「概略プレディケート経路を表す情報」\nに基づいて「プレディケート命令の出力を予測する」という処理を行うことにより，\n信頼性の高いプレディケートの正確な予測に役立ち得るプレディケート履歴を生成\nすることができ，同時にコア間の通信を最小にするという作用効果を奏するコンピ\nューティングシステムを製造し，使用することができる程度，すなわち，「概略プ\nレディケート経路を表す情報」の意義，及び，「複数のプロセッサコア」という分\n散された環境に備えられた「プレディケート予測器」において，信頼性の高いプレ\nディケートの正確な予測に役立ち得るプレディケート履歴を生成し，コア間の通信\nを最小にするために，「概略プレディケート経路を表す情報」に基づいて行われる\n「予測」の処理内容を当業者が理解することができる程度の記載があることを要す\nるというべきである。\nイ  「概略プレディケート経路を表す情報」についての記載\n本願明細書には，「概略プレディケート経路を表す情報」に関し，【００２１】，\n【００２２】，【００２６】，【００３２】，【００３４】及び【００３５】の記\n載があるが，これらの記載は，いずれも，コンパイラによって，「概略プレディケ\nート経路を表す情報」に相当する「概略プレディケート経路情報」が分岐命令に符\n号化されることを示しているにすぎず，「予測」に用いられる「概略プレディケー\nト経路を表す情報」が，具体的にどのような内容のものであるのか特定されるよう\nに記載されていない。\nそして，当業者にとって，本願の優先日当時の技術常識に基づき，「概略プレデ\nィケート経路を表す情報」が具体的にどのような内容のものであるのかが自明であ\nることを認めるに足りる証拠はない。\nしたがって，本願明細書の発明の詳細な説明は，当業者が「概略プレディケート\n経路を表す情報」の意義を理解することができるように記載されているということ\nはできない。\nウ  「概略プレディケート経路を表す情報」に基づいて行われる「予測」の処理\n内容についての記載\n本願明細書には，「複数のプロセッサコア」という分散された環境に備えられた\n「プレディケート予測器」において行われる「プレディケート命令の出力」の「予\n測」処理の内容に関し，【００２６】ないし【００２９】の記載があり，ここには，\n「概略プレディケート経路情報」を用いて，２つの履歴レジスタ，すなわち，コア\nローカル履歴レジスタとグローバル分岐履歴レジスタを生成し，それを用いて「プ\nレディケート命令の出力」の予測を行うこと（【００２６】，【００２７】），並\nびに，上記グローバル分岐履歴レジスタに対応するグローバル履歴レジスタとして，\n「コアローカルプレディケート履歴レジスタ」を用いる実施例（【００２８】，図\n６Ａ）及び「グローバルブロック履歴レジスタ」を用いる実施例（【００２９】，\n図６Ｂ）が記載されている。\nしかし，上記記載からは，「概略プレディケート経路情報」からコアローカル履\n歴レジスタとグローバル分岐履歴レジスタという二つの履歴レジスタをどのような\n処理により分けて生成するのか，また，当該二つの履歴レジスタをどのような処理\nにより「プレディケート命令の出力」の「予測」において使い分けるのか，さらに，\n上記二つの履歴レジスタを用いた「プレディケート命令の出力」の「予測」を信頼\n性の高く正確なものとするために「概略プレディケート経路情報」として具体的に\nどのような内容が必要とされるのか，把握することはできない。\nしたがって，本願明細書の上記記載から，「複数のプロセッサコア」という分散\nされた環境に備えられた「プレディケート予測器」において，信頼性の高いプレデ\nィケートの正確な予測に役立ち得るプレディケート履歴を生成し，コア間の通信を\n最小にするために，「概略プレディケート経路を表す情報」に基づく「予測」の処\n理が具体的にどのように行われているのか明らかであるということはできない。\nそして，当業者にとって，本願の優先日当時の技術常識に基づき，「複数のプロ\nセッサコア」という分散された環境に備えられた「プレディケート予測器」におい\nて，信頼性の高いプレディケートの正確な予測に役立ち得るプレディケート履歴を\n生成し，コア間の通信を最小にするために，「概略プレディケート経路を表す情\n報」に基づいて行われる「予測」の処理内容が自明であることを認めるに足りる証\n拠はない。\nそうすると，本願明細書の発明の詳細な説明は，当業者が，「複数のプロセッサ\nコア」という分散された環境に備えられた「プレディケート予測器」において，信\n頼性の高いプレディケートの正確な予測に役立ち得るプレディケート履歴を生成し，\nコア間の通信を最小にするために，「概略プレディケート経路を表す情報」に基づ\nいて行われる「予測」の処理内容を理解することができるように記載されていると\nいうことはできない。\nエ  以上によれば，本願明細書の発明の詳細な説明は，「複数のプロセッサコ\nア」という分散された環境において，「プレディケート予測器」が「概略プレディ\nケート経路を表す情報」に基づいて「プレディケート命令の出力を予測する」とい\nう処理を行うことにより，信頼性の高いプレディケートの正確な予測に役立ち得る\nプレディケート履歴を生成することができ，同時にコア間の通信を最小にするとい\nう作用効果を奏するコンピューティングシステムを製造し，使用することができる\n程度に記載されていない。\nしたがって，本願明細書の発明の詳細な説明は，当業者が本願発明１の実施をす\nることができる程度に明確かつ十分に記載したものということはできない。\n(3)  原告の主張について\nア  原告は，本願明細書には，①対象のアーキテクチャは，ＥＤＧＥアーキテク\nチャのようなハイブリッドなデータフローのアーキテクチャであること，②コンパ\nイラが，各ブロックの分岐命令に，プログラム内での分岐命令の順序にしたがって，\n３ビットの「終了コード」（「出口コード」ともいう。）を割り当てること，③\n「概略プレディケート経路情報」は，コンパイラによって，分岐命令に符号化され，\n特定のブロックの具体的な分岐を識別可能であること，④予測器が，分岐命令に符\n号化された「概略プレディケート経路情報」を用いてプレディケート予測を行うこ\nとが記載されているところ，ＥＤＧＥアーキテクチャにおいて，分岐命令に出口を\n識別する例えば３ビットの識別子を割り当て，それを分岐命令に符号化することは，\n本願の優先日前に技術常識であったから，当業者であれば，本願の「概略プレディ\nケート経路情報」は，出口を識別する例えば３ビットの「終了コード」として分岐\n命令に符号化された情報であると理解し，コンパイルのタイミングでコンパイラに\nよって，分岐命令の分岐先を，例えば３ビットの終了コードで表した形式で，分岐\n命令に符号化された情報であり，予測器によってプレディケート予測に用いられる\n情報であると理解する旨主張する。\nイ  しかし，原告が挙げる甲９（「Ａｎａｌｙｓｉｓ  ｏｆ  ｔｈｅ  ＴＲＩＰ\nＳ  Ｐｒｏｔｏｔｙｐｅ  Ｂｌｏｃｋ  Ｐｒｅｄｉｃｔｏｒ」平成２１年４月）及\nび甲１０（「Ｄｉｓｔｒｉｂｕｔｅｄ  Ｍｉｃｒｏａｒｃｈｉｔｅｃｔｕｒａｌ\nＰｒｏｔｏｃｏｌｓ  ｉｎ  ｔｈｅ  ＴＲＩＰＳ  Ｐｒｏｔｏｔｙｐｅ  Ｐｒｏｃ\nｅｓｓｏｒ」平成１８年１２月）は，ＥＤＧＥアーキテクチャの一例である「ＴＲ\nＩＰＳ」という特定のアーキテクチャについて，「分岐命令に出口を識別する例え\nば３ビットの識別子を割り当て，それを分岐命令に符号化すること」を記載したも\nのにすぎず，ＥＤＧＥアーキテクチャ一般について記載したものではない。したが\nって，上記証拠（甲９，１０）から，本願の優先日前に「ＥＤＧＥアーキテクチャ\nにおいて，分岐命令に出口を識別する例えば３ビットの識別子を割り当て，それを\n分岐命令に符号化すること」が技術常識であったと認めるに足りず，他にこれを認\nめるに足りる証拠はない。\nウ  また，前記イの点を措き，仮に当業者において，本願明細書の「概略プレデ\nィケート経路情報」は，出口を識別する例えば３ビットの「終了コード」として分\n岐命令に符号化された情報であると理解し，コンパイルのタイミングでコンパイラ\nによって，分岐命令の分岐先を，例えば３ビットの終了コードで表した形式で，分\n岐命令に符号化された情報であり，予測器によってプレディケート予測に用いられ\nる情報であると理解したとしても，本願発明１の「概略プレディケート経路を表す\n情報」に相当する「概略プレディケート経路情報」について，①そのデータ形式，\n②その形式に「終了コード（出口コード）」という，本願明細書全体の記載から見\nても内容が不明なコードが関連していること，③分岐命令への符号化という処理が\nコンパイラによってされること，④予測器によるプレディケート予測に用いられる\nことが把握できるにすぎず，「出口を識別する例えば３ビットの「終了コード」と\nして分岐命令に符号化された情報」が，「プレディケート命令の出力」の「予測」\nを信頼性が高く，正確なものとする上で，具体的にどのような内容のものであるの\nかを把握することはできない。\nしたがって，「複数のプロセッサコア」という分散された環境に備えられた「プ\nレディケート予測器」において，信頼性の高いプレディケートの正確な予測に役立\nち得るプレディケート履歴を生成し，コア間の通信を最小にするために，「概略プ\nレディケート経路を表す情報」に基づく「予測」の処理が具体的にどのように行わ\nれているのかが，明らかであるということはできない。\n(4)  小括\n以上によれば，本願明細書の発明の詳細な説明は，当業者が本願発明１の実施を\nすることができる程度に明確かつ十分に記載したものということはできないから，\n本願発明１を特許請求の範囲に含む本願は，拒絶すべきものである。\nそうすると，本件審決における実施可能要件に係る判断は，結論において，誤り\nはない。よって，取消事由１は，理由がない。\n３  結論\n以上によれば，原告の本訴請求は，その余の点について判断するまでもなく，理\n由がないから，これを棄却することとして，主文のとおり判決する。\n本件審決は，最終的な結論において誤りはなかったことから，取り消すべきもの\nとはされなかったが，以下の問題があるから，事案に鑑み，本件審決書について付\n言する。まず，本件審決は，その判断において，平成２５年９月６日付けで通知し\nた拒絶理由及び同年１２月２７日付けでした拒絶査定の内容を引用した上で，本願\n発明が，拒絶査定で示された理由を解消しているか否かを判断するという体裁で，\nしかも，前記第２の３のとおり，本件補正前の請求項と本件補正後の請求項が混在\nしたまま，審決の理由を示している。しかし，本件審決における判断対象は，本件\n補正後の請求項であり，本件補正後の本願発明に拒絶理由が存在するか否かを判断\nすべきである。また，本件審決におけるサポート要件に係る判断は，その結論部分\nにおいて，本件補正後の請求項の全てについてサポート要件を満たさない旨判断し\nていながら，本件補正後の請求項１についてしかその具体的理由が言及されておら\nず，実施態様の異なる他の請求項についても，サポート要件を満たさないことにな\nる理由は，何ら具体的に述べられていない。以上のとおり，本件審決書は，適切と\nはいい難いものであって，判断対象を明確にして，結論を導くに足りる理由を示す\nことが望まれる。\n知的財産高等裁判所第４部\n裁判長裁判官      髙    部    眞  規  子\n裁判官      柵    木    澄    子\n裁判官      片    瀬        亮\n（別紙）\n本願明細書図面目録\n【図２】\n【図４】\n【図６Ａ】\n【図６Ｂ】\n"
}
{
  "trial_type": "IPCase",
  "date": {
    "era": "Heisei",
    "year": 26,
    "month": 3,
    "day": 26
  },
  "case_number": "平成24(行ケ)10406",
  "case_name": "審決取消請求事件",
  "court_name": "知的財産高等裁判所",
  "right_type": "特許権",
  "lawsuit_type": "行政訴訟",
  "lawsuit_id": "84075",
  "detail_page_link": "https://www.courts.go.jp/app/hanrei_jp/detail7?id=84075",
  "full_pdf_link": "https://www.courts.go.jp/app/files/hanrei_jp/075/084075_hanrei.pdf",
  "contents": "\u0000 \u0000\n平成２６年３月２６日判決言渡  同日原本受領  裁判所書記官\n平成２４年（行ケ）第１０４０６号  審決取消請求事件\n口頭弁論終結日  平成２６年２月２６日\n判        決\n原              告        三 星 電 子 株 式 会 社\n訴 訟 代 理 人 弁 理 士        伊      東      忠      彦\n同                        伊      東      忠      重\n同                        大      貫      進      介\n同                        宮      崎              修\n被              告        特 許 庁 長 官\n指 定 代 理 人        奥 村 元 宏\n同                        小 池 正 彦\n同                        樋 口 信 宏\n同                        山      田      和      彦\n主        文\n１  原告の請求を棄却する。\n２  訴訟費用は原告の負担とする。\n３  この判決に対する上告及び上告受理申立てのための付加期間を\n３０日と定める。\n事実及び理由\n第１  請求\n特許庁が不服２０１０－２２１０２号事件について平成２４年７月９日にした審\n決を取り消す。\n\u0000 \u0000\n第２  事案の概要\n１  特許庁における手続の経緯等\n(1)  原告は，平成１９年４月２０日，発明の名称を「ソフトウェアモジュールの\n組合せによってＤＳＰコードを生成する装置及びその方法」とする発明（請求項の\n数７）について特許出願（特願２００７－１１１３３３号。パリ条約による優先権\n主張：平成１８年（２００６年）５月３日，優先権主張国：大韓民国。以下「本願」\nという。）をし，平成２２年１月２８日付けの拒絶理由通知を受けたことから，同年\n５月７日付け手続補正書（請求項の数７）を提出したが，同年５月２１日付けで拒\n絶査定を受けたため，同年１０月１日，これに対する不服の審判を請求し，併せて\n同日付け手続補正書により特許請求の範囲を補正した（請求項の数５，以下「本件\n補正」という。）（甲４，５，７～１０）。\n(2)  特許庁は，前記(1)の請求を不服２０１０－２２１０２号事件として審理し，\n平成２４年７月９日，「本件審判の請求は，成り立たない。」との審決（以下「本件\n審決」という。）をし，その謄本は，同年７月２４日，原告に送達された。\n(3)  原告は，平成２４年１１月２１日，本件審決の取消しを求める本件訴訟を提\n起した。\n２  本件審決が対象とした特許請求の範囲の記載\n(1)  本願発明\n本件補正前の特許請求の範囲の請求項１の記載は，平成２２年５月７日付け手続\n補正書（甲７）により補正された次のとおりのものである。以下，この請求項１に\n記載された発明を「本願発明」といい，本願に係る明細書（甲７）を「本願明細書」\nという。\n【請求項１】\nデジタルシグナルプロセッサ（ＤＳＰ）処理部と，\nコーデックサーバから第１のソフトウェアモジュールをダウンロードする手段と，\nダウンロードされた第１のソフトウェアモジュールと，少なくとも第２のソフト\n\u0000 \u0000\nウェアモジュールとを記憶する記憶部と，\n前記記憶された第１と第２のソフトウェアモジュールを組み合わせてＤＳＰコー\nドを生成し，前記ＤＳＰ処理部にロードするＤＳＰコード生成部と，を有し，\n前記ＤＳＰ処理部は前記ロードされたＤＳＰコードをデコーディングして，前記\n第１のソフトウェアモジュールに対応するマルチメディアコンテンツを処理するこ\nとを特徴とする装置。\n(2)  本願補正発明\n本件補正後の特許請求の範囲の請求項１の記載は，次のとおりである（甲１０）。\n以下，この請求項１に記載された発明を「本願補正発明」という。なお，文中の下\n線部は，補正箇所を示す。\n【請求項１】\nデジタルシグナルプロセッサ（ＤＳＰ）処理部と，\nコーデックサーバから第１のソフトウェアモジュールをダウンロードする手段と，\nダウンロードされた第１のソフトウェアモジュールと，少なくとも第２のソフト\nウェアモジュールとを記憶する記憶部と，\n前記記憶された第１と第２のソフトウェアモジュールを組み合わせてＤＳＰコー\nドを生成し，前記ＤＳＰ処理部にロードするＤＳＰコード生成部と，を有し，\n前記ＤＳＰ処理部は前記ロードされたＤＳＰコードをデコーディングして，前記\n第１のソフトウェアモジュールに対応するマルチメディアコンテンツを処理し，\n前記マルチメディアコンテンツは，前記コーデックサーバの位置情報と前記第１\nのソフトウェアモジュールの識別情報とを含み，\n前記マルチメディアコンテンツに対応する前記第１のソフトウェアモジュールが\n前記記憶部に記憶されていない場合，前記コーデックサーバの位置情報と前記第１\nのソフトウェアモジュールの識別情報とに基づき，外部ネットワークに位置した前\n記コーデックサーバに前記第１のソフトウェアモジュールのダウンロードを要求す\nるメッセージを生成及び伝送する制御部をさらに有することを特徴とする装置。\n\u0000 \u0000\n３  本件審決の理由の要旨\n(1)  本件審決の理由は，要するに，①本願補正発明は，下記アの刊行物（以下「引\n用例」という。）に記載された発明（以下「引用発明」という。），下記イ及びウの公\n知文献及び技術常識に基づいて，当業者が容易に発明をすることができたものであ\nり，特許法２９条２項の規定により，特許出願の際独立して特許を受けることがで\nきないものであるから，本件補正は，平成２３年法律第６３号改正附則２条１８項\nによりなお従前の例によるとされる同法による改正前の特許法（以下「法」という。）\n１７条の２第６項において準用する法１２６条５項の規定に適合していないことか\nら，特許法１５９条１項において読み替えて準用する同法５３条１項の規定により\n却下すべきものである，②本願発明は，引用発明及び技術常識に基づいて，当業者\nが容易に発明をすることができたものであるから，特許法２９条２項の規定により\n特許を受けることができない，というものである。\nア  引用例：“Naoto SHIMIZU, et al, A Novel Decoder-downloadable System for\nContent-oriented  Coding,  Global  Telecommunications  Conference,  2002.\nGLOBECOM’ 02.IEEE, 2002 年 11 月 17 日，Volume.2, pages 1638-1642”（平成１４\n年（２００２年）１１月１７日刊行。甲１）\nイ  公知文献１：特表２００６－５１１９０２号公報（平成１８年４月６日公開。\n甲２）\nウ  公知文献２：特開２００１－２０２０９４号公報（平成１３年７月２７日公\n開。甲３）\n(2)  本件審決が認定した引用発明は，次のとおりである。\nコアエンジンと，\nデコーダサーバからデコーダのバイナリデータをダウンロードするデコーダ・コ\nンポーネント管理エンジンと，\nダウンロードされた複数のデコーダの管理をするデコーダ・コンポーネント管理\nエンジンと，\n\u0000 \u0000\nデコーダは，コアエンジンでインストールされ，\nコアエンジンは，メディアの再生を行い，\n各コンテンツのためのプロファイルを記述したコンテンツ情報には，対応する最\n適なデコーダ情報を含み，\nデコーダがクライアント側に既に存在しているか否かについて，デコーダ・コン\nポーネント管理エンジンに確認し，対応するデコーダを有していない場合には，デ\nコーダ情報を使用して，情報サーバから得られたデコーダＵＲＩにより，必要とな\nるデコーダの問い合わせを行い，デコーダ・サーバからデコーダをダウンロードす\nるデコーダ・コンポーネント管理エンジンを有するクライアント。\n(3)  本願補正発明と引用発明との対比\n本件審決が認定した本願補正発明と引用発明との一致点及び相違点は，以下のと\nおりである。\nア  一致点\n処理部と，\nコーデックサーバからコーデックのバイナリデータをダウンロードする手段と，\nダウンロードされた複数のコーデックのバイナリデータを記憶する記憶部と，\n前記記憶されたコーデックのバイナリデータを実行コードとして処理部にロード\nする手段と，を有し，\n前記処理部は，前記ロードされた実行コードにより前記コーデックのバイナリデ\nータに対応するマルチメディアコンテンツを処理し，\n前記マルチメディアコンテンツに関する前記コーデックサーバの位置情報と前記\nコーデックのバイナリデータの識別情報とが用いられ，\n前記マルチメディアコンテンツに対応する前記コーデックのバイナリデータが前\n記記憶部に記憶されていない場合，前記コーデックサーバの位置情報と前記コーデ\nックのバイナリデータの識別情報とに基づき，外部ネットワークに位置した前記コ\nーデックサーバに前記コーデックのバイナリデータのダウンロードを要求するメッ\n\u0000 \u0000\nセージを生成及び伝送する制御部を有する装置。\nイ  相違点１\n本願補正発明では，「デジタルシグナルプロセッサ（ＤＳＰ）」により処理が行わ\nれるものであるのに対し，引用発明では，デジタルシグナルプロセッサ（ＤＳＰ）\nにより処理が行われるものとはされていない点。\nウ  相違点２\n本願補正発明では，「ソフトウェアモジュールの識別情報」に基づき，「ソフトウ\nェアモジュール」をダウンロードして記憶し，記憶された複数の「ソフトウェアモ\nジュール」を組み合わせてコーデックのコードを生成し，「ソフトウェアモジュール」\nに対応するマルチメディアコンテンツを処理するものであるのに対し，引用発明で\nは，「デコーダ情報」に基づき，「デコーダのバイナリデータ」をダウンロードして\n記憶し，「デコーダ」に対応するメディア又はコンテンツが再生されるものであり，\n複数のソフトウェアモジュールを組み合せてデコーダのコードを生成することとは\nされていない点。\nエ  相違点３\n本願補正発明では，ＤＳＰ処理部は，ロードされたＤＳＰコードを「デコーディ\nング」して処理を実行するのに対し，引用発明では，コアエンジンが，読み込まれ\nた実行コードをデコーディングするものとはされていない点。\nオ  相違点４\n本願補正発明では，「マルチメディアコンテンツ」の中に，「コーデックサーバの\n位置情報」と「第１のソフトウェアモジュールの識別情報」が含まれるのに対し，\n引用発明では，「コンテンツ」の中に「デコーダＵＲＩ」と「デコーダ情報」が含ま\nれるものとはされていない点。\n(4)  本願発明と引用発明との対比\n本件審決が認定した本願発明と引用発明との一致点及び相違点は，以下のとおり\nである。\n\u0000 \u0000\nア  一致点\n処理部と，\nコーデックサーバからコーデックのバイナリデータをダウンロードする手段と，\nダウンロードされた複数のコーデックのバイナリデータを記憶する記憶部と，\n前記記憶されたコーデックのバイナリデータを実行コードとして処理部にロード\nする手段と，を有し，\n前記処理部は，前記ロードされた実行コードにより前記コーデックのバイナリデ\nータに対応するマルチメディアコンテンツを処理する装置。\nイ  相違点１\n本願発明では，「デジタルシグナルプロセッサ（ＤＳＰ）」により処理が行われる\nものであるのに対し，引用発明では，デジタルシグナルプロセッサ（ＤＳＰ）によ\nり処理が行われるものとはされていない点。\nウ  相違点２\n本願発明では，「ソフトウェアモジュールの識別情報」に基づき，「ソフトウェア\nモジュール」をダウンロードして記憶し，記憶された複数の「ソフトウェアモジュ\nール」を組み合わせてコーデックのコードを生成し，「ソフトウェアモジュール」に\n対応するマルチメディアコンテンツを処理するものであるのに対し，引用発明では，\n「デコーダ情報」に基づき，「デコーダのバイナリデータ」をダウンロードして記憶\nし，「デコーダ」に対応するメディア又はコンテンツが再生されるものであり，複数\nのソフトウェアモジュールを組み合せてデコーダのコードを生成することとはされ\nていない点。\nエ  相違点３\n本願発明では，ＤＳＰ処理部は，ロードされたＤＳＰコードを「デコーディング」\nして処理を実行するのに対し，引用発明では，コアエンジンが，読み込まれた実行\nコードをデコーディングするものとはされていない点。\n４  取消事由\n\u0000 \u0000\n(1)  本願補正発明の容易想到性の判断に係る手続違背（取消事由１）\n(2)  本願補正発明と引用発明との一致点の認定の誤り，相違点の看過（取消事由\n２）\n(3)  本願補正発明と引用発明との相違点４に係る判断の誤り（取消事由３）\n(4)  本願補正発明と引用発明との相違点１及び２に係る判断の誤り（取消事由\n４）\n第３  当事者の主張の要旨\n１  取消事由１（本願補正発明の容易想到性の判断に係る手続違背）について\n〔原告の主張〕\n(1)  本件審決は，本願補正発明と引用発明との相違点４について，引用発明並び\nに公知文献１及び２（甲２，３）に記載された公知技術に基づいて，当業者であれ\nば容易に想到できると判断したが，拒絶理由通知及び拒絶査定において，公知文献\n１及び２は何ら引用されておらず，上記各公知文献は審決において初めて示された\nものであり，原告に対して，拒絶査定の理由と異なる新たな拒絶理由の通知はなく，\n意見書提出の機会も与えられなかった。したがって，本件審決には，特許法１５９\n条２項により準用される同法５０条に違反する違法があり，その違法は審決の結論\nに影響を及ぼすことが明らかである。\n(2)  特許法１５９条２項前段は，同法５０条の規定を拒絶査定不服審判に準用す\nることから，当該審判の審理において，審判長は，拒絶査定の理由と異なる拒絶の\n理由を発見した場合には，特許出願人（審判請求人）に対し，拒絶の理由を通知し，\n相当の期間を指定して，意見書を提出する機会を与えなければならない。\nこれに対し，同法１５９条１項後段及び２項後段は，同法５０条ただし書の規定\nにより拒絶理由を通知することなく補正却下できる例外的な場合として，「１７条の\n２第１項…第４号（拒絶査定不服審判請求時の補正）に掲げる場合」を追加する規\n定となっていることから，特許出願人が拒絶査定不服審判を請求すると同時に特許\n請求の範囲を補正した場合において，その補正が同法１７条の２第３項ないし６項\n\u0000 \u0000\nの規定に違反するときは，拒絶理由が通知されずにいきなり補正却下され拒絶審決\nを受けることがある。\n補正却下の理由が，新規事項追加違反（同法１７条の２第３項），技術的特徴変更\n違反（同法１７条の２第４項），限定的減縮違反（同法１７条の２第５項）のいわゆ\nる補正要件違反である場合には，補正要件違反であることを特許出願人がある程度\n想定できる（補正要件違反は特許出願人の責任である場合もある）から，拒絶理由\n通知なく補正却下され拒絶審決がされても，受忍できる範囲といえる。しかし，拒\n絶査定不服審判を請求し，特許請求の範囲について拒絶査定の理由を解消するよう\nな限定を付加して補正をした特許出願人（審判請求人）に対する補正却下の理由が，\n特許出願人が想定し得ない新たな引用文献を引用した新たな拒絶の理由である独立\n特許要件違反の場合には，特許出願人に何ら責任はなく，かかる場合にまで意見書\n提出の機会を与えないことは，特許庁審判官による再度の審査（審理）を適正に受\nける権利を，特許出願人から不当に奪うものである。\nそもそも補正却下の対象を規定した特許法５３条は，拒絶査定を受けてもその後\n拒絶査定不服審判請求時に補正が可能である審査に関するものであり，拒絶査定不\n服審判における審理には当てはまらない。また，補正却下を適用する同法５０条た\nだし書は，いわゆる補正要件違反を念頭に置いたものである。さらに同法５３条及\nび５０条ただし書を拒絶査定不服審判における審理に準用した同法１５９条１項及\nび２項の立法趣旨は，拒絶査定不服審判請求時にした補正が新規事項を追加するも\nのである場合において優先的に補正却下を適用することにあるのであって，拒絶査\n定不服審判請求時に原査定の拒絶理由を解消すべく請求項を減縮した補正を，意見\n書・補正書の提出機会を与えずに，新たな拒絶理由によって補正却下するような事\n態に適用することにあるのではない。上記によれば，同法１５９条１項及び２項は\n拒絶査定不服審判請求時にした補正が新規事項を追加するものである場合において\n優先的に補正却下を適用するために規定されたものであり，その立法過程において，\n拒絶査定不服審判請求時に原査定の拒絶理由を解消すべく請求項を減縮した補正が\n\u0000 \u0000\u0000\n新たな引用文献に基づく新たな拒絶理由によって，意見書・補正書の提出機会が与\nえられずに補正却下されてしまう事態は想定されていない。\nしたがって，拒絶査定不服審判請求時にした補正を，補正違反の態様にかかわら\nず一律に補正却下の対象とした同法１５９条１項後段及び２項後段の規定自体が立\n法の誤りであり，憲法３１条に反し違憲であって，本件審決もまた違憲な規定に則\nったものであるから違憲である。\n(3)  また，本件のように拒絶査定不服審判請求時に原査定の拒絶理由を解消する\nために特許請求の範囲を減縮した補正を，新たな引用文献に基づく新たな拒絶理由\nで却下する場合には，審判合議体は，いきなり補正却下・拒絶審決をするのではな\nく，先ず拒絶理由を通知するとの運用をすることが，特許制度の趣旨及び憲法３１\n条に沿うものであるから，本件審決は，特許法１５９条１項後段及び２項後段の規\n定を適切に運用することを怠った違法性，違憲性がある。\n(4)  被告は，特許出願人は，自らの判断で，多項制を活用して，出願時や最初の\n拒絶理由通知に対する補正により特許請求の範囲に記載すれば補正却下を回避でき\nる旨主張するが，本件審決において初めて示された公知文献１及び２並びに補正却\n下の理由については，拒絶査定不服審判請求時に本件補正をするに当たっては知り\n得ないものであるから，自らの判断で補正却下を回避することはできなかったので\nあり，被告の上記主張は，特許実務からかけ離れた，補正制度を無視したものであ\nり，失当である。\n〔被告の主張〕\n(1)  本件補正は，特許法１７条の２第１項４号に係る補正であるところ，特許法\nは，１５９条１項において読み替えて５３条１項の規定を準用し，１５９条２項に\nおいて読み替えて５０条ただし書きを準用し，１７条の２第１項４号に係る補正（拒\n絶査定不服審判請求時の補正）を却下する場合には，拒絶理由を通知することを必\n要としていない。\n本件審決が新たに公知文献１及び２（甲２，３）を挙げてした判断は，相違点４\n\u0000 \u0000\u0000\nについてしたものであり，相違点４に係る本願補正発明の構成は，「「マルチメディ\nアコンテンツ」の中に，「コーデックサーバの位置情報」と「第１のソフトウェアモ\nジュールの識別情報」が含まれる」であり，この構成は拒絶査定不服審判請求時の\n補正（本件補正）により新たに追加されたものであって，この追加は特許請求の範\n囲の減縮である。そして，本件審決は，この特許請求の範囲の減縮を目的とする本\n件補正について，法１７条の２第６項において準用する法１２６条５項の規定に適\n合していない，いわゆる独立特許要件に違反するとして，特許法１５９条１項にお\nいて読み替えて準用する同法５３条１項の規定によって却下したもの，すなわち，\n特許法で拒絶理由を通知することを必要としない手続によって本件補正を却下した\nのであり，原告に拒絶理由を通知せず，意見書の提出機会を付与しなかったことに\nついて本件審決に手続違背はない。\n(2)  特許法１５９条２項後段の規定は，補正に関する他の改正項目と同様に，迅\n速・的確かつ公平な権利付与等の観点から設けられたものである。すなわち，各国\n経済の相互依存の進化に伴い特許制度の国際調和が検討されていたところ，我が国\nの特許制度については，補正回数や補正範囲の制限が不十分であるため，権利付与\nまでの期間が長期化し，また，第三者の監視負担が過大になる等の問題が指摘され\nていた。そこで，平成５年法律第２６号では，２回目（最後）の拒絶理由通知以降\nの補正に対して，独立特許要件も含めて補正の範囲の適正化を図り，また，拒絶理\n由の通知について同法５０条ただし書の規定が設けられるとともに，不適法な補正\nは却下することとして同法５３条１項ないし３項の規定が設けられ，拒絶査定不服\n審判についても，迅速な権利付与の実現，出願間の公平な取扱い等の観点から，同\n様の改正がされた（同法１７条の２，１５９条）。\n原告は，この点について，同法１５９条２項後段の立法趣旨は，拒絶査定不服審\n判請求時にした補正が新規事項を追加するものである場合に，補正却下を適用する\nことにあると主張する。しかし，同法１５９条２項後段の立法趣旨は，審判請求時\nの補正が不適法である場合の取扱いを，最後の拒絶理由通知に対する補正が不適法\n\u0000 \u0000\u0000\nである場合の取扱いと同様のものとすることによって，審理を迅速化し，第三者の\n監視負担を軽減することにある。すなわち，同法１５９条２項後段の規定は，新規\n事項を追加する補正のみを却下することを想定したものではなく，目的外の補正や\n独立特許要件違反の補正についても却下することを想定したものである。このよう\nに，同法１５９条２項後段の規定は，不適法な審判請求時の補正を却下することに\nよって審理を迅速化し，第三者の負担を軽減するものであって，新しい技術を公開\nした者（出願人）に対して迅速に権利を付与して発明を保護することと，権利の制\n約を受ける第三者の利用を促すこととのバランスを図ったものであるから，特許法\nの目的にも合致するものであって，憲法３１条に反するものではない。\n(3)  拒絶査定不服審判は，審査に対する続審である（特許法１５８及び１５９条）\nから，審判合議体は，審査においてした手続を土台として審理を続行し，新たな資\n料をも補充し，拒絶査定が維持できるかどうかを審理するものであるから，審判請\n求人は，審判合議体に対し拒絶査定が不服である理由を述べ，拒絶査定の妥当性に\nついて審理を受けることができる。\nしかし，審判請求時に特許請求の範囲を拡張，変更する補正がされると，審理対象\nが変更されるため新たな審理を行わざるを得なくなり，公平性を欠くことになるのみ\nならず，他の審判請求事件の審理の遅延をも生じるおそれがある。また，審判請求時\nの補正が特許請求の範囲の減縮に相当する補正であるとしても，補正後の発明が特許\n可能なものであれば，拒絶査定を取り消して特許査定すれば良く，審理が繰り返し行\nわれることを回避することができるが，補正後の発明が特許できないものについて，\n仮に，審判において再度，拒絶の理由を通知し，審判請求人に意見書・補正書を提出\nする機会を与えたならば，審理が繰り返し行われることを回避できなくなる。また，\n仮に，審判請求人がこの機会を活用して出願を分割したならば，分割された出願につ\nいて最初から審査がやり直されることとなり，しかも，第三者の監視負担が新たに発\n生する。さらに，出願前に十分な先行技術調査を行い予め高品質な特許請求の範囲及\n\u0000 \u0000\u0000\nび明細書を作成し，多項制を積極的に活用して１回以下の拒絶理由通知で特許性を見\n極め，審判請求前に迅速に権利を取得しようとしている他の出願人との公平性の観点\nからも問題がある。特許出願人にとっても，十分な先行技術調査，多項制の活用等に\n対するインセンティブが損なわる結果，迅速・的確な権利取得の確率が低下する。\nそもそも，同法５０条には補正却下するときに拒絶理由の通知を要しない旨の規定\nはあるが，同法５３条には拒絶理由を通知するときに補正却下を要しない旨の規定は\nない。万が一，補正却下せず拒絶理由を通知する運用としたならば，審判請求人は不\n適法な補正の範囲内で補正する不利益を被り，補正却下しなかったことについて，審\n判合議体の処分の違法性を問うことができる。また，仮に，補正却下せず拒絶理由を\n通知する運用としたならば，審判請求人は，審判請求時に拒絶理由を内在する不適法\nな減縮補正を行っただけで，特許庁に対し最初から審査（審理）をやり直させること\nができるようになる。原告が主張する運用は，実質的に，審判請求の段階になってか\nら審査を再スタートさせることを強いる運用であり，審理期間の遅延を招き，第三者\nの監視負担を増大させるだけである。\n以上のとおりであるから，審判請求時の補正が，単に，拒絶査定の理由を解消すべ\nく特許請求の範囲を減縮した補正であることをもって審判において再度，拒絶の理由\nを通知するという運用を採用することは，迅速・的確かつ公平な権利付与を図るとい\nう前記(2)の平成５年法律第２６号による改正の趣旨に合致しない。\n(4)  特許出願人は，自らの判断で，多項制を活用して，特許を受けようとする発\n明について特許請求の範囲に請求項毎に記載し，本件のような補正却下を回避する\nことができる。本件でいえば，原告は，本件補正により追加された「「マルチメディ\nアコンテンツ」の中に，「コーデックサーバの位置情報」と「第１のソフトウェアモ\nジュールの識別情報」が含まれる」との構成を含む発明を，出願時にあらかじめ特\n許請求の範囲に記載していたならば，平成２２年１月２８日付け拒絶理由通知の段\n階で，同構成についても審査を受けることができたし，あるいは同拒絶理由通知に\n\u0000 \u0000\u0000\n対する手続補正で特許請求の範囲に記載していたならば，審査官から最後の拒絶理\n由通知を受けることができた。したがって，原告が主張する特許出願人にとっての\n不利益は，多項制を活用することにより回避可能であるから，特許出願人に何ら責\n任がないとはいえない。\nまた，新たな引用文献を引用した２９条２項の規定により独立特許要件を満たさ\nないとの理由により補正が却下されることは，制度上予定されていることであるか\nら，特許出願人にとって全く想定できないものでもない。\n２  取消事由２（本願補正発明と引用発明との一致点の認定の誤り，相違点の看\n過）について\n〔原告の主張〕\n(1)  本件審決は，引用発明の「クライアント」と本願補正発明の「装置」とは，\n「前記マルチメディアコンテンツに関する前記コーデックサーバの位置情報と前記\nコーデックのバイナリデータの識別情報とが用いられ」ること，及び「前記コーデ\nックサーバの位置情報と前記コーデックのバイナリデータの識別情報とに基づき，」\n外部ネットワークに位置した前記コーデックサーバに前記コーデックのバイナリデ\nータのダウンロードを要求するメッセージを生成及び伝送することを一致点として\n認定した。\n(2)  しかし，引用発明において，「前記マルチメディアコンテンツに関する前記\nコーデックサーバの位置情報と前記コーデックのバイナリデータの識別情報とを用\nい」る主体は，情報サーバであって，クライアントではない。本願補正発明の「装\n置」は，引用発明の情報サーバに対応するものではなく，クライアントに対応する\nものである。そうすると，本件審決が一致点として認定した「前記マルチメディア\nコンテンツに関する前記コーデックサーバの位置情報と前記コーデックのバイナリ\nデータの識別情報とが用いられ」は，引用発明の「クライアント」と本願補正発明\nの「装置」との一致点とはなり得ないから，本件審決は一致点の認定を誤り相違点\nを看過している。\n\u0000 \u0000\u0000\nまた，引用発明において，「前記コーデックサーバの位置情報と前記コーデックの\nバイナリデータの識別情報」を知っているのは，情報サーバであって，クライアン\nトではない。一方，本願補正発明の「装置」においては，「前記マルチメディアコン\nテンツ」に含まれた「前記コーデックサーバの位置情報と前記第１のソフトウェア\nモジュールの識別情報とに基づき」，第１のソフトウェアモジュールのダウンロード\nを要求するのは，「装置」内部の制御部であって，サーバ側ではない。そうすると，\n本件審決が一致点として認定した「前記コーデックサーバの位置情報と前記コーデ\nックのバイナリデータの識別情報とに基づき」は，引用発明の「クライアント」と\n本願補正発明の「装置」との一致点とはなり得ないから，本件審決は一致点の認定\nを誤り相違点を看過している。\n(3)  以上のとおり，本件審決は，前記相違点を看過することにより，誤って本願\n補正発明の進歩性を否定したものであるから，取り消されるべきである。\n〔被告の主張〕\n(1)  本件審決が一致点として認定した「コーデックサーバの位置情報」及び「コ\nーデックのバイナリデータの識別情報」は，それぞれ引用発明における「デコーダ\nＵＲＩ」及び「対応する最適なデコーダ情報」であり，引用例において，「デコーダ\nＵＲＩ」（「コーデックサーバの位置情報」）と，「対応する最適なデコーダ情報」（「コ\nーデックのバイナリデータの識別情報」）とは，クライアントが外部（情報サーバ）\nから取得して，クライアントにおいてダウンロードに用いられる。他方，本願補正\n発明の装置は，マルチメディアコンテンツに含まれる「コーデックサーバの位置情\n報」と「第１のソフトウェアモジュールの識別情報」とをマルチメディアコンテン\nツとともに取得しダウンロードに用いる。\nそうすると，これら情報をダウンロードに用いているという観点で，本件審決が，\n「前記マルチメディアコンテンツに関する前記コーデックサーバの位置情報と前記\nコーデックのバイナリデータの識別情報とが用いられ」ていることを，引用発明の\n「クライアント」と本願補正発明の「装置」との一致点としたことに誤りはない。\n\u0000 \u0000\u0000\n(2)  原告は，引用発明において，「前記コーデックサーバの位置情報と前記コー\nデックのバイナリデータの識別情報」を知っているのは，情報サーバであって，ク\nライアントではないと主張するが，上記のとおり，引用例では，情報サーバが知っ\nている情報をクライアントが得て用いるのであり，クライアントが情報を得る情報\n源が情報サーバであるとしても，クライアントにおいて，「前記マルチメディアコ\nンテンツに関する前記コーデックサーバの位置情報と前記コーデックのバイナリデ\nータの識別情報とが用いられ」ているといえるものである。\n３  取消事由３（本願補正発明と引用発明との相違点４に係る判断の誤り）につ\nいて\n〔原告の主張〕\n(1)  本件審決は，本願補正発明と引用発明との相違点４について，引用発明では，\n「コンテンツ」の中に「デコーダＵＲＩ」と「デコーダ情報」が含まれるものとは\nされておらず，「コンテンツ」とは別に，情報サーバから，「デコーダＵＲＩ」と，\n各コンテンツに対応する「デコーダ情報」が提供されるものであるが，コンテンツ\nとともにデコーダをダウンロードするためのサーバの位置情報を提供することや，\nコンテンツの中にデコーダを識別するための情報が含まれるようにすることは，公\n知文献１及び２に開示されているように既に知られた考え方であるから，引用発明\nにおける「デコーダＵＲＩ」及び「デコーダ情報」に，上記公知技術に係る考え方\nを採用することで，本願補正発明のように，「マルチメディアコンテンツ」に「コー\nデックサーバの位置情報」と「コーデックの識別情報」を含むように構成すること\nは，当業者であれば容易に想到できる旨判断した。\n(2)  しかし，公知文献１（甲２）には，デコーダ全体ではなく，そのうちの一部\nに相当する第１のソフトウェアモジュールのみをダウンロードするためのコーデッ\nクサーバの位置情報がディスクに含まれているという記載はない。公知文献１記載\nの技術を引用発明に組み合わせて本願補正発明の進歩性を否定するためには，公知\n文献１において，単にデコーダが存在するウェブサイトのＵＲＬでは足りず，デコ\n\u0000 \u0000\u0000\nーダ全体のうちの一部に相当する第１のソフトウェアモジュールのみをダウンロー\nドするためのコーデックサーバの位置情報がディスクに含まれている必要がある。\nしたがって，仮に公知文献１記載の技術を引用発明に適用できたとしても，本願\n補正発明には至らない。\n(3)  公知文献２（甲３）においても同様に，仮にデコーダを識別するための情報\nがコンテンツに含まれているという技術が公知文献２に記載されていたとしても，\nデコーダ全体ではなく，そのうちの一部に相当する第１のソフトウェアモジュール\nのみの識別情報がコンテンツに含まれているという記載はない。公知文献２記載の\n技術を引用発明に組み合わせて本願補正発明の進歩性を否定するためには，公知文\n献２において，単にデコーダの識別情報では足りず，デコーダ全体のうちの一部に\n相当する第１のソフトウェアモジュールの識別情報がコンテンツに含まれている必\n要がある。\nしたがって，仮に公知文献２記載の技術を引用発明に適用できたとしても，本願\n補正発明には至らない。\n(4)  本願補正発明の「ソフトウェアモジュール」は，ＯＳ，コーデックライブラ\nリ，メディアフレームワーク及びハードウェアライブラリを含む（本願明細書の段\n落【００２９】）。そして，本願補正発明は，「第１と第２のソフトウェアモジュール\nを組み合わせてＤＳＰコードを生成」することを要件としているから，例えば，「第\n１のソフトウェアモジュール」がメディアフレームワークであり，「第２のソフトウ\nェアモジュール」がハードウェアライブラリである場合も包含する。\n他方，引用発明においてダウンロードされる「デコーダモジュール」は，本願明\n細書の「コーデック」（コーデックライブラリの一要素）に相当する。\nそうすると，本件審決が相違点２として判断した「モジュールのみをダウンロー\nドする点」及び「得ようとする各情報が「モジュール」を対象としたものとするこ\nと」とは，引用発明における「デコーダモジュール」，すなわちコーデックライブラ\nリについて判断したものにすぎず，コーデックライブラリ以外の本願補正発明の「ソ\n\u0000 \u0000\u0000\nフトウェアモジュール」であるＯＳ，メディアフレームワーク及びハードウェアラ\nイブラリについては，何も判断していない。\n(5)  本願補正発明では，「前記マルチメディアコンテンツは前記コーデックサー\nバの位置情報と前記第１のソフトウェアモジュールの識別情報を含み」及び「前記\nコーデックサーバの位置情報と前記第１のソフトウェアモジュールの識別情報とに\n基づき」の要件を満たしているために，装置側からサーバ側に対して「コーデック\nサーバの位置情報と第１のソフトウェアモジュールの識別情報」を要求することな\nく，マルチメディアコンテンツ自体に内在する「コーデックサーバの位置情報と第\n１のソフトウェアモジュールの識別情報」をそのまま利用すれば足りる。\nこれに対して，引用発明においては，「クライアントが対応するデコーダを有して\nいない場合には，スケジューラー管理エンジンは，デコーダＵＲＩを得ることをデ\nコーダ・コンポーネント管理エンジンに指示する。デコーダ・コンポーネント管理\nエンジンは，どこにデコーダが格納されているかをコンテンツサーバに要求する」\nのであって，本願補正発明には，このような要求を必要としないという効果がある。\n〔被告の主張〕\n(1)  本件審決は，相違点４に係る本願補正発明の構成として 「「マルチメディア\nコンテンツ」の中に，「コーデックサーバの位置情報」と「第１のソフトウェアモジ\nュールの識別情報」が含まれる」としているところ，モジュールのみをダウンロー\nドする点については，相違点２として判断し，相違点４は，そのような相違の下で，\n本願補正発明が「「マルチメディアコンテンツ」の中に，「コーデックサーバの位置\n情報」と「第１のソフトウェアモジュールの識別情報」が含まれる」ことを相違点\nとして挙げたのであって，ダウンロードに用いる情報を取得する手法について判断\nしたもの，すなわち，公知文献１及び２は，ダウンロードに際して必要となる，「ど\nこから」「何を」の各情報を取得する手段として，各情報をコンテンツに含ませてコ\nンテンツとともに得る構成を容易というために用いている。\nすなわち，得ようとする各情報が「モジュール」を対象としたものとすることは，\n\u0000 \u0000\u0000\n相違点２で判断した上で，さらに，相違点４について，公知文献１及び２の「コン\nテンツとともに，デコーダをダウンロードするためのサーバの位置情報を提供する\nこと」及び「コンテンツの中にデコーダを識別するための情報が含まれるようにす\nること」という公知技術を組み合わせることで，本願補正発明の「「マルチメディア\nコンテンツ」の中に，「コーデックサーバの位置情報」と「第１のソフトウェアモジ\nュールの識別情報」が含まれる」とすることは容易であると判断したものである。\n(2)  本願補正発明は，マルチメデイアコンテンツの符号化の仕組みが異なる場合，\nそれを復号するために必要な復号プログラムを得るために，復号プログラム全体（全\n体プログラム）をダウンロードするのではなく，「全体プログラム」を構成する各プ\nログラム（部分プログラム）の中で異なる符号化の仕組みに必要な「部分プログラ\nム」のみをダウンロードするというものである。\n本件審決は，「全体プログラム」をダウンロードするのではなく，「部分プログラ\nム」をダウンロードすることについては，相違点２において，本願補正発明の「ソ\nフトウェアモジュール」，すなわち，部分プログラムとして「第１のソフトウェアモ\nジュール」をダウンロードする点について判断しているのであるから，本件審決が\n「本願補正発明の「ソフトウェアモジュール」については何も判断していないとす\nる原告の主張は理由がない。\n(3)  原告は，本願補正発明は，各情報がコンテンツに含まれ，コンテンツととも\nに得ることができるから，引用発明のようにクライアントからサーバにコンテンツ\nとは別に各情報を要求する必要がないとの効果がある旨主張するが，相違点につい\nてした判断の結果として容易に想到される構成から予測されるものであり，この効\n果により特許を受けることができるとはいえない。\n４  取消事由４（本願補正発明と引用発明との相違点１及び２に係る判断の誤り）\nについて\n〔原告の主張〕\n(1)  本件審決は，本願補正発明と引用発明との相違点１について，引用発明にお\n\u0000 \u0000\u0000\nける「コアエンジン」について，引用例における記載に基づいて，ＤＳＰによるハ\nードウェアを採用することによって，本願補正発明のように，「デジタルシグナルプ\nロセッサ（ＤＳＰ）処理部」とすることや，引用発明における実行コードを，本願\n補正発明のように，「ＤＳＰコード」とすることは，当業者であれば容易に想到でき\nる旨判断した。\nまた，本件審決は，本願補正発明と引用発明との相違点２について，引用発明に\nおいて，「デコーダ情報」に基づき，「デコーダのバイナリデータ」をダウンロード\nして記憶し，「デコーダ」に対応するメディア又はコンテンツが再生される構成につ\nいて，引用例に開示されるような，デコーダが複数のモジュールにより構築される\nモジュールベースデコーダの考え方を採用し，モジュールに対応するメディアコン\nテンツやモジュール識別情報の構成，複数のデコーダモジュールを組み合わせてデ\nコーダを生成する手段を設けることによって，本願補正発明のように，「ソフトウェ\nアモジュールの識別情報」に基づきダウンロードして記憶し，記憶された複数の「ソ\nフトウェアモジュール」を組み合わせてコーデックのコードを生成し，「ソフトウェ\nアモジュール」に対応するマルチメディアコンテンツを処理するようにすることは，\n当業者であれば容易に想到できる旨判断した。\n(2)  しかし，引用発明では“core engine”にデコーダを設置しており，“core\nengine”はメディア再生又は中止などを制御するＣＰＵに該当するから，引用発明\nのデコーダダウンロード及び設置に関するソフトウェアはＣＰＵ上で動作するソフ\nトウェアであって本願補正発明のＤＳＰコードとは異なる。引用発明には，コンポ\nーネント化されているソフトウェアによりデコーダを形成する一部モジュールに対\nする変更を行う構成が開示されているかもしれないが，ＯＳなどの実行環境が劣悪\nであるというＤＳＰの特性上コンポーネント化されていないソフトウェアを備える\nしかないＤＳＰに対し，新規コーデックが要求される際にコーデックを変更するた\nめに最小限の資源を用いてＤＳＰ規格に合うＤＳＰコードを容易に提供することに\nついては，引用例にはいかなる開示も示唆もない。\n\u0000 \u0000\u0000\nこれに対して，本願補正発明は，コンポーネント化されたソフトウェアの使用が\n容易ではないＤＳＰによりコーデックを支援する回路環境で新規コーデックが要求\nされるたびに大容量のＤＳＰコードを適用及び交替することにより発生する相当量\nのオーバーヘッドを最小化するため，コンテンツを再生するたびにリアルタイムで\nＣＰＵ(ＤＳＰコード生成部)で適切なコーデックライブラリを選択するようにした\n後，選択されたコーデックライブラリとＯＳ及びメディアフレームワークを組み合\nわせてＤＳＰコードを生成し，生成されたＤＳＰコードをＤＳＰ処理部に提供し，\nＤＳＰ処理部では提供されたＤＳＰコードに基づいてコンテンツを再生するための\nデコーディングを行うことにより，ＤＳＰはコンテンツを再生するたびにＣＰＵか\nらＤＳＰコードを提供される構成としたものであり，かかる構成，効果を検討せず\nに相違点１及び２について容易想到であると判断した本件審決は誤りである。\n(3)  被告の主張(1)に対して\n引用例には，いくつかのＩＤＣＴモジュールの中でＤＳＰという「ハードウェア\n仕様…に適したＩＤＣＴモジュールを選択」することができると記載されているの\nであって，ＤＳＰで複数のＩＤＣＴモジュールを用いることができ，ＩＤＣＴの変\n更を実施できる旨の記載はない。\nまた，引用例に，一体化したソフトウェアの課題認識があったとしても，それは\nシステム全体としての課題認識であり，ＤＳＰにおける課題認識が示唆されている\nものではない。\nさらに，本願補正発明では，コーデックライブラリだけでなく，ＯＳ，メディア\nフレームワーク及びハードウェアライブラリのソフトウェアを組み合わせて新たな\n「ＤＳＰコード」を生成しているのに対し，引用発明の「デコーダ・コンポーネン\nト管理エンジン」は「コアエンジン」に対して「デコーダモジュール」のみを供給\nしているところ，この「デコーダモジュール」は，本願明細書の「コーデック」に\n相当するものであり，新たなＤＳＰコードを生成する機能は有していない。\n(2)  被告の主張(2)に対して\n\u0000 \u0000\u0000\n引用例には，ハードウェア仕様に適したデコーダを選択することは記載されてい\nても，同一のハードウェア仕様について複数のデコーダを選択的にダウンロードし\nて用いることは記載されていない。\nさらに，本願補正発明は，ＤＳＰに最適のＤＳＰコードを提供するため，ＣＰＵ\n及びＤＳＰ間の連動構造を備えているのに対し，引用発明は，コアエンジンとして\nＤＳＰを採用する構成上の違いがある。\n〔被告の主張〕\n(1)  本件審決は，引用例記載のコンポーネント化されているソフトウェアにより\nデコーダを形成する一部モジュールに対する変更を行う構成を，引用発明に採用す\nることが容易であることについて相違点２において判断し，ＤＳＰに対するものと\nすることを相違点１において判断している。\n引用例には，一体化したソフトウエアについての課題認識がある上，クライアン\nトのハードウェア仕様をＤＳＰとし，ＤＳＰに適しているＩＤＣＴモジュールを選\n択する構成が例示されているのであって，ＤＳＰにおける課題認識も示唆されてい\nるというべきであるから，当業者が引用発明のハードウェア仕様をＤＳＰとして具\n体化するに際し，ＤＳＰに適したモジュールを選択・組み合わせてＤＳＰコードを\n生成しＤＳＰに提供する構成を採用することは容易である。\nまた，ＤＳＰとしたとき，一体化したソフトウエアの課題がＤＳＰにおいても解\n決されることは当然に予想されることであり，引用発明から容易に想到する構成に\nおいて，本願補正発明が奏するＤＳＰにおける効果は予測されるものである。\n(2)  原告の主張(3)に対して\n引用例の「例えば，同じビットストリーム解析を共有するために，クライアント\nのハードウェア仕様（ＭＭＸ，３ＤＮｏｗ！，ＤＳＰ，ＡＳＩＣなど）に適してい\nるＩＤＣＴモジュールを選択することができる。」との記載中，「ＩＤＣＴモジュー\nル」とは，映像符号化において用いられる離散コサイン変換「ＤＣＴ」を，復号に\nおいて元に戻す逆ＤＣＴ変換を行うプログラムを指し，変換にＤＣＴを用いたコー\n\u0000 \u0000\u0000\nデックの場合を例にして説明したものである。そして，上記記載それ自体は，ＤＳ\nＰに対してＤＳＰ用のＩＤＣＴモジュールを選択することを述べたものであるが，\n同時に，引用例記載のフレキシブルデコーダにおいて，デコーダがインストールさ\nれるパーツである「コアエンジン」としてＤＳＰを採用することを示唆する記載で\nもあり，この記載を相違点１の判断根拠とした本件審決に誤りはない。\n第４  当裁判所の判断\n１  本願補正発明について\n(1)  本願補正発明の特許請求の範囲は，前記第２の２(2)記載のとおりであると\nころ，本願明細書（甲７）には，おおむね次の内容の記載がある。\nア  技術分野\n本発明は，ソフトウェアモジュールの組合せによってＤＳＰコードを生成する装置及びその\n方法に係り，より詳細には，ＤＳＰコードのソフトウェアモジュールのうち必要なモジュール\nのみを伝送されて，各々のソフトウェアモジュールを組み合わせて所定のＤＳＰコードを生成\nする装置及びその方法に関する（【０００１】）。\nイ  背景技術\n(ア)  現在，放送，通信，及びインターネットの環境で多様なコーデックが発展しており，\nまた，コーデックの圧縮率が高くなって，拡張性が上がることによってコンテンツ提供者及び\nネットワーク事業者は多様なコーデックを使おうとする（【０００２】）。\nこれによって，ＤＴＶ，セットトップボックス（ＳＴＢ）などのレンダリング機器で多様な\nメディアフォーマットを適用しようとＤＳＰ（Digital Signal Processing）を用いてメディア\nデコーダを具現しようとする試みがあり，ＤＳＰで実行されるソフトウェアを異ならせて，さ\nまざまのコーデックを適用できる（【０００３】）。\n一般的に，ＤＳＰは，高速性能を具現するようにパイプライン演算器を中心に構成する場合\nが多い。特に，ＤＳＰは，リアルタイム処理が要求される分野で多く使われるので，ハードウ\nェア能力の限界まで性能を具現するようにソフトウェア作業を頻繁にしなければならない（【０\n００４】）。\n\u0000 \u0000\u0000\n(イ)\n図１Ａは，従来のＤＳＰ基盤のレンダリング機器の典型的な形態を示す図面である。示され\nたように，レンダリング機器は，ホストＣＰＵ１０，ＤＳＰ２０，及び記憶部（図１Ａでは「貯\n蔵部」，以下同じ。）例えば，ＲＯＭ，及びＲＡＭ）３０として構成される（【０００９】）。\nまず，ＤＳＰブーティングの時，ＤＳＰ２０が記憶部（例えば，ＲＯＭ）３０からＤＳＰコ\nードを読み取って実行させ得る。しかし，ホストＣＰＵ１０がＤＳＰ２０に実行コードをロー\nディングした後，ＤＳＰをブーティングさせることもできる（【００１０】）。\n次いで，ＤＳＰ基盤のデコーディングデバイスは，コーデック別にＤＳＰコードが異なるの\nで（すなわち，コーデックによって実行されるＤＳＰが異なるので），ホストＣＰＵ１０が現在\nのコーデックに適合したＤＳＰコードをＤＳＰ２０にダウンロードさせる（【００１１】）。\n一方，ホストＣＰＵ１０なしにＤＳＰ２０のみで構成されても良く，この場合，ブーティン\nグの時，ＤＳＰ２０が記憶部（例えば，ＲＯＭ）３０からＤＳＰコードを読み取って実行する\n（【００１２】）。\n\u0000 \u0000\u0000\n(ウ)\n図１Ｂは，従来のＤＳＰコーデックの伝送及びダウンロードを実行する過程を示す図面であ\nる。示されたように，ホストＣＰＵ１０のＲＯＭ３０には，多様なＤＳＰコードが存在できる\n（例えば，Ｈ．２６４コーデック用ＤＳＰコード，ＭＰＥＧ２コーデック用ＤＳＰコードなど）。\nここで，ＲＯＭ３０に記憶されたＤＳＰコードはブーティングの時，ＤＳＰ２０にロードされ\nる（【００１３】）。\n一方，必要なＤＳＰコーデックがシステム内部のＲＯＭ３０に存在しない場合，該当ＤＳＰ\nコードをネットワークを通じてコーデックサーバでダウンロードしてＲＯＭ３０に記憶してお\nいて，必要の時ごとに使うようにする（【００１４】）。\nしかし，ＤＳＰコードは，一般的なＰＣ用プログラムより動作環境が劣悪な問題点がある。\nすなわち，ＰＣのように汎用のＯＳがあって，アプリケーションプログラムが前記ＯＳ上で動\n\u0000 \u0000\u0000\n作する構造ではなく，ＤＳＰ２０に合うように具現されたコーデック用ソフトウェア全体（例\nえば，ＯＳ，コーデックライブラリ，メディアフレームワーク，及びハードウェアライブラリ\nなど）が一つのＤＳＰコードを形成しており，コーデックが変わるたびにこのＤＳＰコード全\n体が再びＤＳＰ２０にローディングされなければならないという問題点がある（【００１５】）。\nしたがって，ネットワークを通じて遠隔サーバでダウンロードされるＤＳＰコードでコーデ\nックライブラリのみが変更されて，ＯＳ，メディアフレームワーク，及びハードウェアライブ\nラリなどは，ＲＯＭ３０に記憶された他のＤＳＰコードと共通に所有する部分に，不要なソフ\nトウェアモジュールが含まれて伝送されるので，ＤＳＰコードのダウンロードの時，ネットワ\nークにオーバーヘッドが発生し，また，ＲＯＭの記憶空間を多く占めるという問題点がある（【０\n０１６】）。\nウ  発明が解決しようとする課題\n本発明は，外部ネットワークに位置したコーデックサーバからＤＳＰコードのソフトウェア\nモジュールのうち必要なモジュール（例えば，コーデックライブラリ）のみを伝送された後，\n各々のソフトウェアモジュールを組み合わせて所定のＤＳＰコードを生成するところにその目\n的がある。\n本発明は，前述した目的に制限されず，言及されなかったさらなる目的は，下記の記載から\n当業者に明確に理解されるであろう（【００１８】）。\nエ  発明の効果\n本発明のソフトウェアモジュールの組合せによってＤＳＰコードを生成する装置及びその方\n法によれば，次のような効果が一つあるいはそれ以上ある（【００２１】）。\n外部ネットワークに位置したコーデックサーバからＤＳＰコードのソフトウェアモジュール\nのうち必要なモジュール（例えば，コーデックライブラリ）のみを伝送された後，各々のソフ\nトウェアモジュールを組み合わせて該当ＤＳＰコードを生成することによって，必要なソフト\nウェアモジュールのみをダウンロードされるので，ソフトウェアをダウンロードされる時間を\n減らし得る長所がある（【００２２】）。\nまた，必要なソフトウェアモジュール（例えば，コーデックライブラリ）のみを伝送された\n\u0000 \u0000\u0000\n後，記憶することによって，記憶空間の無駄使いを減らすことができ，より効率的に記憶空間\nを活用できる長所がある。また，ＤＳＰで駆動されるソフトウェアモジュールをより効果的に\n管理できる長所がある（【００２３】）。\nオ  発明を実施するための最良の形態\n(ア)  【図２】\n図２は，本発明の一実施形態によるソフトウェアモジュールの組合せによってＤＳＰコード\nを生成する装置の内部ブロック図を示す図面である。ここで，マルチメディア再生装置１００\nは，放送コンテンツ及び一般動映像コンテンツを再生するもので，例えば，ＤＴＶ，セットト\nップボックス，及び移動通信端末機などを言う（【００２６】）。\n示されたように，マルチメディア再生装置１００は，受信部１１０，送信部１２０，記憶部\n（図２では「貯蔵部」，以下同じ。）１３０，ＤＳＰコード生成部１４０，ＤＳＰ処理部１５０，\n及び制御部１６０を含んで構成される（【００２７】）。\n受信部１１０は，外部ネットワークに位置したコーデックサーバから伝送されたソフトウェ\nアモジュールを受信する。ここで，ソフトウェアモジュールは，ＯＳ，コーデックライブラリ，\nメディアフレームワーク，及びハードウェアライブラリを含む。ここで，ＯＳ，コーデックラ\nイブラリ，メディアフレームワーク，及びハードウェアライブラリに構成されたコードをＤＳ\n\u0000 \u0000\u0000\nＰコードと言う。また，コーデックの種類は，ＭＰＥＧ－２，ＭＰＥＧ－４，Ｈ．２６４，及\nびＶＣ１などに理解され得る。すなわち，受信されるコーデックライブラリは，例えば，ＭＰ\nＥＧ－２ライブラリ，Ｈ．２６４ライブラリである（【００２９】）。\n送信部１２０は，外部ネットワークに位置したコーデックサーバに所定のコーデックライブ\nラリのダウンロードを要求するコーデック要求メッセージを伝送する（【００３０】）。\n記憶部１３０は，所定マルチメディアコンテンツの動作実行のための少なくとも一つ以上の\nソフトウェアモジュールを記憶するが，ここで，記憶部１３０は，ＨＤＤ，フラッシュロム（Ｒ\nＯＭ）などを言う（【００３１】）。\nＤＳＰコード生成部１４０は，所定のマルチメディアコンテンツを実行させるためのＤＳＰ\nコードを生成するもので，すなわち，記憶部１３０に記憶された各々のソフトウェアモジュー\nルを組み合わせて一つのＤＳＰコードを生成する（【００３２】）。\n例えば，ＭＰＥＧ－２を支援するＤＳＰコードが必要な場合，ＭＰＥＧ－２ライブラリとＯ\nＳ，メディアフレームワーク，及びハードウェアライブラリとを組み合わせて最終ＤＳＰコー\nドを生成する。したがって，生成されたＤＳＰコードは，ＭＰＥＧ－２コーデック用ＤＳＰコ\nードになる（【００３３】）。\nＤＳＰ処理部１５０は，ＤＳＰコード生成部１４０が生成したＤＳＰコードを処理するもの\nで，例えば，ＤＳＰコードをデコーディングして該当ＤＳＰコードを実行させ，所定マルチメ\nディアコンテンツを実行させる（【００３４】）。\n制御部１６０は，マルチメディア再生装置１００内に所定のマルチメディアコンテンツを実\n行させるためのコーデックライブラリが存在しない場合，コーデック要求メッセージを作成し\nて外部ネットワークに位置したコーデックサーバに伝送する（【００３５】）。\nまた，制御部１６０は，マルチメディアコンテンツ提供者から伝送されたデータパケットを\n通じてマルチメディア再生装置１００で実行させる所定マルチメディアコンテンツについての\nコーデック情報が分かり，これによりユーザーの所定マルチメディアコンテンツ再生要求の時，\n該当マルチメディアコンテンツを再生させるＤＳＰコードをＤＳＰコード生成部１４０に要求\nする。以下の(ウ)の図４でデータパケットについては説明する（【００３６】）。\n\u0000 \u0000\u0000\nまた，制御部１６０は，マルチメディア再生装置１００を構成する各機能性ブロック１１０\nないし１５０の動作を制御する（【００３７】）。\n(イ)  【図３】\n図３は，本発明の他の実施形態によるソフトウェアモジュールの組合せによってＤＳＰコー\nドを生成する装置の動作を概略的に示す図面である。示されたように，記憶部（図３では「貯\n蔵部」，以下同じ。）１３０には，各々のソフトウェアモジュール（例えば，ＯＳ，コーデック\nライブラリ，メディアフレームワーク，及びハードウェアライブラリ）が記憶されている（【０\n０３８】）。\nユーザーが所定マルチメディアコンテンツの再生を要求することによって，制御部１６０が\n所定マルチメディアコンテンツの実行に必要なＤＳＰコードを要求して，これによりＤＳＰコ\nード生成部１４０は，記憶部１３０に記憶されたソフトウェアモジュールを組み合わせて一つ\nのＤＳＰコードを生成する（【００３９】）。\n例えば，所定マルチメディアコンテンツを実行するためにＭＰＥＧ－２コーデック（例えば，\nコーデックライブラリ１）が必要な場合，ＤＳＰコード生成部１４０は，記憶部１３０に記憶\nされたソフトウェアモジュールのうちＯＳ，コーデックライブラリ１，メディアフレームワー\nク，及びハードウェアライブラリを組み合わせてＭＰＥＧ－２コーデック用ＤＳＰコードを生\n\u0000 \u0000\u0000\n成する（【００４０】）。\n次いで，ＤＳＰコーデック生成部１４０は，生成されたＭＰＥＧ－２コーデック用ＤＳＰコ\nードをＤＳＰ処理部１５０にローディングして，ＤＳＰ処理部１５０は，ローディングされた\nＭＰＥＧ－２コーデック用ＤＳＰコードをデコーディングして，該当マルチメディアコンテン\nツを実行させる（【００４１】）。\n一方，マルチメディアコンテンツを実行するためにＭＰＥＧ－２コーデックが記憶部１３０\nに記憶されていない場合，制御部１６０は，該当コーデックライブラリ（例えば，ＭＰＥＧ－\n２ライブラリ）を要求するコーデック要求メッセージを作成して外部ネットワークに位置した\nコーデックサーバに伝送する（【００４２】）。\n以後，コーデックサーバから該当コーデックライブラリ（例えば，コーデックライブラリ４）\nが伝送されれば，制御部１６０は，該当コーデックライブラリ（例えば，コーデックライブラ\nリ４）を記憶部１３０に記憶して，ＤＳＰコーデック生成部１４０は，新しくダウンロードさ\nれたコーデックライブラリを用いて該当ＤＳＰコードを生成する（【００４３】）。\n(ウ)  【図４】\n図４は，本発明のまた他の実施形態によるソフトウェアモジュールの組合せによってＤＳＰ\nコードを生成する装置から所定マルチメディアコンテンツについてのコーデック情報を提供さ\nれるデータパケットを示す図面である（【００４４】）。\n示されたように，マルチメディアコンテンツ提供者から伝送されたデータパケットには，マ\nルチメディアコンテンツの題目４１０，マルチメディアコンテンツを再生するのに必要なコー\nデックの名称及びコーデックについての付加情報（例えば，該当コーデックの圧縮率及びバー\nジョン情報など）を含むコーデック情報４２０，及び該当コーデックをダウンロードされるこ\nとができるコーデックサーバのアドレス４３０を含む（【００４５】）。\n\u0000 \u0000\u0000\nしたがって，前記データパケットを通じてマルチメディア再生装置１００で実行されるマル\nチメディアコンテンツのコーデック情報が分かる。これにより，ユーザーによって所定マルチ\nメディアコンテンツが選択されれば，該当マルチメディアコンテンツを実行させ得るコーデッ\nクライブラリに生成されたＤＳＰコードが提供される（【００４６】）。\n(エ)  【図５】\n図５は，本発明のさらに他の実施形態によるソフトウェアモジュールの組合せによってＤＳ\nＰコードを生成する方法を示すフローチャートである。ここで，記憶部１３０にソフトウェア\nモジュール，ＯＳ，メディアフレームワーク，及びハードウェアライブラリは記憶されている\nと仮定する（【００４７】）。\nまず，ユーザーが所定マルチメディアコンテンツの再生を要求することによって制御部１６\n０は，前記マルチメディアコンテンツの実行に必要なＤＳＰコード（例えば，ＭＰＥＧ－２コ\nーデック用ＤＳＰコード）を要求する（Ｓ５１０）。ここで，制御部１６０は，データパケット\nを通じてユーザーが選択したマルチメディアコンテンツを実行させるコーデック情報が分かる\n\u0000 \u0000\u0000\n（【００４８】）。\n次いで，ＤＳＰコード生成部１４０は，制御部１６０が要求したＤＳＰコードを生成するた\nめに記憶部１３０に該当コーデックライブラリが存在するか否かを判断する（Ｓ５２０）。判断\nの結果，記憶部１３０に該当コーデックライブラリ（例えば，ＭＰＥＧ－２ライブラリ）が存\n在する場合（Ｓ５３０），ＤＳＰコード生成部１４０は，記憶部１３０に記憶されたコーデック\nライブラリ，ＯＳ，メディアフレームワーク，及びハードウェアライブラリを組み合わせて制\n御部１６０が要求したＤＳＰコードを生成する（Ｓ５４０）（【００４９】）。\n次いで，生成されたＤＳＰコード（例えば，ＭＰＥＧ－２コーデック用ＤＳＰコード）をＤ\nＳＰ処理部１５０にローディングして（Ｓ５５０），ＤＳＰ処理部１５０は，ローディングされ\nたＤＳＰコードをデコーディングして，該当マルチメディアコンテンツが実行されるように処\n理する（Ｓ５６０）（【００５０】）。\n一方，判断の結果，記憶部１３０に該当コーデックライブラリ（例えば，ＭＰＥＧ－２ライ\nブラリ）が存在しない場合（Ｓ５３０），制御部１６０は，該当コーデックライブラリ（例えば，\nＭＰＥＧ－２ライブラリ）を要求するコーデック要求メッセージを作成して，作成されたコー\nデック要求メッセージを送信部１２０を通じて外部ネットワークに位置したコーデックサーバ\nに伝送する（Ｓ５７０）（【００５１】）。\n以後，コーデックサーバから該当コーデックライブラリ（例えば，ＭＰＥＧ－２ライブラリ）\nが伝送されれば，受信部１１０は，伝送されたコーデックライブラリを受信して，受信された\nコーデックライブラリは，記憶部１３０に記憶される。次いで，ＤＳＰコーデック生成部１４\n０によって該当ＤＳＰコードが生成される（【００５２】）。\nしたがって，ＤＳＰコードを構成するソフトウェアモジュールのうち必要なモジュール（例\nえば，コーデックライブラリ）のみを伝送されることによって，該当ソフトウェアモジュール\nのダウンロード時間を減らすことができ，ネットワーク負荷を減らし得る（【００５３】）。\n(2)  前記(1)の記載によれば，本願補正発明の概要は，以下のとおりのものであ\nると認められる。\nＤＴＶ等のレンダリング機器では，ＤＳＰを用いてメディアデコーダを具現しよ\n\u0000 \u0000\u0000\nうとする試みがあり，ＤＳＰで実行されるソフトウェアを異ならせて様々なコーデ\nックを適用しているところ，レンダリング機器は，ホストＣＰＵ，ＤＳＰ及び記憶\n部で構成され，ＤＳＰが記憶部からＤＳＰコードを読み取って実行させるものであ\nるが，ＤＳＰ基盤のデコーディングデバイスは，コーデック別にＤＳＰコードが異\nなるため，ホストＣＰＵが現在のコーデックに適合したＤＳＰコードをＤＳＰにダ\nウンロードする。\nところで，従来，必要なＤＳＰコードがシステム内部の記憶部に存在しない場合，\nそのＤＳＰコードをネットワークを通じてコーデックサーバからダウンロードし，\n記憶部に記憶しておいて，必要なときに使うようにしていたが，ＤＳＰコードは，\nＰＣのように汎用のＯＳがあってアプリケーションプログラムがＯＳ上で動作する\n構造ではなく，ＤＳＰに合うように具現されたコーデック用ソフトウェア全体（例\nえば，ＯＳ，コーデックライブラリ，メディアフレームワーク，ハードウェアライ\nブラリ等）が一つのＤＳＰコードを形成しており，コーデックが変わるたびにこの\nＤＳＰコード全体が再びＤＳＰにローディングされなければならないという，一般\n的なＰＣ用プログラムより動作環境が劣悪な問題点があり，そのため，ネットワー\nクを通じてダウンロードされるＤＳＰコードのうち，コーデックライブラリのみが\n変更され，ＯＳ，メディアフレームワーク，ハードウェアライブラリ等は，記憶部\nに記憶された他のＤＳＰコードと共通であるにもかかわらず，不要なＯＳ，メディ\nアフレームワーク，ハードウェアライブラリ等も含まれて伝送されるので，ＤＳＰ\nコードのダウンロードを行う際には，ネットワークにオーバーヘッドが発生し，記\n憶部の記憶空間を多く占めるという問題点があった。\n本願補正発明は，外部ネットワークに位置したコーデックサーバから，ＤＳＰコ\nードのソフトウェアモジュールのうち必要なモジュール（例えば，コーデックライ\nブラリ）のみを受信し，各々のソフトウェアモジュールを組み合わせて，所定のＤ\nＳＰコードを生成することを目的として，本件補正後の特許請求の範囲請求項１の\nとおり，デジタルシグナルプロセッサ（ＤＳＰ）処理部と，コーデックサーバから\n\u0000 \u0000\u0000\n第１のソフトウェアモジュールをダウンロードする手段と，ダウンロードされた第\n１のソフトウェアモジュールと，少なくとも第２のソフトウェアモジュールとを記\n憶する記憶部と，前記記憶された第１と第２のソフトウェアモジュールを組み合わ\nせてＤＳＰコードを生成し，前記ＤＳＰ処理部にロードするＤＳＰコード生成部と，\nを有し，前記ＤＳＰ処理部は前記ロードされたＤＳＰコードをデコーディングして，\n前記第１のソフトウェアモジュールに対応するマルチメディアコンテンツを処理し，\n前記マルチメディアコンテンツは前記コーデックサーバの位置情報と前記第１のソ\nフトウェアモジュールの識別情報とを含み，前記マルチメディアコンテンツに対応\nする前記第１のソフトウェアモジュールが前記記憶部に記憶されていない場合，前\n記コーデックサーバの位置情報と前記第１のソフトウェアモジュールの識別情報と\nに基づき，外部ネットワークに位置した前記コーデックサーバに前記第１のソフト\nウェアモジュールのダウンロードを要求するメッセージを生成及び伝送する制御部\nをさらに有することを特徴とする装置である。\n２  引用例について\n(1)  引用例（甲１）には，おおむね，次の内容の記載がある。\n「コンテンツ指向符号化のための新しいデコーダ・ダウンロード可能システム」\nア  要約\n(ア)  この論文では，デコーダ・ダウンロード可能システムと呼ぶ新しいシステムアーキテ\nクチャを説明する。このシステムの目的は，コンテンツの特徴を用いた画像圧縮に基づくマル\nチメディア世界のための統一プラットフォームを提供することである。このシステムにより，\n途切れなく遅延が最小となる再生のための，サーバとクライアント間のネゴシエーションによ\nりデコーダの動的ダウンロードが可能となる。このネゴシエーション方式はＪａｖａとＣＯＲ\nＢＡ（Common Object Request Broker）により実装される。よって，このシステムのサーバと\nクライアントはＯＳとハードウェア仕様とは独立である。このシステムは，インターネットス\nトリーミングのみならずテレビ放送にも適している。\n(イ)  我々は，システムをより柔軟にするため，デコーダアーキテクチャを改善する。デコ\n\u0000 \u0000\u0000\nーダは，ビットストリーム解析，画像圧縮アルゴリズム（ＤＣＴ，ウェーブレット，動き推定\nなど）などの複数の機能を有する。しかし，従来のデコーダは一体のソフトウェアである。そ\nのため，デコーダのパーツを共有することができない。提案する方法により，モジュールベー\nスのデコーダと，複数のデコーダ間でモジュールを共有することが可能となる。結果として，\nフレキシブルデコーダにより，デコーダの冗長なパーツのダウンロードを回避することにより，\nダウンロード時間を短くできる。また，スケーラビリティも実現され，このシステムをマルチ\nメディアプレーヤのみならずマルチメディアコンテンツ検索システムなどのマルチメディアア\nプリケーションで用いることができる。\nイ  イントロダクション\n(ア)  ＭＰＥＧやＪＰＥＧなどの離散余弦変換（ＤＣＴ）ベースの符号化が画像圧縮に広く\n使われている。しかし，ＤＣＴベースのアプローチは，全種類の画像に適しているというわけ\nではない。ある種の画像は，画像コンテンツの特徴を考慮した方法により，効率的に符号化で\nきる。これを「コンテンツ指向符号化方式」と呼ぶ。その例として，アニメーション画像符号\n化を研究している。この研究から，アニメーション画像デコーダをインターネットストリーミ\nングとＴＶ放送で配信できるオープンシステムアーキテクチャが望まれる。しかし，要求を満\nたすオープンシステムはまだ報告されていない。そこで，「デコーダ・ダウンロード可能システ\nム」と呼ぶシステムを実装する。この論文において，システムアーキテクチャを提示する。\n(イ)  コンテンツ指向符号化方式に基づくマルチメディアの世界では，画像圧縮アルゴリズ\nムの数は増加すると見込まれる。従来のデコーダはモノリシックのソフトウェアとして開発さ\nれている。しかし，複数のデコーダが共有できるパーツがある。よって，モジュールベースの\nデコーダを実現することにより，これらの冗長性をなくすことができる。モジュールベースの\nデコーダはモジュールにより構成され，複数のデコーダ間でモジュールを共有するものである。\nこうしたモジュールベースのデコーダを「フレキシブルデコーダ」と呼ぶ。このシステム中の\nデコーダはフレキシブルデコーダとして設計されているため，複数の利点を提供できる。\n…（略）…\nウ  デコーダ・ダウンロード可能システム\n\u0000 \u0000\u0000\n(ア)  プラグインシステムの問題\nMicrosoft Media Player や RealPlayer などのインターネット上のマルチメディアシステム\nは，必要な時に適切なソフトウェアをインストールすることにより，新しいタイプのメディア\nを処理する機能を提供する。任意的にダウンロードされるこうしたソフトウェアはプラグイン\nと呼ばれる。しかし，プラグインシステムには次の問題がある。\n新しいコンテンツが始まっても，クライアントが適したデコーダを有していない時に時間遅\n延が生じる。デコーダをダウンロードするのに，追加的に時間がかかるからである。これによ\nり，コンテンツの途切れのない再生が中断され，特にテレビ放送の場合には大きな問題となる。\n…（略）…\n(イ)  提案するシステムアーキテクチャ\nこのセクションでは，デコーダを動的にダウンロードし，遅延なしに再生できるシステムア\nーキテクチャを提案する。\nａ  提案するシステムアーキテクチャを図２に示す。\nクライアントは５つのパーツにより構成される。５つのパーツとは，「コアエンジン」，「スケ\nジュール管理エンジン」，「デコーダコンポーネント管理エンジン」，「ファイルＩ／Ｏ」，「ユー\nザインタフェース」である。パーツ間の各インタフェースは図２において○数字で示した。\n【図２】\n\u0000 \u0000\u0000\nサーバ側には，コンテンツの実際のビットストリームを格納する「コンテンツサーバ」，デコ\nーダのバイナリコードを格納する「デコーダサーバ」，及び各コンテンツのプロフィールを記述\nした情報（以下，コンテンツ情報と呼ぶ）を格納する「情報サーバ」がある。対応するコンテ\nンツ情報を情報サーバにより容易に読み出すため，この情報は階層構造を有する。図３にコン\nテンツ情報を示す。各サーバは同じマシン上にあっても，ロードバランシングができるように\n異なるマシン上にあってもよい。（判決注：図３には，「情報サーバ」が格納する各コンテンツ\nのプロフィールを記述した情報（コンテンツ情報；content information）について，コンテン\nツ名（content name），作者（author），コンテンツＩＤ（content ID）及び最適なデコーダ（optimum\ndecoder）等の情報から構成されることが記載されている。）\n【図３】\nクライアントシステムはＪａｖａを用いて実装する。メディア処理の部分はＪＭＦ（Java\nMedia Framework）を用いて開発されている。こうしたのは，提案するシステムが様々な環境で\n動作しなければならないからである。現時点は，Ｊａｖａを用いてメディア処理の部分を構成\nすることには多少の疑問がある。そのため，ＪＭＦに依存するメディア処理をするモジュール\n\u0000 \u0000\u0000\nは他の部分から完全に取り外せるように，システムアーキテクチャを設計した。しかし，Ｊａ\nｖａにより開発したデコーダは，サーバがクライアントのオペレーティングシステムの種類を\n心配しなくて良いとのメリットが得られる。これらのデコーダはフレキシブルデコーダとして\nも有用である。\nＣＯＲＢＡ（Common Object Request Broker）は，サーバとクライアントとの間の，ハード\nウェアの仕様とは独立であるインタフェースの規定に用いられる。さらに，このシステムは，\nＣＯＲＢＡ  ＧＩＯＰ（General Inter-ORB Protocol）により，どのトランスポートプロトコ\nルからも独立している。それゆえ，このシステムは，インターネット，テレビ放送，モバイル\nシステムなどで利用できる。\nｂ  このシステムのプロシージャは次の順序で実行される：\n(a)  クライアントシステムのスケジューラ管理エンジンがスタートし，コンテンツ情報を取\n得する。このエンジンがコンテンツ情報を解析し，デコーダコンポーネント管理エンジンに，\nクライアント側にデコーダがあるかどうか確認する。\n(b)  クライアントが対応するデコーダを有していない場合，スケジューラ管理エンジンはデ\nコーダコンポーネント管理エンジンにデコーダＵＲＩを取得するように命令する。デコーダコ\nンポーネント管理エンジンは，コンテンツサーバに，デコーダがどこに記憶されているか要求\nする。\n(c)  情報サーバは，デコーダ情報を用いて，要求されたデコーダがどこに記憶されているか\n探し始める。クライアントにデコーダＵＲＩを返す。\n(d)  スケジューラ管理エンジンは，デコーダサーバからのデコーダのダウンロードを何時開\n始するか決定し，デコーダコンポーネント管理エンジンに命令する。この命令をするタイミン\nグは非常に重要である。何故なら，ネットワークの帯域幅が狭い場合などに，デコーダのダウ\nンロードにより連続的なメディア再生が中断されるからである。\nｃ  システム中の各パーツの役割は次のとおりである：\n・コアエンジン\nこのパーツは，メディア再生やトリックモードなどの実装を提供する。デコーダは実際には\n\u0000 \u0000\u0000\nこのパーツにインストールされる。\n・デコーダコンポーネント管理エンジン\nこのパーツは，クライアントシステム中のデコーダを管理し，どのデコーダが必要か問い合\nわせ，デコーダをダウンロードし，ストックされているデコーダを削除する。\n・スケジュール管理エンジン\nこのパーツは，メディア再生を何時開始するか，デコーダを何時ダウンロードするか，又は\nデコーダを何時削除するか制御する。実際の機能を提供する各パーツに，タイムリーに命令す\nる。\n・ユーザインタフェース\nこのパーツはユーザ入力のインタフェースである。\n・ファイルＩ／Ｏ\nこのパーツは，その使用目的に基づきプロトコルを選択する：１）ＣＯＲＢＡ，コンテンツ\n情報の送受信，２）ＨＴＴＰ／ＦＴＰ，デコーダのバイナリデータのダウンロード，３）ＲＴ\nＰ／ＭＰＥＧ２－ＴＳ，メディアデータの受信。\nｄ  システム中の各インタフェースを以下に説明する：\nインタフェース１：デコーダに関する情報の交換\nインタフェース２：コンテンツに関する情報の交換\nインタフェース３：デコーダのバイナリデータのダウンロード\nインタフェース４：コンテンツのメディアデータのダウンロード\nインタフェース５：クライアントのスケジューラで用いられるＥＰＧ（電子番組案内）のダ\nウンロード\nインタフェース６：コアエンジンへのデコーダモジュールの供給\nインタフェース７：デコーダのメモリへのロードが何時始まるか示し，メモリロードがどの\n状態にあるかに関する情報を提供\nインタフェース８：デコーダが追加されるのか削除されるのかをユーザに示す\nインタフェース９：コンテンツに関する情報を提供し，クライアントシステムにおいてデコ\n\u0000 \u0000\u0000\nーダのダウンロード及び削除を何時開始するか示し，デコーダの存在を\n確認\nインタフェース１０：ユーザによる入力情報の受け取り\nインタフェース１１：再生可能なコンテンツの情報の表示，ユーザによるコンテンツの選択\n…（略）…\nエ  フレキシブルデコーダ\n(ア)  機能\nフレキシブルデコーダにより，モノリシックプログラムとして扱われず，複数の機能を提供\nする複数のモジュールの集まりとして扱われるアーキテクチャが可能となる。フレキシブルデ\nコーダは，ＭＰＥＧ－４システムにおける標準化で検討されたことがある。ＭＰＥＧ－４は，\n効率的な圧縮だけでなくユーザのコンテンツベースの操作などの機能を提供する柔軟かつ拡張\n可能なアーキテクチャを確立するように設計された。フレキシブルデコーダアーキテクチャは，\nＭＰＥＧ－４システムの標準には含まれないが，このアーキテクチャにより，新しいタイプの\nメディアコンテンツが届いた時に，クライアントが，必要なモジュールのみをダウンロードす\nることによりデコーダを構成できる。このアーキテクチャにより，デコーダをダウンロードす\nるためのネットワーク帯域幅とクライアント又はサーバのリソースを削減できる。それゆえ，\nデコーダダウンロードシステムにおいてフレキシブルデコーダを用いると効率的である。\n(イ)  フレキシブルデコーダへのアプローチ\n先行文献はフレキシブルデコーダのための方法を示している。この文献に基づきデコーダを\n開発することにより，復号プロセスが継続中に，ユーザがＤＣＴやウェーブレットなどの画像\n処理アルゴリズムを変更できる。デコーダの機能の分離は，３コンポーネントモデルにより実\n現できる。３コンポーネントモデルは，デコーダが，図５に示した，①ビットストリーム解析\nブロック，②データ再生ブロック，及び③画像再構成ブロックに分かれることを意味する。ビ\nットストリーム解析ブロックは，ビットストリームをそのシンタックスに従って解析する。画\n像再構成ブロックは，実際の画像復号アルゴリズムを提供する。データ再生ブロックは，ビッ\nトストリーム解析ブロックと画像再構成ブロックとの間の分離で重要な役割を有する。データ\n\u0000 \u0000\u0000\n再生ブロックは画像再構成ブロックに対してデータアライメントを提供する。これは，データ\n再生ブロックと画像再構成ブロックとの間の変換プロセスと考えることができる。結果として，\nデータ再生ブロックがあることにより，一方の側での変更が他方の側に影響しなくなる。\nこのデコーダアーキテクチャは，フレキシブルデコーダにとって非常に有用であると思われ\nる。しかし，デコーダをモノリシックプログラムとして開発することを意味する従来の方法と\n比べて，このアーキテクチャに従ってデコーダを開発することは，より難しくなる。\n【図５】\n(ウ)  ビットストリーム解析からの画像処理の分離\nこの提案では，ビットストリーム解析するモジュールは，画像を復号するモジュールから完\n全に分離される。これにより，デコーダは，同じ画像復号アルゴリズムのための様々なモジュ\nールを用いられる。例えば，クライアントのハードウェア仕様（ＭＭＸ，３ＤＮｏｗ！，ＤＳ\nＰ，ＡＳＩＣなど）に適したＩＤＣＴモジュールを選択して，同じビットストリーム解析を共\n有できる。デコーダ・ダウンロード可能システムは，メディア処理のみならずサーチエンジン\nなどの様々なマルチメディアシステムに使うことができる。この柔軟性は，単に画像復号アル\nゴリズムのモジュールを他のプロセスのもので置き換えることにより実現できる。分離をより\n柔軟にするため，Ｊａｖａなどのクライアントに依存しないデコーダソフトウェアを利用する。\n…（略）…\nオ  結論\n本論文では，コンテンツ指向の符号化方式のための新しいシステムアーキテクチャを提案し\nた。このシステムにより，クライアントとサーバとの間のネゴシエーションにより，デコーダ\n\u0000 \u0000\u0000\nを動的にダウンロードすることができる。それゆえ，クライアントは，画像符号化方式に関す\nる知識がなくてもコンテンツを復号でき，メディアコンテンツを途切れなしに再生できる。こ\nのシステムは，ＪａｖａとＣＯＲＢＡにより開発されたので，移植性に優れている。デコーダ\nをフレキシブルデコーダとして開発すれば，デコーダ・ダウンロード可能システムにとって有\n用であると言える。ＭＳＤＬ－Ｓを用いてビットストリーム解析を他の処理から分離する方法\nも提案した。\n(2)  前記(1)の記載によれば，引用発明の概要は以下のとおりのものであると認\nめられる。\n引用発明の目的は，デコーダ・ダウンロード可能システムにおいて，コンテンツ\nの特徴を用いた画像圧縮に基づくマルチメディアのために統一プラットフォームを\n提供するものであり，再生を途切れなく遅延が最小となるように，サーバとクライ\nアント間のネゴシエーションにより，デコーダの動的ダウンロードを可能とするこ\nとにある。\nところで，デコーダは，ビットストリーム解析，画像圧縮アルゴリズム（ＤＣＴ，\nウェーブレット，動き推定など）などの複数の機能を有するが，従来のデコーダは\n一体のソフトウェアであったため，デコーダのパーツを共有することができなかっ\nた。\nしかし，引用発明のシステムによれば，モジュールベースのデコーダ（フレキシ\nブルデコーダ）はモジュールにより構成され，複数のデコーダ間でモジュールを共\n有することが可能となり，フレキシブルデコーダにより，デコーダの冗長なパーツ\nのダウンロードを回避することによって，ダウンロード時間を短くすることができ\nる。引用発明のシステムは，クライアントとサーバからなり，システムが様々な環\n境で動作するように，クライアントシステムはＪａｖａを用いて実装したため，Ｊ\nａｖａにより開発したデコーダは，サーバがクライアントのオペレーティングシス\nテムの種類を心配する必要がないというメリットがある。\nそして，クライアントは，コンテンツ情報（コンテンツ情報は，最適なデコーダ\n\u0000 \u0000\u0000\n情報を含む。）を用いて，これに対応するデコーダがクライアント側にあるかどうか\nを確認し，デコーダを有していない場合，コンテンツサーバに対して，デコーダが\nどこに記憶されているのかを要求し，情報サーバは，デコーダ情報を用いて，要求\nされたデコーダのデコーダＵＲＩをクライアントに返し，クライアントは，情報サ\nーバから取得したデコーダＵＲＩを用いてデコーダサーバからデコーダをダウンロ\nードする。\nまた，フレキシブルデコーダは，モノリシックプログラムとして扱われず，複数\nの機能を提供する複数のモジュールの集まりとして扱われるアーキテクチャが可能\nであるから，クライアントは，新しいタイプのメディアコンテンツが届いたときに，\n必要なモジュールのみをダウンロードすることによりデコーダを構成できるため，\nデコーダをダウンロードするためのネットワーク帯域幅とクライアント又はサーバ\nのリソースを削減できる。\nさらに，フレキシブルデコーダは，１）ビットストリーム解析ブロック，２）デ\nータ再生ブロック，及び３）画像再構成ブロックに分かれており，ビットストリー\nム解析をするモジュールは，画像を復号するモジュールから完全に分離されるから，\nデコーダは，クライアントのハードウェア仕様（ＭＭＸ，３ＤＮｏｗ！，ＤＳＰ，\nＡＳＩＣなど）に適したＩＤＣＴモジュールを選択して，同じビットストリーム解\n析を共有できるなど，同じ画像復号アルゴリズムのための様々なモジュールを用い\nることができ，単に画像復号アルゴリズムのモジュールを他のプロセスのもので置\nき換えることにより実現することができる。\n３  公知文献について\n(1)  公知文献１（甲２）\nア  公知文献１には，おおむね，以下の内容の記載がある。\n(ア)  要約\n本発明は，新しいコンテンツ形式を再生するようにアップグレード可能な拡張可能ディスク\nプレイヤを提供する。プレイヤの機能は，インターネットを介してウェブサーバから適切なデ\n\u0000 \u0000\u0000\nコーダをダウンロードすることにより，拡張可能である。このように，プレイヤは，もともと\nサポートしていないコンテンツを再生することができる。コンテンツ形式が未知である場合，\nプレイヤは，ディスクが適切なデコーダを有するウェブサイトにリンクする URL を有するか否\nかを検査する。ディスクが URL を有する場合，プレイヤはウェブサイトにアクセスして適切な\nデコーダをダウンロードする。同様に，レコーダの機能も適切なエンコーダをダウンロードす\nることにより拡張され得る。\n(イ)  技術分野\n本発明は，概してディスクプレイヤに関するものであり，特に新しいコンテンツ形式を再生\nするようにアップグレード可能なディスクプレイヤに関するものである（【０００１】）。\n(ウ)  背景技術\n光ディスクは，多様なフォーマットでエンコードされ得るオーディオ，データ，ビデオ，画\n像，アニメーション等のような多様な種類のメディアを格納するために広く使用されてきてい\nる。例えば，MPEG-2 や MPEG-4 や DivX や H26.L はビデオ用に使用されており，MP3 や SACD はオ\nーディオ用に使用されており，Flash や SVG はアニメーション用に使用されている。一般的に\n従来のプレイヤは，コンテンツ形式のサブセットのみをサポートする固定数のデコーダを有し\nている。新しいコンテンツ形式が市場に導入されると，この新しいフォーマットでディスクを\n再生するために，消費者は新しいコンテンツ形式をサポートするデコーダを備えた新しいプレ\nイヤを購入する必要がある。これは消費者にとって非常に高コストである。顧客は新しいプレ\nイヤを今購入して結果として数年のうちに旧式になることがわかるか，新しいフォーマットを\n備えたディスクを購入しないかについて困難な決定を行う必要がある。消費者の多数が新しい\nフォーマットを備えたディスクを購入しないことを決定した場合，新しいフォーマットの採用\nを著しく妨げ，新しい光ストレージ技術の開発にかなり影響を及ぼす（【０００２】）。\n(エ)  発明が解決しようとする課題\nしたがって，既存のコンテンツ形式を再生できるだけでなく，新しいコンテンツ形式を再生\nするようにアップグレード可能でもよいプレイヤを提供する必要がある（【０００３】）。\n(オ)  課題を解決するための手段\n\u0000 \u0000\u0000\n本発明は，新しいコンテンツ形式を再生するようにアップグレード可能な拡張可能ディスク\nプレイヤを提供する。プレイヤの機能は，インターネットを介してウェブサーバから適切なデ\nコーダをダウンロードすることにより，拡張可能である。このように，プレイヤは，もともと\nサポートしていないコンテンツを再生することができる（【０００４】）。\n本発明の一実施例によると，拡張可能ディスクプレイヤが提供される。プレイヤは，ディス\nクのコンテンツオブジェクトのコンテンツ形式を決定する手段と，コンテンツ形式が未知であ\nると決定した場合に，ディスクが適切なデコーダを有するウェブサイトにリンクする URL を有\nするか否かを検査する手段と，ディスクが URL を有することを検査した場合に，ウェブサイト\nにアクセスして適切なデコーダをダウンロードする手段とを有する（【０００５】）。\n(カ)  発明を実施するための最良の形態\nａ  図１は，本発明の一実施例による拡張可能ディスクプレイヤ 10 の動作の概要を示してい\nる。プレイヤ 10 はインターネットに接続可能であり，ウェブアクセス用の基本的なプロトコル\nスタックのサポート(例えば HTTP プロトコルスタック)を有する。光ディスク 20 がプレイヤ 10\nに挿入されると，プレイヤはディスクの内容を認識して再生しようとする。プレイヤがコンテ\nンツのフォーマットを処理できない場合，インターネットを介してウェブサーバ 30 から適切な\nデコーダを見つけてダウンロードすることを試みる。\nデコーダがダウンロードされた後に，同じコンテンツ形式が次回認識されたときにプレイヤ\nがそれを再びダウンロードする必要がないように，デコーダがプレイヤに格納されることが好\nましい（【００１２】）。\n【図１】\nｂ  図２は，本発明の一実施例に従って適切なデコーダを取得する拡張可能ディスクプレイ\nヤにより実行される処理 100 を示したフローチャートである。プレイヤへのディスクの挿入時\n\u0000 \u0000\u0000\nに，プレイヤはディスクのコンテンツオブジェクトを提示しようとし(ステップ 102)，プレイ\nヤに既知のコンテンツ形式を有しているか否かを決定する(ステップ 106)。\nコンテンツ形式がプレイヤに既知である場合，プレイヤはコンテンツオブジェクトをロード\nして処理する(ステップ 112)。しかし，プレイヤがコンテンツ形式を認識していない場合，適\n切なデコーダを有するウェブサイトにリンクする URL がディスクで利用可能であるか否かを決\n定しようとする(ステップ 116)。\nステップ 116 で URL がディスクに存在することが決定されると，プレイヤはその URL を使用\nしてウェブサイトにアクセスする(ステップ 136)。次に，プレイヤはデコーダが見つかったか\n否かを決定する(ステップ 142)。見つかった場合，プレイヤはデコーダをダウンロードし(ステ\nップ 152)，コンテンツオブジェクトを処理し始める(ステップ 156)。（（【００１３】，【００１４】）。\n【図２】\nこのように，DVD プレイヤのような再生装置の機能は，適切なデコーダモジュールをダウン\nロードすることにより拡張され得る（【００１６】）。\n\u0000 \u0000\u0000\nイ  前記アの記載によれば，公知文献１には，コンテンツとともに，このコンテ\nンツの再生を実行する適切なデコーダを有するウェブサイトにリンクするためのＵ\nＲＬが記憶されたディスクをプレイヤに挿入することにより，ウェブサイトにアク\nセスしてデコーダをダウンロードする技術が記載されていることが認められる。\n(2)  公知文献２（甲３）\nア  公知文献２には，おおむね，以下の内容の記載がある。\n(ア)  発明の属する技術分野\n本発明は，異なる圧縮方式で圧縮されたデータが混在して記録された記録媒体からデータを\n読み出してデコードして再生するときに，デコードに必要とするデコードのためのプログラム\nを，上記プログラムが記録されている場所に応じて取得するようにした再生装置，再生方法及\nび再生システムに関する（【０００１】）。\n(イ)  発明が解決しようとする課題\nコンピュータ装置からディジタル音楽コンテンツをディジタルデータのままで記録媒体に記\n録する機能を備えた携帯型のオーディオプレーヤは，特定のオーディオ圧縮方式に対応するも\nのであって，例えばＭＰ３プレーヤでは，ＭＰ３データを専用デコーダによりデコードしてオ\nーディオに戻すので，ＭＰ３以外の他のオーディオ圧縮方式のディジタル音楽コンテンツを取\nり扱うことはできない（【０００７】）。\n今日，様々なオーディオ圧縮方式が提案されており，各種オーディオ圧縮方式に個別に対応\nするオーディオプレーヤを所有することは，ユーザにとって不便であることから，複数のオー\nディオ圧縮方式に１台で対応できるマルチフォーマット対応の携帯型のオーディオプレーヤの\n出現が望まれている（【０００８】）。\nそこで，本発明の目的は，複数のオーディオコーデックに対応するマルチコーデック対応の\nオーディオシステムを安価に実現することにある（【０００９】）。\n(ウ)  発明の実施の形態\nａ  オーディオ再生装置４の電気的な構成を図３に示してある（【００２３】）。\n\u0000 \u0000\u0000\n【図３】\nこのオーディオ再生装置４は，ＵＳＢ端子１４を介してコンピュータ装置３とＵＳＢケーブ\nル２４で接続され，当該コンピュータ装置３から転送されたディジタル音楽コンテンツＣ１が\nＵＳＢコントローラ２５から内部バス２６を介して転送されるＣＰＵ２７を備える。上記内部\nバス２６には，フラッシュメモリ３０，操作キーコントローラ３１，デジタルシグナルプロセ\nッサ（DSP:Digital SignalProcessor）３２，出力増幅器３３，ＥＥＰＲＯＭ（Electrically\nErasable Programmable Read‐Only Memory）３４，ＬＣＤ（Liquid Crystal Display）コント\nローラ３５，ＲＴＣ（Real Time Clock）回路３６等が接続されている（【００２４】）。\nこのオーディオ再生装置４では，大容量のメモリ空間をサポートするＣＰＵ２７により音楽\nデータのダウンロードやユーザインターフェース，また，大容量の不揮発性メモリであるフラ\nッシュメモリ３０の管理を行う。上記ＣＰＵ２７には，ＣＰＵコア２７Ａ以外にメモリ２７Ｂ，\n２７Ｃも内蔵したワンチップマイクロコンピュータが採用されている。このＣＰＵ２７のプロ\n\u0000 \u0000\u0000\nグラムメモリには内蔵のマスクＲＯＭ（Read‐０nly Memory）２７Ｂが用いられている（【００\n２５】）。\n上記オーディオ再生装置４は，複数のフォーマットのディジタル音楽コンテンツに対応する\nために，音楽コーデックをソフトウエアにて実現しており，所定の圧縮方式でデータ圧縮され\nた音楽データＤ１に対応した伸長方式で再生するための再生用コードであるコーデックプログ\nラムをフラッシュメモリ３０に予め格納しておき，このコーデックプログラムをフラッシュメ\nモリ３０から同じフラッシュメモリ３０内にあるインデクスデータに基づいてＤＳＰ３２内部\nのＲＡＭ３２Ｂ（Random Access Memory）上にコピーして，上記ＤＳＰ３２内部のメモリ空間\nに置いたコーデックプログラムを実行することにより，音楽再生を行う（【００２６】）。\nすなわち，このオーディオ再生装置４において，ＣＰＵ２７は，音楽データとコーデックプ\nログラムが入った大容量の不揮発性メモリすなわちフラッシュメモリ３０を管理する（【００２\n７】）。\nこのオーディシステムにおけるオーディオ再生装置４では，ソフトウエアにて音楽コーデッ\nクを実現しているので，装置全体を小型かつ安価に作ることができる。なお，ハードウエアに\n依存する音楽コーデックで複数フォーマットに対応するには，対応するコーデック毎にハード\nウエアが必要となる（【００２８】）。\nまた，上記オーディオ再生装置４において，ソフトウエアによる音楽コーデックを実行する\nＤＳＰコア３２Ａは，コーデックのようにリアルタイムに信号を加工する処理のために特化さ\nれたインストラクションを有するので，少ない消費電力で処理を完了することができる。また，\nＤＳＰ３２内部のメモリ空間は，外部のメモリ空間をアクセスする場合に比べ，結線による容\n量性負荷が殆どないため，少ない消費電力で高速にアクセスすることができる（【００２９】）。\nコーデックプログラムは高速な演算が期待される処理であり，上記ＤＳＰ３２では，この処\n理を効率的に実効することができる。なお，ＤＳＰ３２内部のメモリは，高速性を追求した構\n造となっているため，一般的な外部メモリと比較してビット単価が高いが，現在使用するコー\nデックのみを外部のフラッシュメモリ３０から使用前にコピーするので，コーデック１個分の\n容量があればよい（【００３０】）。\n\u0000 \u0000\u0000\nここで，コーデックプログラムを記憶するフラッシュメモリ３０は，書換え可能であるので，\nユーザがコーデックプログラムを追加することができる。なお，フラッシュメモリ３０に追加\n記憶するコーデックプログラムは，上記ＥＭＤサーバ１からインターネット２を介して配信す\nるようにしてもよい（【００３１】）。\n電子音楽配信サービスにより配信された例えば有料の音楽データは，コーデックプログラム\nとともに不揮発性メモリに記憶される必要があり，コーデックプログラムとともに物理的に同\n一のデバイスであるフラッシュメモリ３０に記憶することは，デバイスの実装面積及び価格の\n点で有利である（【００３２】）。\nｂ  オーディオ再生装置４のＣＰＵ２７は，実際に音楽再生を行う場合に，音楽データの先\n頭に予め付加されているヘッダ情報をフラッシュメモリ３０から読み込み，現在ＤＳＰ３２内\nに設定してあるコーデックで再生可能な圧縮方式をＲＡＭ２７Ｃから取得し，取得された情報\nのうちの現在ＤＳＰ３２に設定してあるコーデックとヘッダ情報から得られた圧縮形式とが同\n一であるか否かを判定する（【００３９】）。\nそして，上記ＣＰＵ２７は，ＤＳＰ３２に入っているコーデックが異なっている場合には，\nフラッシュメモリ３０に記憶されているインデクスデータに基づいてフラッシュメモリ３０に\n書き込まれているコーデックプログラムから，再生する音楽データフォーマットに合致したコ\nーデックプログラムを探し，ＤＳＰ３２にダウンロードするとともにＲＡＭ２７ＣへＤＳＰ３\n２にダウンロードしたコーディックに関する情報を記憶させる。ＲＡＭ２７Ｃに記憶されたコ\nーディックに関する情報を次の音楽データを再生するときに参照されることになる。上記ＣＰ\nＵ２７は，その後，フラッシュメモリ３０から音楽データをＤＳＰ３２に送って，音楽再生を\n行う（【００４０】）。\nここで，上記ＣＰＵ２７は，上記ＤＳＰ３２がデコードする音楽情報を管理し，上記音楽情\n報の音楽フォーマットによらず，音楽情報の再生の進捗に同期して，音楽情報を一定量ずつ上\n記ＤＳＰ３２に送って，音楽情報を再生する（【００４１】）。\nｃ  このオーディオシステムにおけるディジタル音楽コンテンツＣ１は，図８に示すように\nヘッダＨ１と音楽データＤ１とからなり，ヘッダＨ１にはファイルＩＤ，ヘッダサイズ，コン\n\u0000 \u0000\u0000\nテンツキー，ファイル，コーデックＩＤ，ファイル名及びファイル情報が格納されているとと\nもに，再生制限に関する再生制限情報として再生制限データ，再生開始日，再生終了日，再生\n可能回数，再生回数及びオーディオファイルが格納されている（【００４４】）。\nコンテンツキーは，音楽データＤ１に対する暗号化を解くための暗号データであり，実際上\nコンピュータ装置３及びオーディオ再生装置４の間でディジタル音楽コンテンツＣ１の授受が\n行われる際に，共通のセッションキーでさらに暗号化された状態で転送される。コーデックＩ\nＤは，オーディオ再生装置４でディジタル音楽コンテンツＣ１の音楽データＤ１を再生する場\n合の伸長方式に対応したＩＤ番号であり，例えば，１Ｄ番号「１」に対してはＡＴＲＡＣ\n（Adaptlve Transform Acoustic Coding）３と呼ばれるデータ圧縮方法に応じた伸長方式が割\nり当てられ，ＩＤ番号０ｘ００００に対してはＭＰ３（MPEG Audio Layer-3）と呼ばれるデー\nタ圧縮方法に応じた伸長方式が割り当てられている。なお，“０ｘ”を数値の前に付けることで\n１６進数であることを示している（【００４５】）。\nイ  前記アの記載によれば，公知文献２には，音楽データＤ１（コンテンツ）と，\nこの音楽データＤ１を再生するコーデックのＩＤであるコーデックＩＤを含むヘッ\nダＨ１で音楽コンテンツＣ１が構成される技術が記載されていることが認められる。\n４  取消事由１（本願補正発明の容易想到性の判断に係る手続違背）について\n\u0000 \u0000\u0000\n(1)  原告は，本件審決は，本願補正発明と引用発明との相違点４について，引用\n発明並びに公知文献１及び２（甲２，３）に記載された公知技術に基づいて，当業\n者であれば容易に想到できると判断したが，拒絶理由通知及び拒絶査定において，\n公知文献１及び２は何ら引用されておらず，上記各公知文献は審決において初めて\n示されたものであり，原告に対して，拒絶査定の理由と異なる新たな拒絶理由の通\n知はなく，意見書提出の機会も与えられなかった。したがって，本件審決には，特\n許法１５９条２項により準用される同法５０条に違反する違法があり，その違法は\n審決の結論に影響を及ぼすことが明らかである旨主張する。\nしかし，特許法１５９条１項後段，同法５３条１項，同法１７条の２第１項４号，\n法１７条の２第６項及び法１２６条５項によれば，拒絶査定不服審判を請求する場\n合において，その審判の請求と同時にした補正が，補正後における特許請求の範囲\nに記載されている事項により特定される発明が特許出願の際独立して特許を受ける\nことができないものである場合には，審判合議体は，決定をもって当該補正を却下\nしなければならず，この却下の決定をする場合には，特許法１５９条２項後段，同\n法５０条ただし書及び特許法１７条の２第１項４号により，審判合議体は，拒絶査\n定不服審判において査定の理由と異なる拒絶の理由を発見したときであっても，特\n許出願人に対して，拒絶の理由を通知して意見書提出の機会を与える必要はないと\n解される。\nこれを本件についてみると，本件審決は，拒絶査定不服審判の請求と同時にされ\nた本件補正により特定された本願補正発明について，引用発明，公知文献１及び２\nに記載の公知技術並びに技術常識に基づいて当業者が容易に発明をすることができ\nたものであり，特許法２９条２項により，特許出願の際独立して特許を受けること\nができないものであることを理由として，本件補正を却下しており，上記のとおり，\nこの場合には改めて拒絶の理由を通知して意見書提出の機会を与える必要はないと\n解されるから，本件審決の手続に違法はない。\n原告の上記主張は理由がない。\n\u0000 \u0000\u0000\n(2)  原告は，拒絶査定不服審判を請求し，特許請求の範囲について拒絶査定の理\n由を解消するような限定を付加して補正をした特許出願人（審判請求人）に対する\n補正却下の理由が，特許出願人が想定し得ない新たな引用文献を引用した新たな拒\n絶の理由である独立特許要件違反の場合には，特許出願人に何ら責任はなく，かか\nる場合にまで意見書提出の機会を与えないことは，特許庁審判官による再度の審査\n（審理）を適正に受ける権利を，特許出願人から不当に奪うものであること，そも\nそも特許法１５９条１項及び２項の立法趣旨は，拒絶査定不服審判請求時にした補\n正が新規事項を追加するものである場合において優先的に補正却下を適用すること\nにあるのであって，拒絶査定不服審判請求時に原査定の拒絶理由を解消すべく請求\n項を減縮した補正を，意見書・補正書の提出機会を与えずに，新たな拒絶理由によ\nって補正却下するような事態に適用することは想定されていないのであるから，拒\n絶査定不服審判請求時にした補正を，補正違反の態様にかかわらず一律に補正却下\nの対象とした同法１５９条１項後段及び２項後段の規定自体が立法の誤りであり，\n憲法３１条に反し違憲であって，本件審決もまた違憲な規定に則ったものであるか\nら違憲である旨主張する。\n特許法１５９条１項後段及び２項後段は，平成５年法律第２６号により規定され\nたものであることから，その立法経緯等について検討するに，従前の特許法におい\nては，特許請求の範囲の補正については，出願公告の決定謄本の送達前に出願当初\nの明細書に記載された事項の範囲内において特許請求の範囲を増加，減少又は変更\nする補正は，明細書の要旨を変更しないものとみなすと規定されているのみであっ\nたことから，拒絶理由通知後であっても，特許請求の範囲の拡張，変更等の補正を\n行うことが許容されていたのみならず，特許請求の範囲の補正の回数も制限されて\nいなかったため，一つの出願において拒絶理由が通知されるたびに特許請求の範囲\nの補正を行うことも許容されていた。そして，このような補正がされた場合には，\n審査対象が変更されるため，そのたびに新たな先行技術の調査及びその結果に基づ\nく対比判断等の新たな審査を行わざるを得なかったが，実際の出願において何回も\n\u0000 \u0000\u0000\n特許請求の範囲についての補正が行われた場合は，出願間の取扱いに公平性を欠く\nことになるのみならず，このような出願が存在することにより，他の出願の審査の\n遅延をも生じるおそれがあるという弊害が生じていた。さらに，第三者にとっては，\n出願公開後に補償金請求権が発生するにもかかわらず，特許請求の範囲の補正が何\n回も行われることにより，特許が付与がされる対象が何回も変更されることとなり，\nその監視負担が過大となるという弊害も生じていた。そこで，平成４年１２月にと\nりまとめられた工業所有権審議会の答申（以下「審議会答申」という。）においては，\n昭和６３年に我が国の特許法に主要国と同様の多項制が既に導入されており，その\n利用も拡大しつつあること等も踏まえ，出願公告の決定謄本送達前の特許請求の範\n囲の補正について，制度及び審査実務等の運用の国際的調和，出願間の取扱いの公\n平性及び迅速な権利付与等の観点から適正化を図るべきであるとされた。\nまた，従前の特許法においては，出願公告の決定謄本の送達前に拒絶査定不服審\n判を請求する際には，特許請求の範囲の拡張，減縮，変更を含めた広範な補正を行\nうことが認められているとともに，審判請求時に補正がされた場合には，審査前置\n制度により，審査官が再度審査を行い，拒絶査定の対象となった請求項が削除され\nる等，拒絶査定をした理由が解消されている場合には，審査官に拒絶査定を取り消\nす機会が与えられていた。この審査前置制度の趣旨は，審判請求時に補正がされた\n場合は，審判合議体による審理の前に審査官に再度審査をさせることにより，審査\n段階において得られた調査結果や出願内容の知識を活用し，出願内容の理解や調査\nに要する時間を節約して処理を行うことにあった。しかしながら，審査前置制度は，\n我が国の特許法が単項制を採用していた頃に導入されたものであり，拒絶査定不服\n審判請求時に特許請求の範囲の拡張，変更を行う補正も許容されていたことから，\nそのようは補正がされた場合は，拒絶査定を受けた発明とは別の発明について，審\n査官による再度の審査（または審判官による審理）が行われることとなり，その結\n果，もとの審査における審理の手続や結果が軽視され，新たに最初から審理がし直\nされることともなりかねなかったことから，審理の迅速性及び的確性が十分に確保\n\u0000 \u0000\u0000\nされ難いという問題を有していた。また，拒絶査定不服審判請求時に，特許請求の\n範囲を拡張，変更する補正がされると，多項性の利用が拡大しつつある状況におい\nては，多項制を有意義に活用し，特許請求の範囲の請求項の削除等の補正のみを行\nう出願との間において，出願の取扱いの公平性が担保されないこととなっていたの\nみならず，前者の出願が存在することにより，後者の出願の審理が遅延するという\n弊害をも生じていた。このため，審議会答申においては，拒絶査定不服審判におけ\nる補正の範囲に関する主要国の制度及び運用も考慮しつつ，行政処分である拒絶査\n定の瑕疵の是正をより迅速，的確かつ公平に行うため，出願公告の決定謄本送達前\nの拒絶査定不服審判の請求時における補正の範囲の適正化を行うべきであるとされ\nた。\nそこで，平成５年法律第２６号において，最後の拒絶理由通知に対する補正につ\nいて，明細書及び図面に新規事項を追加しないものであるほか，特許請求の範囲の\n減縮に当たる補正がされた場合においても，補正後の発明が独立して特許を受ける\nことができるもののみを許容すること（独立特許要件）を含めて補正の範囲の適正\n化を図るべく特許法１７条の２の規定が整備され，拒絶理由の通知について同法５\n０条ただし書の規定が設けられるとともに，不適法な補正は却下することとして同\n法５３条１項ないし３項の規定が設けられた。このように，最後の拒絶理由通知に\n対する補正が独立特許要件を含めて特許法１７条の２の規定に違反する不適法なも\nのであることが出願公告の決定謄本の送達前に認められた場合に，拒絶理由を通知\nすることなく当該補正を却下することとした理由は，補正により特許可能となる発\n明については補正を認めることによって迅速に権利付与を行うことが出願人の利益\nとなるのに対し，補正後の発明が特許性を有しない場合に再度拒絶理由を通知する\nこととした場合には拒絶理由通知に対して再度の補正が可能であるため，審査官は\n当該補正について再度審査する必要があり，審査の迅速性が十分に確保され難く，\n出願間の取扱いの公平性を欠くことになるためである。\nそして，出願公告の決定謄本送達前に拒絶査定不服審判を請求する際の補正がで\n\u0000 \u0000\u0000\nきる範囲についても，審判制度の改善の一環として，制度の国際的調和を図るとと\nもに，拒絶査定不服審判の審理の迅速化を図る観点から，最後の拒絶理由通知に対\nする補正と同じ範囲とするとともに，特許法１５９条１項後段及び２項後段を規定\nし，同法５３条及び５０条ただし書を準用することにより，独立特許要件を含めて\nその補正が不適法な場合には，新たにその旨の拒絶理由を通知することなく，その\n補正を却下することとした（以上について，乙１～９）。\n上記でみたところによれば，特許法１５９条１項後段及び２項後段は，独立特許\n要件違反を含め拒絶査定不服審判請求時にされた不適法な補正に対し，拒絶理由を\n通知することなくこれを却下することにより，審理の迅速化，出願間の公平性の確\n保及び第三者の監視負担の軽減等を図った合理的な規定であるというべきであるか\nら，これらの規定が憲法３１条に違反する旨の原告の前記主張は採用することがで\nきない。\n(3)  原告は，本件のように拒絶査定不服審判請求時に原査定の拒絶理由を解消す\nるために特許請求の範囲を減縮した補正を，新たな引用文献に基づく新たな拒絶理\n由で却下する場合には，審判合議体は，いきなり補正却下・拒絶審決をするのでは\nなく，まず拒絶理由を通知するとの運用をすることが，特許制度の趣旨及び憲法３\n１条に沿うものであるから，本件審決は，特許法１５９条１項後段及び２項後段の\n規定を適切に運用することを怠った違法性，違憲性がある旨主張するが，かかる運\n用を特許庁に義務づけることは，前記(2)で検討した平成５年法律第２６号による改\n正の趣旨を没却する結果となるものであることは明らかであるから，原告の上記主\n張を採用することはできない。\n(4)  以上によれば，原告主張の取消事由１は理由がない。\n５  取消事由２（本願補正発明と引用発明との一致点の認定の誤り，相違点の看\n過）について\n(1)  原告は，本願補正発明の「装置」は，引用発明の情報サーバに対応するもので\nはなく，クライアントに対応するものであるところ，引用発明において，「前記マル\n\u0000 \u0000\u0000\nチメディアコンテンツに関する前記コーデックサーバの位置情報と前記コーデック\nのバイナリデータの識別情報とを用い」る主体は，情報サーバであって，クライア\nントではないから，本件審決が一致点として認定した「前記マルチメディアコンテ\nンツに関する前記コーデックサーバの位置情報と前記コーデックのバイナリデータ\nの識別情報とが用いられ」は，引用発明の「クライアント」と本願補正発明の「装\n置」との一致点とはなり得ず，本件審決は一致点の認定を誤り相違点を看過してい\nる旨主張する。\nしかし，本件審決が一致点として認定した「コーデックサーバの位置情報」及び\n「コーデックのバイナリデータの識別情報」は，それぞれ引用発明における「デコ\nーダＵＲＩ」及び「対応する最適なデコーダ情報」に相当するものであるところ，\n前記２(1)ウ(イ)ｂのとおり，引用発明においては，クライアントは，コンテンツ情\n報（コンテンツ情報は，最適なデコーダ情報を含む。）を用いて，これに対応するデ\nコーダがクライアント側にあるかどうかを確認し，デコーダを有していない場合，\nコンテンツサーバに対して，デコーダがどこに記憶されているのかを要求し，情報\nサーバは，デコーダ情報を用いて，要求されたデコーダのデコーダＵＲＩをクライ\nアントに返し，クライアントは，情報サーバから取得したデコーダＵＲＩを用いて\nデコーダサーバからデコーダをダウンロードする。\nそうすると，引用発明において，クライアントが，情報サーバからデコーダＵＲ\nＩ（コーデックサーバの位置情報）を取得するにしても，デコーダのダウンロード\nを行う際に，「マルチメディアコンテンツに関するコーデックサーバの位置情報」及\nび「コーデックのバイナリデータの識別情報」を用いる主体はクライアントである\nから，本件審決が，「前記マルチメディアコンテンツに関する前記コーデックサーバ\nの位置情報と前記コーデックのバイナリデータの識別情報とが用いられ」ることを，\n引用発明の「クライアント」と本願補正発明の「装置」との一致点と認定したこと\nに誤りはない。\n原告の上記主張は理由がない。\n\u0000 \u0000\u0000\n(2)  原告は，引用発明において，「前記コーデックサーバの位置情報と前記コー\nデックのバイナリデータの識別情報」を知っているのは，情報サーバであって，ク\nライアントではなく，一方，本願補正発明の「装置」においては，「前記マルチメデ\nィアコンテンツ」に含まれた「前記コーデックサーバの位置情報と前記第１のソフ\nトウェアモジュールの識別情報とに基づき」，第１のソフトウェアモジュールのダウ\nンロードを要求するのは，「装置」内部の制御部であって，サーバ側ではないから，\n本件審決が一致点として認定した「前記コーデックサーバの位置情報と前記コーデ\nックのバイナリデータの識別情報とに基づき」は，引用発明の「クライアント」と\n本願補正発明の「装置」との一致点とはなり得ず，本件審決は一致点の認定を誤り\n相違点を看過している旨主張する。\nしかしながら，前記(1)のとおり，クライアントは，最適なデコーダ情報（コーデ\nックのバイナリデータの識別情報）及び情報サーバから取得したデコーダＵＲＩ（コ\nーデックサーバの位置情報）を用いて，デコーダをダウンロードしているから，本\n件審決が，「前記コーデックサーバの位置情報と前記コーデックのバイナリデータの\n識別情報とに基づき，」外部ネットワークに位置した前記コーデックサーバに前記コ\nーデックのバイナリデータのダウンロードを要求するメッセージを生成及び伝送す\nることを，引用発明の「クライアント」と本願補正発明の「装置」との一致点と認\n定したことに誤りはない。\n原告の上記主張は理由がない。\n(3)  以上によれば，原告主張の取消事由２は理由がない。\n６  取消事由３（本願補正発明と引用発明との相違点４に係る判断の誤り）につ\nいて\n(1)  原告は，本願補正発明の「ソフトウェアモジュール」は，ＯＳ，コーデック\nライブラリ，メディアフレームワーク及びハードウェアライブラリを含むところ，\n本願補正発明は，「第１と第２のソフトウェアモジュールを組み合わせてＤＳＰコー\nドを生成」することを要件としているから，「第１のソフトウェアモジュール」がメ\n\u0000 \u0000\u0000\nディアフレームワークであり，「第２のソフトウェアモジュール」がハードウェアラ\nイブラリである場合も包含するものであるが，引用発明においてダウンロードされ\nる「デコーダモジュール」は，本願明細書の「コーデック」（コーデックライブラリ\nの一要素）に相当するものであるから，本件審決が相違点２として判断した「モジ\nュールのみをダウンロードする点」及び「得ようとする各情報が「モジュール」を\n対象としたものとすること」とは，引用発明における「デコーダモジュール」，すな\nわちコーデックライブラリについて判断したものにすぎず，コーデックライブラリ\n以外の本願補正発明の「ソフトウェアモジュール」であるＯＳ，メディアフレーム\nワーク及びハードウェアライブラリについては，何も判断していない旨主張する。\nそこで検討するに，本願補正発明の「ＤＳＰコード」は，「第 1 のソフトウェアモ\nジュール」と，「第２のソフトウェアモジュール」を組み合わせて生成されるもので\nあり，マルチメディアコンテンツに対応する「第 1 のソフトウェアモジュール」が\n記憶部に記憶されていない場合，「第１のソフトウェアモジュール」のダウンロード\nを要求するものである。しかるに，前記１(1)ウ，エ，オ(ア)，(イ)，(エ)のとおり，\n本願明細書（甲７）の発明の詳細な説明（段落【００１８】，【００２２】，【００２\n３】，【００３０】，【００３５】，【００４２】，【００４３】，【図５】，【００４７】，【０\n０５１】～【００５３】）には，ダウンロードされる「第 1 のソフトウェアモジュー\nル」の例示として，コーデックライブラリが記載され，「第２のソフトウェアモジュ\nール」の例示として，コーデックライブラリ以外のＯＳ，メディアフレームワーク\n及びハードウェアライブラリが記載されているから，本願補正発明において，ダウ\nンロードされる「第１のソフトウェアモジュール」は，コーデックライブラリを含\nむものであって，これを除外するものでないことは明らかである。\nそうすると，前記２(2)のとおり，引用発明は，コンテンツ（マルチメディアコン\nテンツ）に対応する「デコーダ」を有していない場合，コンテンツサーバに対して\nデコーダがどこに記憶されているのかを要求し，情報サーバから取得したデコーダ\nＵＲＩを用いて，デコーダサーバから「デコーダ」をダウンロードするものである\n\u0000 \u0000\u0000\nから，この点において，コーデックライブラリを含む「第 1 のソフトウェアモジュ\nール」のダウンロードを行う本願補正発明と相違するものではない。\nそして，本件審決が，本願優先権主張日当時の公知文献として挙げた，公知文献\n１（甲２）には，前記３(1)ア(ア)，(カ)のとおり，コンテンツとともに，このコン\nテンツの再生を実行する適切なデコーダを有するウェブサイトにリンクするための\nＵＲＬが記憶されたディスクをプレイヤに挿入することにより，ウェブサイトにア\nクセスしてデコーダをダウンロードする技術が，公知文献２（甲３）には，前記３\n(2)ア(ウ)ｃのとおり，音楽データＤ１（コンテンツ）と，この音楽データＤ１を再\n生するコーデックのＩＤであるコーデックＩＤを含むヘッダＨ１で音楽コンテンツ\nＣ１が構成される技術がそれぞれ記載されている。したがって，コンテンツに，デ\nコーダを有するウェブサイトにリンクするためのＵＲＬ（コーデックサーバの位置\n情報）やコーデックＩＤ（第 1 のソフトウェアモジュールの識別情報）を含むよう\nに構成することは，本願優先権主張日当時の公知技術であると認められるから，引\n用発明に当該公知技術を適用して，相違点４に係る本願補正発明の構成に至ること\nは，当業者であれば，容易に想到し得るものである。\n原告の上記主張は理由がない。\n(2)  原告は，公知文献１及び２には，デコーダ全体ではなく，そのうちの一部に\n相当する第１のソフトウェアモジュールのみをダウンロードするためのコーデック\nサーバの位置情報や，第１のソフトウェアモジュールのみの識別情報がディスクに\n含まれているという記載はなく，公知文献１及び２記載の技術を引用発明に組み合\nわせて本願補正発明の進歩性を否定するためには，公知文献１及び２において，単\nにデコーダが存在するウェブサイトのＵＲＬ及びデコーダの識別情報では足りず，\nデコーダ全体のうちの一部に相当する第１のソフトウェアモジュールのみをダウン\nロードするためのコーデックサーバの位置情報及び第１のソフトウェアモジュール\nの識別情報がディスクに含まれている必要があるから，仮に公知文献１及び２記載\nの技術を引用発明に適用できたとしても，本願補正発明には至らない旨主張する。\n\u0000 \u0000\u0000\nしかし，前記２(1)エのとおり，引用発明は，モジュールベースのデコーダ（フレ\nキシブルデコーダ）をモノリシックプログラムではなく複数の機能を提供する複数\nのモジュールの集まりとし，クライアントは，新しいタイプのメディアコンテンツ\nが届いたときに，必要なモジュールのみをダウンロードすることによりデコーダを\n構成できるものである。本件審決は，本願補正発明と引用発明との相違点２につい\nては，引用発明から本願補正発明の構成に想到することは当業者であれば容易であ\nる旨判断しているのであって，この点の判断には，後記７の「取消事由４（本願補\n正発明と引用発明との相違点１及び２に係る判断の誤り）について」において説示\nするとおり誤りはない。\nそうすると，かかるフレキシブルデコーダの構成を採用する引用発明に，公知文\n献１及び２の公知技術を適用して，ダウンロードされる「第１のソフトウェアモジ\nュール」であるコーデックライブラリに対するコーデックサーバの位置情報やデコ\nーダの識別情報をコンテンツの中に含ませることは，当業者であれば容易に想到し\n得るものである。\n原告の上記主張は理由がない。\n(3)  原告は，本願補正発明では，「前記マルチメディアコンテンツは前記コーデ\nックサーバの位置情報と前記第１のソフトウェアモジュールの識別情報を含み」及\nび「前記コーデックサーバの位置情報と前記第１のソフトウェアモジュールの識別\n情報とに基づき」の要件を満たしているから，装置側からサーバ側に対して「コー\nデックサーバの位置情報と第１のソフトウェアモジュールの識別情報」を要求する\nことなく，マルチメディアコンテンツ自体に内在する「コーデックサーバの位置情\n報と第１のソフトウェアモジュールの識別情報」をそのまま利用すれば足りるのに\n対して，引用発明においては，「クライアントが対応するデコーダを有していない場\n合には，スケジューラー管理エンジンは，デコーダＵＲＩを得ることをデコーダ・\nコンポーネント管理エンジンに指示する。デコーダ・コンポーネント管理エンジン\nは，どこにデコーダが格納されているかをコンテンツサーバに要求する」のであっ\n\u0000 \u0000\u0000\nて，本願補正発明には，このような要求を必要としないという効果がある旨主張す\nる。\nしかし，前記のとおり，「マルチメディアコンテンツ」に，「コーデックサーバの\n位置情報」と「コーデックの識別情報」を含むように構成することは，当業者であ\nれば容易に想到し得るものであるから，本願補正発明において，どこにデコーダが\n格納されているかをコンテンツサーバに要求する必要がないとの効果は，当該構成\nに付随する当然の効果であって，格別顕著な効果であると認めることはできない。\n原告の上記主張は理由がない。\n(4)  以上によれば，原告主張の取消事由３は理由がない。\n７  取消事由４（本願補正発明と引用発明との相違点１及び２に係る判断の誤り）\nについて\n(1)  原告は，引用発明では“core engine”にデコーダを設置しており，“core\nengine”はＣＰＵに該当するから，引用発明のデコーダダウンロード及び設置に関\nするソフトウェアはＣＰＵ上で動作するソフトウェアであって本願補正発明のＤＳ\nＰコードとは異なるものであること，引用例には，ＯＳなどの実行環境が劣悪であ\nるというＤＳＰの特性上コンポーネント化されていないソフトウェアを備えるしか\nないＤＳＰに対し，新規コーデックが要求される際にコーデックを変更するために\n最小限の資源を用いてＤＳＰ規格に合うＤＳＰコードを容易に提供することについ\nては，いかなる開示も示唆もないこと，これに対し，本願補正発明は，コンポーネ\nント化されたソフトウェアの使用が容易ではないＤＳＰによりコーデックを支援す\nる回路環境で新規コーデックが要求されるたびに大容量のＤＳＰコードを適用及び\n交替することにより発生する相当量のオーバーヘッドを最小化するため，コンテン\nツを再生するたびにリアルタイムでＣＰＵ(ＤＳＰコード生成部)で適切なコーデッ\nクライブラリを選択するようにした後，選択されたコーデックライブラリとＯＳ及\nびメディアフレームワークを組み合わせてＤＳＰコードを生成し，生成されたＤＳ\nＰコードをＤＳＰ処理部に提供し，ＤＳＰ処理部では提供されたＤＳＰコードに基\n\u0000 \u0000\u0000\nづいてコンテンツを再生するためのデコーディングを行うこととし，ＤＳＰはコン\nテンツを再生するたびにＣＰＵからＤＳＰコードを提供される構成としたものであ\nり，かかる構成，効果を検討せずに相違点１及び２について容易想到であると判断\nした本件審決は誤りである旨主張する。\nしかし，前記２(1)ア(イ)記載のとおり，引用発明は，従来のデコーダは一体のソ\nフトウェアであったため，複数のデコーダ間において，デコーダを構成する画像圧\n縮アルゴリズム（ＤＣＴ，ウェーブレット，動き推定など）等が同じであったとし\nても，デコーダのパーツを共有することができなかったという課題を解決するため，\nデコーダをモジュールベースとすることにより，同じ画像圧縮アルゴリズム等を複\n数のデコーダ間で共有するように構成したものであると認められる。また，前記２\n\u0000\u0000\u0000エ\u0000ウ\u0000のとおり，引用例には，ＤＳＰなどのハードウェアに適したＩＤＣＴモジ\nュールを選択してデコーダを構成することが記載されているから，引用発明におい\nて，ＤＳＰによってもデコーダを動作させ得ることが理解される。\nそうすると，引用発明のコアエンジンについて，ＤＳＰによるハードウェアを採\n用し，ＤＳＰでデコーダを動作させるように構成することは，当業者であれば容易\nに想到し得るものである。また，ＤＳＰによってデコーダを動作させる場合，ＤＳ\nＰに適したＯＳ等のソフトウェアが必要であることは，本願優先権主張日当時の技\n術常識であるというべきであるから，デコーダとＯＳ等のソフトウェアを組み合わ\nせてＤＳＰで動作させること，すなわち，ＤＳＰコードを生成し，ＤＳＰでマルチ\nメディアコンテンツの処理を行うことは，当業者であれば容易に想到し得るもので\nある。そして，原告が上記において主張する本願補正発明の効果も，引用発明から\n容易に想到し得る本願補正発明の構成から予測し得る効果にすぎず，格別顕著な効\n果であると認めることはできない。\n原告の上記主張は理由がない。\nなお，原告は，本願補正発明では，コーデックライブラリだけでなく，ＯＳ，メ\nディアフレームワーク及びハードウェアライブラリのソフトウェアを組み合わせて\n\u0000 \u0000\u0000\n新たな「ＤＳＰコード」を生成しているのに対し，引用発明の「デコーダ・コンポ\nーネント管理エンジン」は「コアエンジン」に対して「デコーダモジュール」のみ\nを供給しているところ，この「デコーダモジュール」は，本願明細書の「コーデッ\nク」に相当するものであり，新たなＤＳＰコードを生成する機能は有していない旨\n主張するが，同主張に理由がないことは，上記において説示したとおりである。\n(2)  原告は，引用例には，いくつかのＩＤＣＴモジュールの中でＤＳＰという「ハ\nードウェア仕様…に適したＩＤＣＴモジュールを選択」することができると記載さ\nれているのであって，ＤＳＰで複数のＩＤＣＴモジュールを用いることができ，Ｉ\nＤＣＴの変更を実施できる旨の記載はない旨主張する。\nしかし，ＤＣＴ（Discrete Cosine Transform；離散コサイン変換）は，画像や動\n画の圧縮を行う際に用いられる変換方法（アルゴリズム）であり，ＩＤＣＴ（Inverse\nDiscrete Cosine Transform；逆離散コサイン変換）は，ＤＣＴで変換した信号を復\n号するために逆変換を行う変換方法であるところ，ＤＳＰが様々な画像アルゴリズ\nムに対応できるハードウェアであることは本願優先権主張日当時の技術常識である\nというべきであるから，引用例に，ＤＳＰが複数のＩＤＣＴモジュールを使用し，\nＩＤＣＴの変更を実施できる旨の記載がないからといって，ＤＳＰが単一のＩＤＣ\nＴモジュールにしか対応し得ないものではないことは自明である。また，引用例に\nは，前記２\u0000\u0000\u0000イ\u0000ア\u0000のとおり，画像圧縮アルゴリズムとしてＤＣＴが広く使われて\nいるが，ＤＣＴが全種類の画像に適しているわけではないことが記載され，また，\n前記２(1)ア(イ)のとおり，デコーダを構成する画像圧縮アルゴリズムとして，ＤＣ\nＴのほかにウェーブレット等が例示されていることからすれば，当業者であれば，\n引用発明におけるＤＳＰは，複数のＩＤＣＴモジュールに対応できるだけでなく，\nＤＣＴ以外の他の画像圧縮アルゴリズムにも対応可能なものであることが，容易に\n理解できるところである。\u0000\n原告の上記主張は理由がない。\u0000\nなお，原告は，引用例には，ハードウェア仕様に適したデコーダを選択すること\n\u0000 \u0000\u0000\nは記載されていても，同一のハードウェア仕様について複数のデコーダを選択的に\nダウンロードして用いることは記載されていない旨主張するが，同主張に理由がな\nいことは，上記において説示したところから明らかである。\u0000\n\u0000\u0000\u0000  原告は，引用例に，一体化したソフトウェアの課題認識があったとしても，\nそれはシステム全体としての課題認識であり，ＤＳＰにおける課題認識が示唆され\nているものではない旨主張するが，前記２(2)のとおり，引用発明は，モジュールベ\nースのデコーダ（フレキシブルデコーダ）をモノリシックプログラムではなく複数\nの機能を提供する複数のモジュールの集まりとして認識し，クライアントは，必要\nなモジュールのみをダウンロードすることによりデコーダを構成するものであって，\nソフトウェアを一体化したものとしてのみ認識するものではなく，また，前記(1)\nのとおり，ＤＳＰではデコーダとＯＳ等のソフトウェアを組み合わせて動作させる\nものであるから，原告の上記主張は理由がない。\n(4)  原告は，本願補正発明は，ＤＳＰに最適のＤＳＰコードを提供するため，Ｃ\nＰＵ及びＤＳＰ間の連動構造を備えているのに対し，引用発明は，コアエンジンと\nしてＤＳＰを採用する構成上の違いがある旨主張する。\nしかし，前記３(2)ア(ウ)ａのとおり公知文献２（甲３）において，ＣＰＵで音楽\nデータのダウンロードを行い，ＤＳＰでコーデックプログラムを実行することによ\nり音楽再生を行うことが記載されていること（段落【００２３】，【図３】，【００２\n５】，【００２６】，【００２９】，【００３０】）及び弁論の全趣旨によれば，ＣＰＵと\nＤＳＰが連動して処理を行うことは，本願優先権主張日当時の周知技術であること\nが認められるから，引用発明において，ＣＰＵとＤＳＰが連動して処理を行うよう\nに構成することは，当業者であれば容易に想到し得るものである。\n原告の上記主張は理由がない。\u0000\n\u0000\u0000\u0000  以上によれば，原告主張の取消事由４は理由がない。\u0000\n８  結論\u0000\n以上の次第であるから，原告主張の取消事由はいずれも理由がなく，本件審決の\n\u0000 \u0000\u0000\n判断に誤りはないから，本件審決にこれを取り消すべき違法は認められない。\nよって，原告の本訴請求は理由がないから，棄却されるべきである。\u0000\n知的財産高等裁判所第４部\n裁判長裁判官          富      田      善      範\n裁判官          大      鷹      一      郎\n裁判官          田      中      芳      樹\n"
}
{
  "trial_type": "IPCase",
  "date": {
    "era": "Heisei",
    "year": 28,
    "month": 1,
    "day": 27
  },
  "case_number": "平成27(行ケ)10066",
  "case_name": "審決取消請求事件",
  "court_name": "知的財産高等裁判所",
  "right_type": "特許権",
  "lawsuit_type": "行政訴訟",
  "lawsuit_id": "85633",
  "detail_page_link": "https://www.courts.go.jp/app/hanrei_jp/detail7?id=85633",
  "full_pdf_link": "https://www.courts.go.jp/app/files/hanrei_jp/633/085633_hanrei.pdf",
  "contents": "平成２８年１月２７日判決言渡\n平成２７年（行ケ）第１００６６号  審決取消請求事件\n口頭弁論終結日  平成２８年１月１３日\n判決\n原 告        クアルコム  インコーポレイテッド\n訴 訟 代 理 人 弁 護 士        浅 村 昌 弘\n松 川 直 樹\n弁理 士        金井   建\n浅村   皓\n浅村   肇\n畑 中 孝 之\n白 江 克 則\n大  日  方      和      幸\n水 本 義 光\n亀 山 育 也\n岩 見 晶 啓\n橋 本 裕 之\n福井   淳\n被 告        特 許 庁 長 官\n指 定 代 理 人        西 村 泰 英\n戸 島 弘 詩\n相 崎 裕 恒\n田 中 敬 規\n主文\n１  特許庁が不服２０１３－９４１８号事件について平成２６年１２月\n２日にした審決を取り消す。\n２  訴訟費用は被告の負担とする。\n事 実 及 び 理 由\n第１  原告の求めた裁判\n主文同旨\n第２  事案の概要\n本件は，特許出願拒絶査定不服審判請求に対する不成立審決の取消訴訟である。\n争点は，①手続違背の有無，②理由不備の有無，③引用発明の認定等の誤りの有無\n及び④本願発明の進歩性の有無である。\n１  特許庁における手続の経緯\nザ  ユニバーシティ  コート  オブ  ザ  ユニバーシティ  オブ  エディンバラ\nは，平成１８年（２００６年）４月２８日，名称を「再構成可能命令セル・アレイ」\nとする発明につき，国際特許出願（特願２００８－５０８３００号。優先権主張日：\n平成１７年（２００５年）４月２８日（以下「本願優先日」という。）及び平成１８\n年（２００６年）３月６日  英国。請求項の数５６。甲１，２４）をしたが，平成\n２４年３月５日付けで拒絶理由通知を受け（甲２），同日付けで，原告に対し特許を\n受ける権利を譲渡した（同年４月３日付け出願人名義変更届出。甲１３，１４）。\n原告は，同年９月１０日付け手続補正書（甲４。以下「本件補正書」という。）に\nより，特許請求の範囲を変更する手続補正をした（請求項の数５６。以下，「本件補\n正」という。）が，平成２５年１月１８日付けで拒絶査定を受けた（甲５）ので，同\n年５月２２日，これに対する不服の審判を請求した（不服２０１３－９４１８号。\n甲１０）。\n特許庁は，平成２６年１２月２日，「本件審判の請求は，成り立たない。」との審\n決（附加期間９０日）をし，その謄本は，同月１２日，原告に送達された。\n２  本願発明の要旨\n本件補正後の請求項１に係る発明（以下「本願発明」という。）は，本件補正書に\n記載された以下のとおりのものである（なお，本願の願書に添付した明細書（甲１）\nを，図面を含めて「本願明細書」という。以下の分説符号は，裁判所において付し\nた。）。\n【請求項１】\nＡ１：従属および独立の両方のプログラム命令のデータ経路を有するプログラム命\n令を実行する\nＡ２：プロセッサであって，\nＢ：相互接続ネットワークと，\nＣ：それぞれが前記相互接続ネットワークに接続される異種の複数の命令セルであ\nって，該命令セルの各々は少なくとも加算，減算，乗算，除算あるいはシフトの処\n理を行う該複数の命令セルと，\nＤ：復号モジュールであって，\nＥ１：従属プログラム命令のデータ経路と独立プログラム命令のデータ経路の少な\nくとも１つから\nＥ２：前記命令セルの回路へのマッピングをそれぞれ符号化する構成命令を受け，\nＦ：更に構成命令を復号して前記相互接続ネットワークおよび命令セルの少なくと\nもいくつかのデータ経路を構成し，\nＧ：これにより前記データ経路を前記命令セルの回路にマップしまた前記プログラ\nム命令を実行する，\nＤ：復号モジュールと，\nＡ：を備えるプロセッサ。\n３  審決の理由の要点\n本願発明は，以下の甲７（以下「甲７文献」という。）に記載された発明（以下「引\n用発明」という。）及び周知技術に基づいて，当業者が容易に発明をすることができ\nたものである。\n(1)  引用発明\n甲７文献（Francisco Barat，  Murali Jayapala，  Tom Vander Aa，  Rudy Lauwereins，\nGeert  Deconinck，  and  Henk  Corporaal，“Low  Power  Coarse-Grained  Reconfigurable\nInstruction Set Processor”，「低消費電力  粗粒度結合型再構成可能なインストラクシ\nョンセットプロセッサ」LNCS，  Field-Programmable Logic and Applications，２００\n３年９月，Vol.2778，p.230-239。以下，特に断らない限り，証拠番号には枝番を含\nむ。）には，以下の引用発明が記載されている。\n「プロセッサであって，\nプログラム可能な相互接続を提供するクロスバーと，\nそれぞれが前記相互接続クロスバーに接続される処理エレメントであって，該処\n理エレメントは，ＡＬＵ（算術論理演算），シフタ，乗算器を含んだ処理エレメント\nと，\nレベル１の命令キャッシュから命令を読み，前記処理エレメント及び相互接続ク\nロスバーと共に設けられたコンフィグレーションメモリへスライスのデータ経路コ\nンポーネントのための構成をロードする主演算装置であって，前記主演算装置は，\nトライマランをベースとしたコンパイラであって，再構成可能なアレイを異なる構\n成へと統合させるステップを有するプロセッサ用命令セットを生成するコンパイラ\nを含む主演算装置と，\nを備えるプロセッサ。」\n(2)  本願発明と引用発明との対比\nア  対比\n（本件の争点と関連しない部分は記載を省略。）\n引用発明の「主演算装置」と本願発明の「復号モジュール」との，各々に付され\nた特定事項同士を対比してみると，以下の共通関係ないし相当関係が成立する。・・・\n引用発明の「コンパイラ」と，本願発明の「復号モジュール」とは，前者の元々の\n意味がプログラミング言語で書かれた，プログラムのソースコード（原始コード）\nを，機械語，ないしバイトコードなどの中間言語によるオブジェクトコード（目的\nコード）に翻訳(変換)する機能単位を指す用語であること，一方，本願発明の「復\n号モジュール」が行うとする「前記相互接続ネットワークおよび命令セルの少なく\nともいくつかのデータ経路を構成し，これにより前記データ経路を前記命令セルの\n回路にマップしまた前記プログラム命令を実行する」との事項が，ハードウエアに\n対する命令／処理の実行とされていること，及び，本願発明は，元々従属請求項と\nされた請求項２９において，当該「復号モジュール」が採り得る態様として「コン\nパイラ」を含むとされていること，以上を総合すれば，「前記相互接続ネットワーク\nおよび命令セルの少なくともいくつかのデータ経路を構成し，これにより前記デー\nタ経路を前記命令セルの回路にマップしまた前記プログラム命令を実行する」べく，\nプログラム言語命令をハードウエア実行コードに変換するもの同士である点で，両\n者は一致する。\nイ  一致点及び相違点\n【一致点】\nプロセッサであって，\n相互接続ネットワークと，\nそれぞれが前記相互接続ネットワークに接続される異種の複数の命令セルであっ\nて，該命令セルの各々は少なくとも加算，減算，乗算，除算あるいはシフトの処理\nを行う該複数の命令セルと，\n命令のデータ経路から構成命令を受け，前記相互接続ネットワーク及び命令セル\nの少なくともいくつかのデータ経路を構成し，これにより前記データ経路を前記命\n令セルの回路にマップしまた前記プログラム命令を実行する復号モジュールと，\nを備えるプロセッサ。\n【相違点】\n本願発明の「プロセッサ」は，「実行する」とされる「命令」に関し，「従属およ\nび独立の両方のプログラム命令のデータ経路を有するプログラム命令」であり，そ\nの結果，「復号モジュール」も双方のプログラム命令を処理するとしているのに対し\nて，引用発明の「プロセッサ」は双方のプログラム命令を取り扱うとしているか不\n明である点。\n(3)  相違点についての判断\n本願明細書の【００５９】から，まず，相違点に係る本願発明の特定事項にある，\n「従属」プログラム命令，「独立」プログラム命令は，コンパイラ・プロセスにて，\nネットリスト作成時に，「従属」命令については「直列に接続」される扱いとなり，\n「独立」命令については「並列に走る」扱いを受ける，とされていることが分かる。\nところが，かかる命令の性質に従って一連の命令をコンパイラで分析し，独立命\n令ならば並列処理が可能と扱い，従属命令は逐次処理とすること自体は，本願出願\n前にこの技術分野では常識的に扱われている（本願優先日前に頒布又は電気通信回\n線を通じて公衆に利用可能となった，特開２０００－１１２７５８号公報（甲１２。\n以下「甲１２文献」という。）の【従来の技術】欄，【０００５】を参照。）事項であ\nる。\nまた，かかる周知技術は，甲７文献における，コンパイラで命令を処理し，クロ\nスバーを用いて処理エレメントをいかようにも結合可能とされる引用発明の「プロ\nセッサ」について，逐次処理が処理エレメント間の結合で可能とする内容を示す記\n載やマッピングにより並列処理が可能とする内容を示す記載から見て，当該周知技\n術の適用を自然と惹起するにふさわしいものであると判断される。そして，引用発\n明のプロセッサに対し，その構成の一部であるコンパイラに，独立命令と従属命令\nを峻別し，前者は並列処理とし，後者は処理エレメント間をクロスバーで結合させ\nることで，逐次処理をさせることは，当該相違点に関する本願発明と同等のプロセ\nッサを得ることとなる。\nしてみると，かかる相違点は，周知技術を考慮に入れると，引用発明においても\n当業者が通常採り得る態様の一つに十分になり得るというべきであって，発明とし\nて当然に想定される自明な態様上の微差といえるので，かかる相違は格別なもので\nはない。また，そのように構成することによる効果も，当業者が予測し得るもので\nある。\nしたがって，本願発明は，引用発明及び周知技術に基づいて，当業者が容易に発\n明をすることができたものである。\n第３  原告主張の審決取消事由\n１  取消事由１（手続違背）\n審決は，本願発明と引用発明の相違点について，審決において初めて引用された\n甲１２文献のみに基づいて周知技術と認定し，当該周知技術に基づいて容易想到と\nして進歩性を否定したが，このような審判手続には，出願人に弁明の機会を与える\nことなく拒絶審決をしたという点において重大な手続的瑕疵があるから，審決は取\nり消されるべきである。\n審査過程で示されていない文献を引用することが許されるのは，拒絶理由を構成\nする引用発明の認定上の微調整や，容易性の判断過程で補助的に用いる場合，ない\nし関係する技術分野で周知性が高く技術の理解の上で当然又は暗黙の前提となる知\n識として用いる場合に限られるところ，本件は，これらのいずれにも該当しないこ\nとが明らかである\nしたがって，審決は，「周知技術」に名を借りることで，実質的に新たな拒絶理由\nであるにもかかわらず，審決理由とすることにより，特許法５０条の趣旨を潜脱し\nたものであるから，違法である。\n２  取消事由２（理由不備）\n以下の点において，審決は，本願を拒絶すべきとする理由を充分に示していない\nから，特許法１５７条２項４号に反する。\n(1)  審決において「周知技術」と認定された甲１２文献には，中央演算装置（Ｃ\nＰＵ）について，再構成可能プロセッサを対象とし得る旨の記載や示唆はなく，引\n用発明と対象とする技術分野が全く異なるため，「適用上の適正」がないにもかかわ\nらず，審決は，そのような適正について説明していない。\nまた，審決では，「周知技術」を適用するに際し，引用発明のどの部分に，どのよ\nうにして，独立命令及び従属命令の処理を担わせることになるのかについての具体\n的な説明が一切なく，単に「自然と惹起するに相応しい」と一言，曖昧な説明があ\nるにすぎない。したがって，審決には，当該周知技術を適用して特許出願に係る発\n明の構成を得ることが技術的合理性の見地からみて可能であり，また，相当である\nことの理由が，十分示されているとはいえない。\n(2)  また，審決は，本願発明における「符号化」「受け」「復号」「マップ」の\n四つの動作について，引用発明と対比して，引用発明の「再構成可能なアレイを異\nなる構成へと統合させるステップを有するプロセッサ用命令セット」と共通である\nとして一致点を認定しているが，本願発明において，四つの動作で構成されている\n機能を，各々の動作と対応させることなく，引用発明の単なる一つの「統合」の機\n能と共通するものである，と曖昧に認定するのは，拒絶審決をする際の理由として\n余りに不充分である。\n(3)  さらに，審決は，本願の「請求項２９において，当該復号モジュールが採\nり得る態様としてコンパイラを含むとされている」と認定しているが，請求項２９\nはそのようなことは全く記載されておらず，認定の理由が示されていない。\n３  取消事由３（引用発明の認定及び対比判断の誤り）\n(1)  引用発明の認定の誤り\n審決は，引用発明の認定において，「・・・コンパイラを含む主演算装置と，・・・」\nとしており，主演算装置にコンパイラが含まれていると認定したが，かかる認定は\n以下のとおり，誤りである。\nア  本願発明及び引用発明は，ユーザ（アセンブリ・メーカ）が設計した任\n意のロジック回路を書き込んで，動作させることのできるデバイスの総称であるプ\nログラマブル・ロジック･デバイス（以下「ＰＬＤ」ともいう。）の一種であるＦＰ\nＧＡを従来技術として挙げていることからも分かるように，共にＰＬＤ分野に属す\nる発明（技術）であって，当該分野の技術常識を当然の前提としているが，審決は，\nこのような技術常識を踏まえず，主演算装置に「再構成可能なアレイを異なる構成\nへと統合させるステップを有するプロセッサ用命令セットを生成するコンパイラ」\nが含まれるとしたのは誤りである。\nすなわち，通常，アセンブリ・メーカが，何らかの機能を実現する装置を開発す\nる場合，当該装置内に市販の汎用的なプロセッサを用いてアプリケーション・ソフ\nトウエアを当該プロセッサで実行するが，より早くアプリケーションを実行させる\n必要がある場合には，アセンブリ・メーカがプロセッサの代わりに，オリジナルの\nハードウエア（プロセッサのような汎用的なハードウエア（集積回路）ではなく，\nアセンブリ・メーカの特定のアプリケーションを実現させるための専用的なハード\nウエア（集積回路））を開発することがある。当該「オリジナルのハードウエア」を\n開発するために用いられるものの代表例が，ＦＰＧＡを初めとするＰＬＤである。\nＦＰＧＡ内部には，ロジック（論理回路）を実現するための，入力されたデータに\n対して出力する信号を決定するためのテーブル（コンフィグレーション（設定）可\n能な要素のことで，ＦＰＧＡの場合はＬＵＴ（ルック・アップ・テーブル）。）と出\n力信号の状態を保持するための記憶素子（ＬＵＴと記憶素子の組を「ロジック・セ\nル」という。）が無数に存在し，このテーブルの内容をアセンブリ・メーカが様々に\n設定することにより，アセンブリ・メーカの用途に従った多種多様な論理回路をＦ\nＰＧＡ内に多数設けることが可能となっている。さらに，この多種多様な論理回路\n（ロジック･セル）同士をどのように接続するのかという情報（接続テーブル）をア\nセンブリ・メーカが設定することにより，各論理回路（ロジック･セル）が多段階に\n組み合わされ，アセンブリ・メーカが意図する専用的なハードウエア（集積回路）\nが実現される。ＦＰＧＡにおいて，ユーザが用途に従って設定する上記テーブル（Ｌ\nＵＴ，接続テーブル）はＳＲＡＭの技術を応用して実現されているため，当該テー\nブルの設定内容は，装置の電源を切ってしまうと消失してしまうことから，アセン\nブリ・メーカは，当該データを書き込んでおくための専用のＲＯＭも装置に搭載し，\n装置の電源投入時に１度だけ，同ＲＯＭから同情報を読み出し，ＦＰＧＡ内部の上\n記テーブルにＲＯＭ内のデータを設定する機構を設けている。このようなＰＬＤの\n開発手順としては，一般に，①ソース・コードの作成，②論理合成，③配置配線，\n④コンフィグレーション・データの生成，⑤デバイス・プログラミング／コンフィ\nグレーションにより行われるが，このうち，論理合成（又は②論理合成と次の③配\n置配線を合わせて）はコンパイルと呼ばれ，コンパイルのためのソフトウエアをコ\nンパイラと呼び，これはＰＬＤの開発用ツールに組み込まれている。\nしたがって，コンパイラは，開発用パソコン内にのみ存在し，ＦＰＧＡ等のＰＬ\nＤが搭載された基板（商品）には存在しないことは自明である。\nよって，引用発明の主演算装置にコンパイラが含まれるとする余地はない。\nイ  仮に，審決の認定どおり，引用発明の主演算装置にコンパイラが含まれ\nるとすると，アプリケーションの実行に際し，その都度，アプリケーションの動作\nに必要な再構成可能ユニットの構成（コード）を主演算装置によりコンパイルする\nことになり，引用発明の性能や消費電力にコンパイラの動作が大きく寄与すること\nは明らかである。ところが，甲７文献において，４「Experimental Setup」及び他の\n章において，コンパイラが消費する電力，コンパイラの動作によるシステムの遅延\n時間等が一切記載されていないなど，引用発明の性能と消費電力を見積もる際に，\nコンパイラ（トライマラン型コンパイラを改良したもの）の動作分が対象とされて\nいない。このことは，引用発明にコンパイラを含むとの審決の認定が誤っているこ\nとの証左である。\nウ  そもそも，コンパイラの処理は，非常に多数のクロック・サイクルを必\n要とするため，１クロック・サイクルで再構成可能ユニットの構成が変更されるこ\nとを予定している引用発明の動作を念頭にすると，アプリケーションの動作に必要\nな再構成可能ユニットの構成（コード）を，アプリケーションを動作させる都度，\n主演算装置によりコンパイルすることになる審決の認定は，以下のとおり不自然で\nある。\n第１に，甲７文献において事前にコンパイルした結果を構成メモリ，又は，Ｆｉ\nｇ１図中の Unified  L2  Cashe 等に保持しておけば，その都度コンパイルをして，余\n分に電力を消費してしまうことはないので，消費電力を抑えることを目的としてい\nる引用発明が，審決の認定しているような無駄な動作を選択するとは考え難いから\nである。\n第２に，アプリケーションの動作時，引用発明では，主演算装置と再構成可能ユ\nニットの両方が協働する機構となっているところ，その都度コンパイルをするとい\nうことを前提にすると，アプリケーションの動作中に主演算装置がコンパイルをも\n行う必要があるため，アプリケーションの処理性能に悪影響が出てしまうからであ\nる。\nエ  さらに，コンパイラが，主演算装置に含まれている，又は，コンパイラ\nを主演算装置で動作させる等との記載は一切なく，技術常識としても，そのような\n事実は存在せず，また，少なくとも，そのような技術常識があることを審決は立証\nしていない。\n(2)  対比判断の誤り\n引用発明は，本願発明の構成要件Ｄ～Ｇの点において相違しており，審決は，一\n致点の認定を誤り，相違点を看過したといえる。\nア  構成要件Ｄについて\n引用発明の「コンパイラ」と本願発明の「復号モジュール」が一致するとの認定\nがなされているが，当該認定も誤りである。\n引用発明のコンパイラは，前記のとおり，アプリケーションを引用発明で動作さ\nせるための命令セット・プロセッサー用コードを生成させるもの，すなわち，構成\nメモリに事前に書き込むコードを生成するものであり，本願発明においてもコンパ\nイラに事前に格納しておく構成命令は，事前にコンパイラにより生成される（甲１\nの【００２６】）。\nこれに対し，本願発明における復号モジュールは，構成メモリに格納されている\n構成命令を復号して，相互接続ネットワーク等を構成するものである（甲１の【０\n０１８】，【００２０】）。\nしたがって，対比させるとしても，引用発明のコンパイラと本願発明のコンパイ\nラを対象とすべきであって，引用発明のコンパイラと本願発明の復号モジュールを\n対比させることは誤りである。そして，引用発明の構成に「復号モジュール」に対\n応する部分はそもそも開示されていないのだから，引用発明の「コンパイラ」と本\n願発明の「復号モジュール」が一致するとの認定は誤りである。\nイ  構成要件Ｅ２について\n引用発明に構成要件Ｅ２相当の機能が備わっていることは認めるが，本願発明で\nは，復号モジュールという復号を専用に行うモジュールが直接，構成命令を受けて\nいるのに対し，引用発明では構成命令（引用発明では「構成」又は「コンテクスト」\nとされる。）をどこで受信して，スライスに反映するのかについて開示されていない\nから，これらが一致するとはいえない。\nウ  構成要件Ｆ，Ｇについて\n引用発明に構成要件Ｆ，Ｇ相当の機能が備わっていることを認めるが，それをど\nのように実現しているかについて記載がないことから，この点で本願発明と異なる。\n４  取消事由４（本願発明の進歩性についての判断の誤り）\n(1)  甲１２文献は，本願発明（及び本願発明の先行技術等）が対象とする「再\n構成可能なプロセッサ」とは無関係であり，同文献中の中央演算装置（ＣＰＵ）が\n再構成可能プロセッサを対象としている旨の記載はない。また，甲１２文献には，\n再構成可能なプロセッサにおいて，二つの命令に対応する各処理（並列処理，従属\n命令）を担わせる方法もおよそ開示されていない。\nしたがって，本願発明のような再構成可能なプロセッサにおいて，「従属プログラ\nム命令」及び「独立プログラム命令」の双方のプログラム命令を取り扱うことが，\n甲７文献と甲１２文献を組み合わせても，容易に想到されるものとはいえない。\n(2)  本願発明のＲＩＣＡは，資源の制約の下で独立命令及び従属命令を実行で\nきるので，費やすのは２クロック・サイクルだけである。したがって，ＲＩＣＡの\n処理能力は，ＶＬＩＷ  ＤＳＰより高くなる。同じ「周波数」で走る場合や，両者\nの内部の計算要素の遅れが同じである場合は，ＲＩＣＡの方が，処理能力が高くな\nる。したがって，「設計が容易で，多様な命令セルの演算のクロック・サイクルに対\n応できる柔軟性があり高性能な再構成可能プロセッサが得られる」という効果を奏\nする。\n本願発明には，このような特有の独立命令の並列処理，及び従属命令の逐次処理\nによる顕著な効果があり，審決はそれを看過したものである。\n(3)  したがって，当業者が本願発明を容易に想到できないこと，また，本願発\n明は，引用発明に対して有利な効果を有していることは明白であり，進歩性が欠如\nするとした審決は取り消されるべきである。\n第４  被告の反論\n１  取消事由１に対し\n審決は，査定の理由と異なる拒絶の理由によりなされたものではないから，特許\n法１５９条２項にいう５０条を準用する場合に該当せず，同条の準用はない。\n審決の論旨に照らせば，甲１２文献は，周知性が高く技術の理解の前提となる知\n識を補助的に示すものにすぎず，新たな拒絶理由として示されたものではない。\nしたがって，審判手続に手続違背があるとはいえない。\n２  取消事由２に対し\n(1)  原告の主張２(1)に対し\n審決は，周知性が高く技術の理解の前提となる知識を補助的に示すものとして甲\n１２文献を例示したにすぎず，これに「再構成可能なプロセッサ」についての記載\nがあることを不可欠の前提とした論旨を示したものではないから，原告の主張は，\n審決を正解しないものであって，失当である。\nまた，甲７文献の記載内容とその摘示を含めた審決全体の記載に照らせば，審決\nの記載が省略記載にすぎないことが明らかである。\n(2)  原告の主張２(2)に対し\n審決において，引用発明の「主演算装置」が，「構成命令」を「受け」て「復号」\nして，相互接続ネットワーク及び命令セルの少なくともいくつかのデータ経路を構\n成する点において，本願発明の「復号モジュール」に対応しており，コンパイラに\nおける分析により決定されたデータ依存関係（「データ経路」）の「命令セルの回路」\nへの「マップ」のために機能する趣旨において，引用発明の「主演算装置」が本願\n発明の「復号モジュール」と相当関係にある旨が，事実上示されているから，一部\n誤解を招きかねない表現があった点では不適切であったが，審決を取り消すべき理\n由不備があるとまではいえない。\nまた，プロセッサにおいて実行される命令である以上，その命令の実行によりプ\nロセッサが行う一定の機能が「符号化」されたものであり，このように「符号化」\nされた命令の機能を実現する際「復号」されることは，明示するまでもないことで\nあり，これを明示した上で対比していないからといって，記載不備があることにな\nらない。\n(3)  原告の主張２(3)に対し\n請求項２９は，本願発明において「マップ」するのが「コンパイラ」であること\nを示す本願明細書の記載（【００７３】，図６）を受けた技術的事項を記載したもの\nであるところ，審決は，本願明細書の上記記載（【００７３】，図６）を示す代わり\nに請求項２９を示したものである。\nまた，「復号モジュール」が「コンパイラ」を含むとは，そもそも，「復号モジュ\nール」がコンパイラの行う「マップ」のために機能する旨について，本願請求項１\nの記載の上では，「復号モジュール」が「これにより前記データ経路を前記命令セル\nの回路にマップ」すると表現されているのであり，これを踏まえて，審決では，「復\n号モジュール」がコンパイラと関係して機能する趣旨をこのように表現したもので\nある。審決の記載がこれらの趣旨によるものであることは，審決全体の論旨とその\n記載ぶりに照らして明らかであるから，これらの点についても理由記載の不備はな\nい。\n３  取消事由３に対し\n(1)  原告の主張３(1)に対し\n審決は，以下に述べるとおり，本願発明の構成要件Ｇの表現ぶりを踏まえて説示\nする意図からとはいえ，引用発明について「コンパイラを含む主演算装置」等，技\n術常識を踏まえずに読むと誤解を招きかねない表現を用いており，表現の上では必\nずしも適切でない部分があったが，技術常識を踏まえて通読すれば，以下の(2)に述\nべる論旨が示されていることは明らかであって，原告は，審決を正解しないもので\nある。\n原告も述べるように「プログラム命令を実行するプロセッサ」の「復号モジュー\nル」に「コンパイラ」の機能が含まれるという技術常識はなく，また，審決が摘記\nした甲７文献の内容から明らかなように，甲７文献は，プロセッサに含まれたコン\nパイラが，プロセッサの実行する命令を命令実行段階で生成する技術（いわゆるＪ\nＩＴコンパイラ等）を記載したものでないから，審決が摘記した甲７文献の記載は，\nプロセッサが自ら実行する命令を自身が含むコンパイラにより生成する技術に係る\n発明を認定する根拠となり得ない。したがって，審決が摘記した甲７文献の内容を\n踏まえて審決を読めば，審決の「・・・コンパイラを含む主演算装置」等の記載を，\nプロセッサが自ら実行する命令を自身が含むコンパイラにより生成する旨を示すも\nのと解する余地はない。\n(2)  原告の主張３(2)に対し\nア  本願発明の構成要件Ｄ～Ｇと引用発明の対比について\n引用発明の「再構成可能なアレイを異なる構成へと統合させるステップを有する\nプロセッサ用命令セット」である「特殊再構成可能命令」は，再構成に当たって構\n成（コンフィグレーション，コンテキスト）を示し，コンフィグレーションメモリ\nにない構成を構成メモリへロードする等のプロセッサの機能を符号化したものであ\nり，また，コンパイラがデータ依存関係の分析を行った上で再構成可能アレイを異\nなる構成へと統合するために，上記分析結果を踏まえて生成されたコードに含まれ\nたものであり，この分析結果を反映した再構成を行うための構成を示すように符号\n化されたものであるから，「プログラム命令」の「データ経路」の「命令セルの回路」\nへの「マッピング」を「符号化」するものであって，本願発明の「構成命令」に相\n当する。\nそして，引用発明の「プロセッサ」も，コンパイラによるデータ依存関係の分析\nを経た上で命令実行するものであるところ，その「主演算装置」は，再構成可能な\n機能ユニットをコントロールする主体として命令キャッシュから読み込んだ「構成\n命令」を「復号」するものであり，これによって「符号化」された内容に従って相\n互接続ネットワークと命令セルのデータ経路が構成されることになるから，「構成命\n令」を「受け」て「復号」して，相互接続ネットワーク及び命令セルの少なくとも\nいくつかのデータ経路を構成する点，すなわち，構成命令による相互接続ネットワ\nークと命令セルの再構成を行う主体となる点において，本願発明の「復号モジュー\nル」に対応している。\nまた，引用発明の「主演算装置」は，コンパイラがデータ依存関係の分析を行っ\nた上で再構成可能アレイを異なる構成へと統合するために，コンパイラにおけるデ\nータ依存関係の分析結果を反映した再構成を行うものであるのに対し，本願発明の\n「復号モジュール」は，「これにより前記データ経路を前記命令セルの回路にマップ」\nするものであって，命令実行前のコンパイラにおける分析により決定されたデータ\n依存関係（「データ経路」）の「命令セルの回路」への「マップ」のために機能する\nものであるから，両者は，「これにより前記データ経路を前記命令セルの回路にマッ\nプ」する点においても共通しているものである。\nイ  構成要件Ｄ～Ｇに係る審決の対比の論旨について\n審決は，引用発明の認定に当たって，主演算装置が「レベル１の命令キャッシュ\nから命令を読み，前記処理エレメント及び相互接続クロスバーと共に設けられたコ\nンフィグレーションメモリへスライスのデータ経路コンポーネントのための構成を\nロードする」ものであること（以下「前者」という。）に加え，「トライマランをベ\nースとしたコンパイラであって，再構成可能なアレイを異なる構成へと統合させる\nステップを有するプロセッサ用命令セットを生成するコンパイラを含む」（以下「後\n者」という。）とした。そして，引用発明の「主演算装置」と本願発明の「復号モジ\nュール」との対比の説示では，まず，前者に係る対比において，これ以前の「プロ\nセッサ」，「相互接続ネットワーク」及び「複数の命令セル」に係る対比における，\n「クロスバー」及び「処理エレメント」がそれぞれ本願発明の「相互接続ネットワ\nーク」及び「複数の命令セル」に相当する旨の説示を踏まえ，引用発明の「クロス\nバー」及び「処理エレメント」以外の対象物である「主演算装置」へ「命令キャッ\nシュ」から命令が供給される旨を示している。そして，審決では，引用発明の「プ\nロセッサ」においては，コンパイラにおける分析結果を反映した再構成を行うため\nの構成を示す「構成命令」による再構成可能な機能ユニットのコントロールを行う\n主体が「主演算装置」であるという前提を踏まえて説示されており，命令が供給さ\nれた「主演算装置」は，供給された命令による「相互接続ネットワーク」と「複数\nの命令セル」の再構成を行うことになる。\nそして，後者に係る対比に当たって，引用発明の「コンパイラ」を対比において\n参照する旨を示した上で，本願発明の「復号モジュール」が行うとする特定事項の\n中に「前記相互接続ネットワークおよび命令セルの少なくともいくつかのデータ経\n路を構成し，これにより前記データ経路を前記命令セルの回路にマップしまた前記\nプログラム命令を実行する」との事項が，ハードウエアに対する命令／処理の実行\nとされている旨を示しつつ，「プログラム言語命令をハードウエア実行コードに変換\nする」点で，引用発明の「主演算装置」と本願発明の「復号モジュール」の両者が\n一致する旨を説示している。\nこの後者に係る対比の説示のうち「プログラム言語命令をハードウエア実行コー\nドに変換する」点で本願発明と引用発明とが一致する旨の説示は，本願発明の「プ\nログラム命令を実行するプロセッサ」が，データ依存関係の分析のみならずその分\n析結果の「命令セルの回路」への「マップ」がコンパイラにおいて命令実行前に行\nわれることを前提としたものであることを踏まえ，プログラム言語を用いて作成さ\nれたプログラム（プログラム言語命令）をハードウエアにおいて実行可能な命令の\n列としてのプログラム（ハードウエア実行コード）に変換する際のコンパイラにお\nける分析を前提としたものである点において，引用発明の「主演算装置」が本願発\n明の「復号モジュール」と相当関係にある旨を述べているものである。\nなお，命令処理資源（「命令セル」）をどのように割り当てるかの決定は，命令実\n行前にコンパイラにおいてデータ依存関係の分析の結果を踏まえて（静的に）行わ\nれることが前提とされているにもかかわらず，本願特許請求の範囲においては「前\n記データ経路を前記命令セルの回路にマップ」する（構成要件Ｇ）と記載されてお\nり，あたかもハードウエアである復号モジュールが主体的に割当てを行うかのよう\nに解釈することもできる。審決は，このことを踏まえて，本願発明の「復号モジュ\nール」の特定事項中に「・・・これにより前記データ経路を前記命令セルの回路に\nマップしまた前記プログラム命令を実行する」との事項が，ハードウエアに対する\n命令／処理の実行とされている旨を示し，引用発明の「コンパイラ」を対比におい\nて参照する趣旨を示したものである。\n４  取消事由４に対し\n(1)  原告の主張４(1)に対し\n審決は，甲７文献において「マッピングにより並列処理が可能」であることを摘\n示した上で，コンパイラにおけるデータ依存関係の分析により依存関係がないとさ\nれたものについて，複数の命令が並列実行可能であることが技術常識（周知技術）\nであることの例示として甲１２文献を示したにすぎない。\nしたがって，甲１２文献が「再構成可能なプロセッサ」について記載していない\nことは，審決の容易想到の論旨とは無関係である。\n(2)  原告の主張４(2)に対し\n処理能力について，引用発明は，「従属」する命令を先行命令の結果の書込みを待\nたず並列に実行し得るのであり，本願発明と同様，「従属」命令につき先行命令の結\n果の書込みを待つ必要がある（「従属」命令につき命令レベルの並列化が行われ得な\nい。）ＶＬＩＷに比して，処理能力が高くなり得るという効果を奏するものである。\nまた，「設計が容易で，多様な命令セルの演算のクロック・サイクルに対応できる\n柔軟性があり高性能な再構成可能プロセッサが得られる」という効果については，\n本願明細書の記載，特に段落【００４１】～【００４６】の記載によれば，「多様な\n命令セルの演算のクロック・サイクルに対応できる柔軟性」は，「再構成レート・コ\nントローラ（ＲＲＣ）２４」の効果であるから，原告の主張は，本願特許請求の範\n囲に基づくものでない。\n第５  当裁判所の判断\n１  本願発明について\n(1)  本願明細書（甲１）及び本件補正書（甲４）によれば，本願発明は，以下\nのとおりのものである。\n本願発明は，コンピュータ・プロセッサ，特に，再構成可能プロセッサに関する\nものである（【０００１】）。\n現在の半導体デバイスの構造は，大量のオーディオ及びビデオ・データを処理す\nる必要のある次世代ネットワーク用の移動体装置におけるなど，将来のデータ処理\n及び処理能力の要求に対処できないので，将来の新しいハードウエア構造として，\n電力消費及びシリコン面積に関して効率を犠牲にしてでも高い処理能力を保持する\nために，プロセッサの性能に対する新たな要求に応え，ハードウエアも将来の変化\nする標準に対して高い適応性を備える必要がある（【０００２】）。\nハードウエアの再プログラム可能性及び柔軟性は，製作後にシステムを変更する\nことができるので，設計コストを下げることができ，標準Ｃ／Ｃ＋＋などの高水準\nプログラム記述によりプログラム可能なこの柔軟性を有することは，設計サイクル\nを減らし，また，大きなシステムを実現するのに重要である（【０００３】）。\n提案されている書き替え可能ゲート・アレイ（ＦＰＧＡ）などの再構成可能なハ\nードウエア・インフラストラクチャは，コストが低く，設計時間が短く，電力消費\nが少なく，性能が高い，というニーズに十分応えておらず，どれも広く用いられて\nいないため，本願発明は，コストが低く，設計時間が短く，電力消費が少なく，性\n能が高いプロセッサを提供することを目的とする（【０００４】～【００１６】）。\nそこで，本願発明は，従属及び独立の両方のプログラム命令のデータ経路を有す\nるプログラム命令を実行するプロセッサを提供するものであり，プロセッサは，  相\n互接続ネットワークと，それぞれが相互接続ネットワークに接続される異質の複数\nの命令セルと，復号モジュールであって，従属プログラム命令のデータ経路と独立\nプログラム命令のデータ経路の少なくとも一つから命令セルの回路へのマッピング\nをそれぞれ符号化された構成命令を受け，更に構成命令を復号して相互接続ネット\nワーク及び命令セルの少なくともいくつかを構成し，これによりデータ経路を命令\nセルの回路にマップし，また，プログラム命令を実行する，復号モジュールと，を\n備えるものである（請求項１，【００１８】，図１参照）。\nこれにより，再構成可能プロセッサは，設計時に完全にカスタマイズすることが\nでき，アプリケーションの要求に従って設定することができ，また，実行の並列処\n理レベルを高め，操作を終えるのに必要な時間を減らすことができる（【００３７】，\n【００４６】）。\n【図１】\n(2)  本願発明の復号モジュール及びコンパイラについて\n本願明細書においては，構成命令の生成に関し，プログラミング・フロー（図５）\n及び設計法の略図（図６）が示され，標準ＧＮＵ  Ｃコンパイラ（ｇｃｃ）を用いて\nＣ／Ｃ＋＋コード５０をコンパイルして，どの命令セル（ＩＣ）を用いる必要があ\nるかを記述するアセンブリ・フォーマット５２を作ること，ＲＩＣＡコンパイラは，\nこのアセンブリを処理して，一連のネットリスト５４を作り，各ネットリストは１\nクロック・サイクル内に実行する命令のブロックを含み，ネットリストへの分割は\n命令をスケジュールして命令の間の依存性を分析した後に行うこと，ネットリスト\n内では，従属プログラム命令は直列に接続され，独立プログラム命令は並列に接続\nされ，スケジューリング・アルゴリズムはアレイ内のＩＣ資源や相互接続資源やタ\nイミング制限を考慮に入れ，最も多くのＩＣを用い，また，同時に最長経路遅れを\n減らして最小にすることにより，プログラム処理能力を最高にすることを目指し，\nさらに，ＲＩＣＡコンパイラは，ｇｃｃが生成した一時的レジスタを簡単な配線で\n置き換えて除くなどの厳しい最適化も行い，一連の命令セル５６の構成を生成し，\nこれを構成命令６として符号化して構成メモリ１０内に記憶することが示されてい\nる（【００５２】，【００５３】，【００５９】）。そして，復号モジュールは，従属プロ\nグラム命令のデータ経路と独立プログラム命令のデータ経路の少なくとも一つから\n命令セルの回路へのマッピングをそれぞれ符号化する構成命令を受け，更に構成命\n令を復号して相互接続ネットワーク及び命令セルの少なくともいくつかを構成し，\nこれによりデータ経路を命令セルの回路にマップし，プログラム命令を実行するも\nのである（【００１８】）。また，命令セルの少なくともいくつかを相互接続ネットワ\nークを通して直列に接続することにより，相互接続ネットワーク及び命令セルの少\nなくともいくつかを構成したり（【００１９】），複数のプログラム・スレッドのデー\nタ経路から命令セルの対応する複数の独立回路へのマッピングを符号化する構成命\n令を受け，更に構成命令を復号して相互接続ネットワーク及び命令セルの少なくと\nもいくつかを構成し，これにより複数のプログラム・スレッドのデータ経路を命令\nセルの対応する複数の回路にマップし，プログラム・スレッドを互いに独立に同時\nに実行したりする（【００２０】）ものである。\nこれによれば，構成メモリに格納された構成命令は，ＲＩＣＡコンパイラによっ\nて生成され，符号化されたものであるところ，復号モジュールは，この符号化され\nた構成命令を受けて復号化し，命令セルの少なくともいくつかを相互接続ネットワ\nークを通して直列に接続したり，複数のプログラム・スレッドのデータ経路から命\n令セルの対応する複数の独立回路へのマッピングを符号化された構成命令を受け，\n更に構成命令を復号して相互接続ネットワーク及び命令セルの少なくともいくつか\nを構成し，これにより複数のプログラム・スレッドのデータ経路を命令セルの対応\nする複数の回路にマップし，プログラム・スレッドを互いに独立に同時に実行した\nりするなど，相互接続ネットワーク及び命令セルの少なくともいくつかを構成し，\nこれによりデータ経路を命令セルの回路に現実にマップし，プログラム命令を実行\nするものであるといえる。\n２  取消事由３（引用発明の認定及び対比判断の誤り）について\n(1)  引用発明について\nア  甲７文献には，以下の記載がある。\n(ｱ)  表題「低消費電力  粗粒度結合型再構成可能なインストラクションセットプ\nロセッサ」\n(ｲ)  「概要：近年の組み込み型マルチメディアのアプリケーションは，処理時間\nおよび消費電力の制約が厳しい。要求性能を満たす粗粒度型プロセッサについて紹介され\nてきた。しかしながら，このようなプロセッサの消費電力についてはあまり研究がなされ\nていない。本論文では，画期的な粗粒度結合型プロセッサと，WATTCH から導き出された\n消費電力モデルをつかった消費電力についての研究を紹介する。いくつかのプロセッサコ\nンフィギュレーションにおいて，複数のマルチメディアアプリケーションを評価した。評\n価結果から，本論文の粗粒度結合型プロセッサは，RISC プロセッサ単体に対して平均２．\n５倍の処理能力を達成したが，消費電力は１８％増加に留まる。」\n(ｳ)  「１． イントロダクション\n３D レンダリング，映像圧縮，物体認識技術などの現在および将来のマルチメディアア\nプリケーションは，非常に複雑な計算を必要とするアルゴリズムによって特徴づけられ，\n深いネストループ構造（何重ものループになっている構造）は，非常に厳しいリアルタイ\nム処理が必要となる。組み込みシステムにおいて（例えば，マルチメディア端末，PDA，\n携帯電話など），このようなアプリケーションを実行するには，実行時間と面積の制約下で，\n消費電力を最適化してゆくとの問題が生じる。これらのアプリケーションでのループ処理\nにおいて可能な限り並列性を高くすることで，再構成可能なインストラクションセットの\nプロセッサ（標準のプロセッサと再構成可能ないくつかのロジックが密結合したもの）は，\n時間的な制約を満たす計算能力を持つことができる，といくつかの論文で紹介されている\n[７，６，４]。しかしながら，上記の再構成可能なプロセッサはこれらのアプリケーション\nに要求される消費電力を満たすか否かについては，示されてない。\n本論文は，CRISP(a coarse-grained reconfigurable instruction set processor，粗粒度結合型イ\nンストラクションセットプロセッサ)について示す。CRIPS は，低消費電力でマルチメディ\nア処理を高速に行うことができるよう，マルチメディアのアプリケーション向けに開発さ\nれたものである。本アーキテクチャの消費電力は，再構成可能なロジックに起因するもの\nである。ここで再構成可能なロジックは，ALU や乗算器などの複雑な処理を行うブロック\nにより構成され，マルチメディアアプリケーションにおいて典型的に見られるデーターサ\nイズ（８ビット～３２ビット）で動作し，消費電力と再構成期間を減らすために，独立し\nて動作可能化できるスライス単位に分割される。さらに重要なことは，再構成可能なロジ\nックはメインプロセッサに密結合していて（再構成可能なロジックは，追加機能ユニット\nとして位置づけられる），プロセッサと再構成可能なロジックの間で瞬時な制御とデータ通\n信が可能になる。\n・・・\n本論文では，以下の順に説明を行う。第２章および第３章では，提案の CRISP アーキテ\nクチャと関連するコンパイラ技術/合成技術について議論する。・・・」\n(ｴ)  「２．低消費電力再構成可能なアーキテクチャ\nCRISP（Coarse-grained  Reconfigurable  Instruction  Set  Processor  粗粒度結合再構成可\n能なインストラクションセットプロセッサ）は，メインのプロセッサコアといくつかの粗\n粒度結合した再構成可能なロジックからなるインストラクションセットプロセッサからな\nる。粗粒度再構成可能なロジックは，他の機能ユニットと同様に再構成可能な機能ロジッ\nク（RFU）の中に位置し，動作は毎クロック発行される。  RFU は，メインのレジスタフ\nァイルに対しデータのアクセス（読み書き）を行う。メインプロセッサは，どのようなタ\nイプのプロセッサでもよいが ，本論文では，単純な RISC（Reduced   Instruction  Set\nComputer）プロセッサを仮定する。\n図１は，完全なプロセッサの全体を示す設計思想（＝アーキテクチャー）である。主演\n算処理装置コアはレベル１の命令キャッシュからその指示を読み，レベル 1 のデータキャ\nッシュによってデータを得る。双方のキャッシュは，外部メモリに接続され，かつ，レベ\nル２の統合キャッシュに接続される。図の中央に図示され，かつ，直接主演算処理装置コ\nアによってコントロールされている，再構成可能な構成部は，２次キャッシュ（これは，\n外部メモリからロードした構成の再使用を可能とし，再構成を行う回数を減らす）によっ\nてロードされるコンフィギュレーション（＝構成）メモリを含んでいる。再構成可能な構\n成部は，直接いくつかのデータポート経由でデータキャッシュにアクセスすることができ\nる。さらに，再構成可能なロジックは機能ユニット・インターフェース経由で主演算処理\n装置コアと通信する。\n図１に示されるように，再構成可能な機能ユニットは再構成可能なスライスに分割され\nる。そのうちの１つは，図２によってより詳細に示されている。各々のスライスは，いく\nつかの粗粒子状の処理エレメント（PE）や，レジスタファイルや，相互接続や，小さなコ\nンフィギュレーション（構成）メモリを含んでいる。各々の処理エレメントは，ALU や，\nシフタや，乗算器や，あるいはメモリ素子である。こういった複雑な処理エレメントは，\nマルチメディア・アプリケーションの分野で典型的に見られる操作の実行向けとして，ワ\nード・オリエンティドであって，ビット・オリエンティドではないルックアップテーブル\n（LUT）をベースとした従来の論理ブロックよりも，適したものになる。これらの処理エ\nレメント（PE）複合体は，従来の FPGA と比較すると，より低い電力消費量で，かつ，よ\nり高周波数で作動することを可能とする，再構成可能ロジックになる。\n図１．ＣＲＩＳＰの例（RFU:  再構成可能な機能ユニット，PE:  処理エレメント，FU:  機\n能ユニット）\n図２．再構成可能なスライスの内部\nスライスの内部にある処理エレメントは，プログラム可能な相互接続部を通じて，互い\nに接続状態にある。この相互接続部は，完全なクロスバーでワード単位に作動し，VLIW（超\n主演算処理装置コア\n外部メモリへ\n統合 L2 キャッシュ\nデータ L1\nｷｬｯｼｭ\n命令 L1\nｷｬｯｼｭ\n他のスライスへ  他のスライスへ 他のスライスへ\n相互接続部\n長命令語）マイクロプロセッサーで今日典型的に見られるバイパス・ネットワークと同程\n度の複雑さがある。このクロスバーは，任意の処理エレメントの結果出力を，その他の処\n理エレメントの入力へと接続することができる。加えて，このクロスバーは，処理エレメ\nントを，レジスタファイルや，他のスライスへと接続もする。ほとんどの場合，処理エレ\nメントはそれぞれスライスのレジスタファイルにその出力を書き込む。しかし，従来の\nFPGA の中で見られるのと同じで，この動作は任意にバイパスすることができ，また，結果\nは異なる処理エレメントに送られる。この他のスライスのレジスタ書き込みと，相互接続\nクロスバーを組み合わせることによって，データ・フロー鎖の中の要素がクロスバーによ\nってともに接続されるように，空間的な計算を行なうことが可能である。チェインの終端\nの処理エレメントはレジスタファイルに接続される。\n処理エレメントの数は，相互接続とレジスタファイルの複雑さを縮小するために少なく\nしておかなければならない。私たちのシミュレーションの結果では，処理エレメントとの\n数として４が，電力消費量対パフォーマンスの間で形成されるトレードオフの関係上，良\nい数値になる（スペースの理由で，これらの結果はここでは示さず）。\n再構成可能なスライスはそれぞれさらに構成メモリを含んでいる。この構成メモリは，\nスライスのデータ経路コンポーネントのための構成を格納する。典型的なループ処理は，\nディレイなく切り替えるため複数のコンフィグレーションを用意する必要があり（第 3 章\nで議論されるが），そのためコンフィグレーションメモリは，マルチコンテキストである必\n要がある（すなわち，いくつかのコンフィグレーションを保持しておく必要がある）。１つ\nのコンテキスト（又はコンフィグレーション）を別のコンテキストに切り替えるのに 1 ク\nロックサイクルで可能であり，すなわち，浅くて（アドレス線方向の幅がせまい），ワイド\n幅な（データ線方向に幅が広い）メモリから読むのと同じである。４つの処理エレメント\nをもったスライスの場合，コンフィギュレーションメモリの幅は，128 ビット程度であり，\n典型的な FPGA のスライスに必要なビット幅よりかなり少ない。コンフィギュレーション\nメモリ内のコンフィギュレーションの数は，通常８～３２のコンテキストの範囲である。\n理想的には，コンテキストの数は，コンフィギュレーションメモリの消費電力削減のため，\nできるかぎり少ない方がよい。\n再構成可能な機能ユニットは，図３に示されるような特殊再構成可能命令により活性化\nされる。この再構成可能命令は，主に２種の情報からなる。１つは，多くの利用可能な構\n成のどれが使用されるべきかを指定する再構成可能命令識別子（RID）を含んでいるという\nことである。この識別子は，構成メモリにおいて利用可能なコンテキストの数より多数の\n構成の中から選択することができる。必要な構成が構成メモリに現在ロードされない場合，\nシステムは停止される。それはこの RID によってインデックスを付けられた小さなキャッ\nシュのように作用する。また，適切な構成は一体になった２次キャッシュからロードされ\nる。\n再構成可能命令識別子 RID に加えて，再構成可能命令は，どのスライスが活性化される\nかを指定する１ビット長の数個のフィールドを含んでいる。図３は，これらのスライス・\nイネーブル・フィールド（図中では，ENｘと名付けられている）を示している。少数の処\n理エレメントを要求するアプリケーションの部分については，最初のスライスだけが活性\n化されるだろう。より高い並列必要条件を備えたそれらの部分については，より多くのス\nライスが使用されるだろう。このメカニズム（それは部分的な再構築の形式と見なすこと\nができる）は，構成ミスの場合にはロードされなければならない構成流れのサイズを縮小\nする。さらに加えて，必要とされない再構成可能なデータ経路のスライスは，スイッチを\nオフとすることができ，それにより，エネルギー消費コントロールの有効な形を提供する\nことができる。\n図３．再構成可能命令のフィールド EN:  スライス・イネーブル・ビット，RID:  再構成可能\n命令識別子」\n(ｵ)  「３．コンパイラ技術\n全ての再構成可能なインストラクションセットプロセッサの命令生成は，主に次の２つ\nのステップを含む。\n（一つは）再構成可能アレイ用の様々なコンフィギュレーションの合成であり，（もう一つ）\nは，メインプロセッサ用の命令生成（再構成可能なアレイへマッピングされない命令生成）\nである。CRISP の場合，標準の機能ユニットと同様に複雑な要素を処理するので，従来の\nVLIS 技術が使われている。\n我々の研究用コンパイラ（Trimaran[1]をベースにしている）においては，ループの命令生\n成は，ソフトウエアのパイプライン処理に基づいている。ソフトウエアのパイプライン処\n理では，イタレーション（繰り返し）は，一定の間隔をあけて開始され，同時に，しかし，\n計算の異なるステージにおいて実行される。これらにより，CRISP のハードウエアリソー\nスに可能な限り並列性を展開する。これらの技術[2]により，ループ向けに生成された命令\nは，ループ（ループカーネルのサイクル数）の初期化間隔分のコンフィギュレーションを\n含んでいる。そのため，繰り返しが，コンフィギュレーションのキャッシュで可能なコン\nテクスストの数以上にならないことをチェックすることは重要である。超えてしまった場\n再構成可能命令\n合，生成された命令は，不断の再構成が必要で，処理性能は落ちるであろう。\nソフトウエアのパイプラインは，命令をチェインすることで[2]，空間的な計算を行うた\nめに修正することができる。これにより，実行時間を削減することで，内側のループのク\nリティカルパスの長さを削減できる。空間的な計算の命令生成処理は，処理構成部と相互\n連結の時間の適切な遅延モデルが必要である，なぜならこの処理は，FPGA の“place  and\nroute”（配置配線）と同じであるからである。\nさらに，我々のコンパイラは，各ループ処理を分析し，必要なスライス数を割り出す。\n再構成時間と消費電力の双方を削減するため，必要なスライス数しか使わない。」\n(ｶ)  「４．実験セットアップ\n本提案のアーキテクチャでの性能および消費電力を評価するために，シミュレーション\nにてマルチメディアアプリケーションをいくつか動作させてみた。表１に，ベンチマーク\nのリストを示す。コンパイラは，前セクションで説明した”Compilation  Techniques”を含ん\nだ Trimaran コンパイラの改良したバージョンでコンパイルした。本コンパイラは，再構成\n可能なプロセッサにおいて，粗粒度結合型再構成可能なユニットを利用して開発すること\nができる。特別な計算手法は，我々のプロトタイプのコンパイラには現状組み込んではな\nいため，使用してはいない。」\n（ｷ）  「イントロダクションで記述したように，本提案のアーキテクチャは，\n低消費電力である。その理由は以下にいくつかあげる。\n―  粗粒度のデータパスの演算部：データパスの演算部は，ビットレベルの構成要素より\nも，制御のオーバーヘッドが少なくて済むため，より消費電力の面で効率的である。\n―  少量およびスライスされたコンフィグレーションメモリ部：コンフィギュレーション\nメモリを定期的にスイッチングすることは必要であるが，コンフィギュレーションメモリ\nに対する消費電力は全体に比較して微量である。さらに，コンフィギュレーションメモリ\nがスライス化していることで，選択的に動作することになり，より低消費電力を実現でき\nる。\n―  スライスされたデータパスとすることによって，異なる複数の要素の複雑さ及び消費\n電力が制限される。\n―  消費電力を考慮し，さらに処理性能を低下することなく動作させるスライスの数を最\n小限にするインテリジェントコンパイラ.」\n(ｸ)  「７．結論\n本論文では，低消費電力マルチメディアアプリケーション用の粗粒度結合アーキテクチ\nャについて言及した。再構成可能なロジックは，プロセッサの消費電力を削減することを\n独立に動作させるためにスライスに分割している。本プロセッサは，標準の RISC プロセッ\nサに比較して，１８％消費電力が増加するが平均 2.5 倍の処理性能が得られることが分か\nった。・・・」\nイ  上記記載によれば，引用発明について，次のとおり認められる（甲７）。\n甲７文献は，粗粒度結合型再構成可能なインストラクションセットプロセッサ（Ｃ\nＲＩＳＰ）の消費電力について研究した結果を記載した論文である。\n近年，組込型マルチメディアのアプリケーションは，処理時間及び消費電力の制\n約が厳しく，このような要求性能を満たす粗粒度結合型プロセッサが開発されてき\nた。例えば，マルチメディア端末，ＰＤＡ，携帯電話などの組込型システムにおい\nて，３Ｄレンダリング，映像圧縮，物体認識技術などのマルチメディアアプリケー\nションは，非常に複雑な計算を必要とするアルゴリズムによって特徴付けられ，深\nいネストループ構造は，厳しいリアルタイム処理が必要となる。これらのアプリケ\nーションでのループ処理において可能な限り並列性を高くすることで，再構成可能\nなインストラクションセットプロセッサ（標準のプロセッサと再構成可能ないくつ\nかのロジックが密結合したもの）は，時間的な制約を満たす計算能力を持つことが\nできる。\n引用発明は，低消費電力でマルチメディア処理を高速に行うことができるよう，\nマルチメディアのアプリケーション向けに開発されたＣＲＩＳＰ（粗粒度結合型再\n構成可能なインストラクションセットプロセッサ）であり，これは，単純なＲＩＳ\nＣプロセッサであるメインプロセッサ（主演算処理装置コア。以下「主演算装置」\nという。）と，いくつかの粗粒度結合した再構成可能なロジックからなるインストラ\nクションプロセッサとで構成される。\n図１に示されるように，主演算装置は，レベル１の命令キャッシュからその指示\nを読み，レベル１のデータキャッシュによってデータを得，双方のキャッシュは，\n外部メモリに接続され，かつ，レベル２の統合キャッシュに接続される。そして，\n主演算装置により，直接コントロールされている再構成可能な構成部は，２次キャ\nッシュ（外部メモリからロードした構成の再使用を可能とし，再構成を行う回数を\n減らす。）によってロードされるコンフィグレーション（構成）メモリを含み，直接，\nいくつかのデータポート経由でデータキャッシュにアクセスすることができ，さら\nに，再構成可能なロジックは，機能ユニット・インターフェース経由で主演算装置\nと通信する。\n再構成可能な機能ユニットは，再構成可能なスライスに分割され，各々のスライ\nスは，いくつかの粗粒子状の処理エレメント（ＰＥ），レジスタファイル，相互接続\nや，小さなコンフィグレーションメモリを含んでいる。\n各々の処理エレメントは，ＡＬＵ（算術論理演算），シフタ，乗算器，あるいはメ\nモリ素子であり，これらの処理エレメント複合体は，従来のＦＰＧＡと比較すると，\nより低い電力消費量で，かつ，より高周波数で作動することを可能とする，再構成\n可能ロジックになる。これらの処理エレメントは，プログラム可能な相互接続部を\n通じて，互いに接続状態にあり，この相互接続部は，完全なクロスバーでワード単\n位に作動し，このクロスバーは，任意の処理エレメントの結果出力を，その他の処\n理エレメントの入力へと接続することができ，この他のスライスのレジスタ書込み\nと，相互接続クロスバーを組み合わせることによって，データ・フロー鎖の中の要\n素がクロスバーによって共に接続されるように，空間的な計算を行うことが可能で\nある。\nまた，スライスにあるコンフィグレーションメモリは，スライスのデータ経路コ\nンポーネントのための構成を格納している。典型的なループ処理は，遅滞なく切り\n替えるために複数のコンフィグレーション（構成）を用意する必要があり，そのた\nめ，コンフィグレーションメモリは，マルチコンテキストである必要がある。再構\n成可能な機能ユニットは，コンフィグレーションメモリにロードされた構成を用い\nることができる。\n以上によれば，引用発明は，\n「プロセッサであって，\nプログラム可能な相互接続を提供するクロスバーと，\nそれぞれがクロスバーに接続される処理エレメントであって，処理エレメントは，\nＡＬＵ（算術論理演算），シフタ，乗算器を含んだ処理エレメントと，\n処理エレメント及びクロスバーと共に設けられ，スライスのデータ経路コンポー\nネントのための構成をロードされたコンフィグレーションメモリと，\nクロスバー及び処理エレメントを直接コントロールする主演算装置と，\nを備えるプロセッサ。」であると認められる。\n(2)  審決の引用発明の認定について\n審決は，引用発明について，「・・・前記主演算装置は，トライマランをベースと\nしたコンパイラであって，再構成可能なアレイを異なる構成へと統合させるステッ\nプを有するプロセッサ用命令セットを生成するコンパイラを含む主演算装置・・・」\nと認定し，主演算装置に「・・・プロセッサ用命令セットを生成するコンパイラ」\nを含むとしていることから，引用発明における「コンパイラ」について検討する。\nア  まず，前提として，ＰＬＤ（プログラマブル・ロジック・デバイス又は\nプログラマブル・デバイス）の分野における「コンパイラ」について検討する。\n証拠（甲１９，２０）及び弁論の全趣旨によれば，ＰＬＤの開発に関し，以下の\nとおり認められる。\nＰＬＤは，ユーザが設計した任意のロジック回路を書き込んで，動作させること\nのできるデバイスである。ＰＬＤの一つが，ＦＰＧＡ(Field Programmable Gate Array)\nであり，ＬＵＴ（Look Up Table)と呼ばれる入力の組合せによってあらかじめ決めら\nれた出力が得られるメモリを用いるものであり，ハードウエア記述言語（ＨＤ\nＬ;Hardware Description Language)を用いて作成したハードウエアイメージを専用の\nデバイス（ＦＰＧＡ）に書き込むだけでオリジナルのハードウエアを作ることがで\nきる。このＬＵＴは，構造がＳＲＡＭと似ており，高集積化しやすい一方，回路情\n報を記憶するベースがＳＲＡＭベースであるために，電源を切ると回路情報が失わ\nれることから，ＲＯＭを外付けし，電源投入と同時に回路情報をＦＰＧＡにダウン\nロードする必要がある。この動作をコンフィグレーションと呼び，ＰＬＤの開発段\n階で，ＲＯＭに格納するコンフィグレーション・データを作成しておく必要がある。\nＰＬＤの開発（ＦＰＧＡ等の各テーブルに設定する内容の決定）は，通常のソフ\nトウエアの開発同様，開発用言語を利用して行われ，開発の手順としては，一般に，\n①ソース・コードの作成，②論理合成，③配置配線，④コンフィグレーション・デ\nータの生成，⑤デバイス・プログラミング／コンフィグレーションにより行われる。\n例えば，甲１９の図４には，以下のように示されている。\nすなわち，まず，ソース・コードの作成が，ＨＤＬなどの開発用言語の文法に従\nって行われ(上記①），次に，開発用ツール（ソフトウエア）によって，ソース・コ\nードからネットリスト（回路構成情報）を生成する論理合成が行われ（上記②），こ\nこで生成されたネットリストに従い，実際の素子に組込み可能なように配置と配線\nを決める配置配線が行われ（上記③），この配置配線の結果は，コンフィグレーショ\nン・データ（又はビット・ファイル）として生成され（上記④），開発用パソコンの\n中に保管されているコンフィグレーション・データがケーブルを介して，ＦＰＧＡ\n等のＰＬＤが搭載されたボードのＰＬＤ又はＲＯＭにダウンロードされるという，\nデバイス・プログラミング／コンフィグレーション（ＦＰＧＡへのデータ書込み）\nの操作が行われる（上記⑤）。\nこのように，ソースコードは，ＨＤＬなどの高級言語で作成されており，これを\n０と１とからなる機械語（アセンブラ）に変換すること，あるいは，プログラミン\nグ言語で書かれた，プログラムのソースコード（原始コード）を，機械語，ないし\nバイトコードなどの中間言語によるオブジェクトコード（目的コード）に翻訳(変換)\nすることを，「コンパイル」，その動作をさせるソフトウエア又は場所を，「コンパイ\nラ」と呼ぶ（以下，「第１の意義」という。）一方，ＰＬＤの開発手順における②論\n理合成，又は②論理合成と③配置配線とを合わせて，上記と同様に「コンパイル」，\n「コンパイラ」との用語が用いられる（以下「第２の意義」という。）。\nイ  甲７文献に記載された「コンパイラ」について\n上記(1)ア(ｳ)のとおり，甲７文献において，コンパイラ技術は，「コンパイラ技術\n／合成技術」と記され，また，上記(1)ア(ｵ)のとおり，「３  コンパイラ技術」とし\nて，すべての再構成可能なインストラクションセットプロセッサの命令生成は，主\nに二つのステップを含み，そのうちの一つが再構成可能アレイ用の様々なコンフィ\nグレーションの合成であること，甲７文献の研究で用いられたコンパイラは，トラ\nイマランコンパイラをベースとしており，再構成可能なプロセッサにおいて，粗粒\n度結合型再構成可能なユニットを利用して開発することができ，ループの命令生成\nは，ソフトウエアのパイプライン処理に基づいており，この処理は，「ＦＰＧＡの\n“place and route”（配置配線）と同じである」こと，また，このコンパイラは，各\nループ処理を分析し，必要なスライス数を割り出すことができ，再構成時間と消費\n電力の双方を削減するため，必要なスライス数しか使わない，「消費電力を考慮し，\nさらに処理性能を低下することなく動作させるスライスの数を最小限にするインテ\nリジェントコンパイラ」であること（上記(1)ア(ｷ)）が示されている。\nウ  以上によれば，甲７文献に記載された「コンパイラ」は，ＰＬＤの開発\n段階で，ＲＯＭに格納するコンフィグレーション・データを作成するために用いら\nれるものであり，上記の第２の意義を示すものと認められる。\nそうすると，前記のとおり，引用発明の「プロセッサ」は，スライスのデータ経\n路コンポーネントのための構成をロードされたコンフィグレーションメモリを備え，\n「主演算装置」は，クロスバー及び処理エレメントを直接コントロールするもので\nあるところ，甲７文献の「コンパイラ」は，ＰＬＤの開発手順において，上記コン\nフィグレーションメモリへロードされるデータコンポーネントを生成するために用\nいられるものであるから，審決の述べるように，引用発明の主演算装置に「トライ\nマランをベースとしたコンパイラであって，再構成可能なアレイを異なる構成へと\n統合させるステップを有するプロセッサ用命令セットを生成するコンパイラを含\nむ」と解する余地はない。\nしたがって，審決の引用発明の認定は誤りである。\n(3)  被告は，命令処理資源（「命令セル」）をどのように割り当てるかの決定は，\n命令実行前にコンパイラにおいてデータ依存関係の分析の結果を踏まえて（静的に）\n行われることが前提とされているとして，「コンパイラ」が命令実行前に命令セルの\n割当てを決定するものであることを認めつつ，審決の認定について，上記のような\n引用発明の「コンパイラ」を参照しつつ，引用発明の「主演算装置」と本願発明の\n「復号モジュール」の両者が一致する旨を説示したものであると主張する。\n被告の主張は，その趣旨が必ずしも明らかではないが，認定した引用発明におけ\nる「コンパイラ」は，「甲７文献に記載された『コンパイラ』を参照し」たにすぎな\nいもので，主演算装置に「コンパイラ」を含むと認定したものではない旨述べるも\nのと解される。\nしかし，審決が認定した引用発明は，その字義から，主演算装置が「コンパイラ」\nを含むと認定したことが明らかである。\nそして，審決は，前記(1)ア(ｵ)の部分を摘記し，「『命令』を処理する『主演算装置』\nが行う処理の一部が，上記Ｃ（裁判所注：前記(1)ア(ｵ)の部分）に記載された『コン\nパイラ』であると看取できる。」と述べ，引用発明について「・・・コンパイラを含\nむ主演算装置・・・」と認定し，対比において，引用発明の「コンパイラ」の元々\nの意味がプログラミング言語で書かれた，プログラムのソースコード（原始コード）\nを，機械語，ないしバイトコードなどの中間言語によるオブジェクトコード（目的\nコード）に翻訳(変換)する機能単位を指す用語であるとした上で，引用発明の「コ\nンパイラ」と本願発明の「復号モジュール」について，「プログラム言語命令をハー\nドウエア実行コードに変換するもの同士である点で，両者は一致する」と認定し，\n一致点を「・・・復号モジュールと，を備えるプロセッサ」と認定しているのであ\nる。\n以上によれば，審決は，甲７文献に記載された「コンパイラ」が，ＰＬＤ開発手\n順における構成命令生成段階における上記の第２の意義の「コンパイラ」であるの\nに，その技術的意義を誤って理解し，上記第１の意義における「コンパイラ」と同\n様に捉え，引用発明の認定において，後記(5)のとおり，構成を復号化するモジュー\nルが甲７文献に記載されていないにもかかわらず，第１の意義の「コンパイラ」が\n主演算装置に含まれると認定したと解される。この点において，審決は，引用発明\nの認定を誤ったものといわざるを得ず，被告の主張は採用できない。\n(4)  被告は，審決のした対比について，「プログラム言語命令をハードウエア\n実行コードに変換する」点で，引用発明の「主演算装置」と本願発明の「復号モジ\nュール」の両者が一致する旨を説示したもので，本願発明の「プログラム命令を実\n行するプロセッサ」が，データ依存関係の分析のみならず，その分析結果の「命令\nセルの回路」への「マップ」がコンパイラにおいて命令実行前に行われることを前\n提としたものであることを踏まえ，プログラム言語を用いて作成されたプログラム\n（プログラム言語命令）をハードウエアにおいて実行可能な命令の列としてのプロ\nグラム（ハードウエア実行コード）に変換する際のコンパイラにおける分析を前提\nとしたものである点において，引用発明の「主演算装置」が本願発明の「復号モジ\nュール」と相当関係にある旨を述べたものである旨主張する。\nしかし，審決の認定は，上記したとおりであり，引用発明の「コンパイラ」が本\n願発明の「復号モジュール」と一致すると明確に述べているのであるから，被告の\n上記主張は採用できない。\n(5)  もっとも，引用発明の「主演算装置」が，符号化された構成命令のプログ\nラム言語命令をハードウエア実行コードに変換する（復号化する）ことが，甲７文\n献に記載されており，引用発明の「プロセッサ」が「復号モジュール」を備えると\nいえる場合，審決の認定した「・・・命令のデータ経路から構成命令を受け，前記\n相互接続ネットワーク及び命令セルの少なくともいくつかのデータ経路を構成し，\nこれにより前記データ経路を前記命令セルの回路にマップしまた前記プログラム命\n令を実行する復号モジュールと，を備えるプロセッサ。」との一致点の認定に誤りが\nないと解される余地があることから，この点について検討する。\nまず，前記のとおり，引用発明は，\n「プロセッサであって，\nプログラム可能な相互接続を提供するクロスバーと，\nそれぞれがクロスバーに接続される処理エレメントであって，処理エレメントは，\nＡＬＵ（算術論理演算），シフタ，乗算器を含んだ処理エレメントと，\n処理エレメント及びクロスバーと共に設けられ，スライスのデータ経路コンポー\nネントのための構成をロードされたコンフィグレーションメモリと，\nクロスバー及び処理エレメントを直接コントロールする主演算装置と，\nを備えるプロセッサ。」であると認められる。\nそして，引用発明の「プロセッサ」は本願発明のＡ２「プロセッサ」に，引用発\n明の「プログラム可能な相互接続を提供するクロスバー」は，本願発明のＢ「相互\n接続ネットワーク」に，引用発明の「それぞれがクロスバーに接続される処理エレ\nメントであって，処理エレメントは，ＡＬＵ（算術論理演算），シフタ，乗算器を含\nんだ処理エレメント」は，本願発明のＣ「それぞれが前記相互接続ネットワークに\n接続される異種の複数の命令セルであって，該命令セルの各々は少なくとも加算，\n減算，乗算，除算あるいはシフトの処理を行う該複数の命令セル」にそれぞれ相当\nする。\nところで，本願発明の「復号モジュール」は，「復号モジュールであって，・・・\n前記データ経路を前記命令セルの回路にマップしまた前記プログラム命令を実行す\nる，復号モジュール」である。そして，前記１(2)において述べたとおり，「復号モ\nジュール」は，ＲＩＣＡコンパイラによって生成され，符号化され，構成メモリに\n格納された構成命令を受けて復号化し，相互接続ネットワーク及び命令セルの少な\nくともいくつかを構成し，これによりデータ経路を命令セルの回路に現実にマップ\nし，プログラム命令を実行するものと認められる。また，本願明細書においては，\n構成命令が符号化されたものであることが明確に示されている（【００１８】～【０\n０２６】，【００３２】，【００５３】。図６等）。\nこれに対し，引用発明の「主演算装置」は，「前記相互接続クロスバー及び前記処\n理エレメントを直接コントロールする」ところ，当該「コントロール」に「前記相\n互接続ネットワーク及び命令セルの少なくともいくつかのデータ経路を構成し，こ\nれにより前記データ経路を前記命令セルの回路にマップしまた前記プログラム命令\nを実行する」ことが含まれることは，甲７文献には明示されていない。仮に，上記\n「コントロール」は，「・・・プログラム命令」を実行することを含むと解したとし\nても，引用発明の「プロセッサ」が，スライスのデータ経路コンポーネントのため\nの構成をロードされたコンフィグレーションメモリを，処理エレメント及びクロス\nバーと共に備えることは認められるものの，このコンフィグレーションメモリから\n「構成」（本願発明の「構成命令」に相当）を受けるのが「主演算装置」であること\nは，甲７文献に明示されていないし，そのことを示唆する記載もない。\nまた，「主演算装置」は，コンフィグレーションメモリにロードされた，スライス\nのデータ経路コンポーネントための「構成」をコンフィグレーションメモリから受\nけていると更に仮定したとしても，甲７文献においては，当該「構成」が符号化さ\nれているか，既に復号化されたものであるかについては，一切記載がない。甲７文\n献の「・・・・ディレイなく切り替えるため複数のコンフィグレーションを用意す\nる必要があり・・・・，そのためコンフィグレーションメモリは，マルチコンテキ\nストである必要がある（すなわち，いくつかのコンフィグレーションを保持してお\nく必要がある）。１つのコンテキスト（またはコンフィグレーション）を別のコンテ\nキストに切り替えるのに 1 クロックサイクルで可能であり，・・・・コンフィグレー\nションメモリ内のコンフィグレーションの数は，通常８～３２のコンテキストの範\n囲である。」，「再構成可能な機能ユニットは，図３に示されるような特殊再構成可能\n命令により活性化される。この再構成可能命令は，主に２種の情報からなる。１つ\nは，多くの利用可能な構成のどれが使用されるべきかを指定する再構成可能命令識\n別子（RID）を含んでいるということである。この識別子は，構成メモリにおいて\n利用可能なコンテキストの数より多数の構成の中から選択することができる。必要\nな構成が構成メモリに現在ロードされない場合，システムは停止される。それはこ\nの RID によってインデックスを付けられた小さなキャッシュのように作用する。ま\nた，適切な構成は一体になった２次キャッシュからロードされる。」との記載（前記\n(1)ア(ｴ)）からすれば，保持された複数のコンフィグレーションを別のコンフィグレ\nーションに切り替えるのに１クロックサイクルで可能であると示されており，この\nことを考慮すると，引用発明において，主演算装置が「構成」を受けるとして，そ\nの段階において，当該「構成」が既にハードウエア実行コードであることも想定さ\nれる。\nそうすると，引用発明において，「構成」を主演算装置において受けるとしても，\nこの「構成」が符号化されており，主演算装置において「復号化」しているか否か\nは不明であるといわざるを得ない。そして，他に，このような復号機能を有するモ\nジュールの存在は窺われず，当事者も主張していないから，「復号モジュール」を引\n用発明のプロセッサに含むと認定することはできない。\nそうすると，本件において，引用発明と本願発明とは，「・・・復号モジュールと，\nを備える（プロセッサ）」である点において一致しているとはいえず，引用発明の「構\n成」は符号化されたものであるか否かは不明であるから，審決は，引用発明が，モ\nジュールが受けた「構成」を復号する機能を有するか，すなわち，「復号モジュール」\nを含むか否か不明である点を本願発明との相違点として認定すべきである。\n（6)  以上によれば，審決のした引用発明の認定，一致点の認定には誤りがあ\nり，これは相違点の看過につながることから，原告の取消事由３には理由がある。\n第６  結論\n以上によれば，原告主張の取消事由３に理由があるから，その余の点について判\n断するまでもなく，原告の請求を認容することとして，主文のとおり判決する。\n知的財産高等裁判所第２部\n裁判長裁判官\n清水   節\n裁判官\n中村   恭\n裁判官\n中 武 由 紀\n"
}
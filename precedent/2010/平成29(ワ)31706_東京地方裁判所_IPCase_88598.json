{
  "trial_type": "IPCase",
  "date": {
    "era": "Heisei",
    "year": 31,
    "month": 3,
    "day": 27
  },
  "case_number": "平成29(ワ)31706",
  "case_name": "損害賠償請求事件",
  "court_name": "東京地方裁判所",
  "right_type": "特許権",
  "lawsuit_type": "民事訴訟",
  "lawsuit_id": "88598",
  "detail_page_link": "https://www.courts.go.jp/app/hanrei_jp/detail7?id=88598",
  "full_pdf_link": "https://www.courts.go.jp/app/files/hanrei_jp/598/088598_hanrei.pdf",
  "contents": "平成３１年３月２７日判決言渡  同日原本領収  裁判所書記官\n平成２９年（ワ）第３１７０６号  損害賠償請求事件\n口頭弁論終結日  平成３１年１月２８日\n判      決\n当事者の表示  別紙１当事者目録記載のとおり\n主      文\n１  原告の請求を棄却する。\n２  訴訟費用は原告の負担とする。\n事 実 及 び 理 由\n第１  請求\n被告は，原告に対し，３億４９１５万５０００円及びこれに対する平成２９年１\n０月１８日から支払済みまで年５分の割合による金員を支払え。\n第２  事案の概要\n１  本件は，発明の名称を「情報管理方法，情報管理プログラム，及び情報管理\n装置」とする特許第３７５４４３８号の特許権（以下「本件特許権」といい，この\n特許を「本件特許」という。また，本件特許の願書に添付した明細書及び図面を\n「本件明細書等」という。）を有する原告が，被告に対し，被告においてウェブサ\nイト上で提供している「Ｃｈｏｒｅｇｒａｐｈｅ」（コレグラフ）という名称のプ\nログラム（以下「被告プログラム」という。）は，本件特許の特許請求の範囲の請\n求項１４記載の発明（以下「本件発明」という。）の技術的範囲に属し，被告によ\nる被告プログラムの提供は本件特許権を侵害する旨を主張して，民法７０９条の不\n法行為による損害賠償請求権（対象期間は，平成２７年６月１日から平成２９年３\n月３１日まで）に基づき，３億４９１５万５０００円及びこれに対する不法行為後\nの日である平成２９年１０月１８日（訴状送達の日の翌日）から支払済みまでの民\n法所定年５分の割合による遅延損害金の支払を求める事案である。\n２  前提事実（当事者間に争いがない又は後掲の証拠及び弁論の全趣旨により容\n易に認められる事実）\n⑴  当事者\n原告は，コンピューターソフトウェアの研究，開発に関する事業等を目的とする\n株式会社である（甲１）。\n被告は，コンピューターソフトウェアの研究，開発，販売及び賃貸等を目的とす\nる株式会社である（甲２）。\n⑵  本件特許権\n原告は，次の内容の本件特許権を有している（甲３，１８）。\n出願 日     平成１６年８月１３日\n優先 日     平成１６年７月２８日\n登録 日     平成１７年１２月２２日\n特許番 号     特許第３７５４４３８号\n発 明 の 名 称     情報管理方法，情報管理プログラム，及び情報管\n理装置\n⑶  本件発明の特許請求の範囲\n本件発明の特許請求の範囲の記載は，別紙２の本件特許に係る特許公報（甲３）\nの該当欄記載のとおりである。\n⑷  本件発明の構成要件の分説\n本件発明は，次のとおり，構成要件に分説される（以下，頭書の記号に従って，\n「構成要件Ａ」などという。）。\nＡ  コンピュータが情報を管理する情報管理方法であって，\nＢ  前記コンピュータに複数のノードそれぞれに対応付けて入力された管理すべ\nき情報を，前記ノードを識別するノード識別情報に対応付けられた複数のノードデ\nータを含む文書ファイルとして前記コンピュータが記憶する情報記憶ステップと，\nＣ  前記情報記憶ステップで記憶された前記文書ファイルの情報を前記コンピュ\nータが表示する情報表示ステップと，\nＤ  前記ノードデータに含まれるスクリプトを前記コンピュータが実行する情報\n評価ステップとを備え，\nＥ  前記ノードデータは，ルートノードを除いて，当該ノードの親ノードを特定\nする親ノード識別情報を含んでおり，\nＦ  前記スクリプトは，当該ノードデータに含まれる変数データである自ノード\n変数データと，当該ノードの直系上位ノードのノードデータに含まれる変数データ\nである上位ノード変数データを利用した演算を行って，前記自ノード変数データの\n値を求める代入用スクリプトを含んでおり，\nＧ  前記情報表示ステップは，前記親ノード識別情報を利用して，前記ノードの\n木構造を表示する木構造表示ステップと，前記表示された木構造のノードのうちの\n選択されたノードの前記自ノード変数データ，前記上位ノード変数データ及び前記\nスクリプトを表示するノードデータテーブル表示ステップを含み，\nＨ  前記情報評価ステップは，前記代入用スクリプトの実行により，前記自ノー\nド変数データの値を更新するステップを含む情報管理方法\nＩ  における各ステップを，コンピュータに実行させるための情報管理プログラ\nム。\n⑸  被告プログラム\nア  概要\n被告プログラムは，被告が販売する「Ｐｅｐｐｅｒ」及び「Ｎａｏ」という名称\nのロボット（以下，併せて「本件ロボット」という。）上で作動するアプリケーシ\nョン（以下「ロボアプリ」という。）を開発するためのソフトウェアである。ロボ\nアプリにおいては，本件ロボットの動作などの振る舞い（フローともいう。）を規\n定することになるが，振る舞いを定義する単位がビヘイビアであり，一つのビヘイ\nビアはボックスという名称の機能単位で構成される。例えば「こんにちは」と話す\nという振る舞いについては，言語を設定するボックス，話すという動作を規定する\nボックスなどで構成される。被告プログラムでは，このようなボックスを接続して\nいくことによってロボアプリを作成することができるようになっており，被告プロ\nグラムを起動した際に表示される画面上には，振る舞いを図で表すフローダイアグ\nラムを表示するパネルが設けられ，同パネル内にボックスを配置し，ボックス同士\nを接続してフローダイアグラムを作成していくことによって振る舞いを構築する。\nこのように構築された振る舞いをプログラミング言語及びその他の情報で記述した\nものが，「ｂｅｈａｖｉｏｒ．ｘａｒ」という名称の文書ファイル（以下，単に\n「ｂｅｈａｖｉｏｒ．ｘａｒ」という。）であり，振る舞いを構築すると，上記文\n書ファイルが作成される（甲６，７）。\nイ  被告プログラムを起動させて作成されたｂｅｈａｖｉｏｒ．ｘａｒ\n別紙３－２ｂｅｈａｖｉｏｒ．ｘａｒの内容は，原告において，被告プログラム\nを起動し，本件ロボットに「こんにちは」を意味する単語をしゃべらせる振る舞い\nを構築した際に作成されたｂｅｈａｖｉｏｒ．ｘａｒである（甲１７）（以下，こ\nのｂｅｈａｖｉｏｒ．ｘａｒを「本件ｂｅｈａｖｉｏｒ．ｘａｒ」という。）。\n⑹  被告の行為\n被告は，遅くとも平成２７年９月から，被告プログラムをウェブサイト上で提供\nしている（甲４～６）。\n３  争点\n⑴  被告プログラムは，本件発明の技術的範囲に属するか（争点１）\nア  被告プログラムは，「情報管理方法」（構成要件Ａ），「ノード」，「管理\nすべき情報」，「ノードデータ」，「文書ファイル」，「情報記憶ステップ」（構\n成要件Ｂ），構成要件Ｃ及びＤを充足するか（争点１－１）\nイ  被告プログラムは，「ノード識別情報」（構成要件Ｂ），「親ノード識別情\n報」（構成要件Ｅ，Ｇ），「ルートノード」（構成要件Ｅ），「木構造」，「木構\n造表示ステップ」（構成要件Ｇ）を充足するか（争点１－２）\nウ  被告プログラムは，「（直系）上位ノード」（構成要件Ｆ），「上位ノード\n変数データ」（構成要件Ｆ，Ｇ），「代入用スクリプト」（構成要件Ｆ，Ｈ）を充\n足するか（争点１－３）\nエ  被告プログラムは，「自ノード変数データ，前記上位ノード変数データ及び\n前記スクリプトを表示するノードデータテーブル表示ステップ」（構成要件Ｇ）を\n充足するか（争点１－４）\nオ  被告プログラムは，「更新するステップ」（構成要件Ｈ）を充足するか（争\n点１－５）\n⑵  本件特許は特許無効審判により無効とされるべきものか（争点２）\nア  本件発明は本件特許出願前に頒布された刊行物である乙９（特開平６－１７\n５８５２号公報）に記載された発明（以下「乙９発明」という。）により新規性又\nは進歩性を欠くか（争点２－１）\nイ  本件発明は本件特許出願前に頒布された刊行物である乙１６（特開平１０－\n６９３７９号公報）に記載された発明（以下「乙１６発明」という。）により新規\n性又は進歩性を欠くか（争点２－２）\nウ  本件特許は特許法３６条６項１号及び同条４項１号に違反しているか（争点\n２－３）\nエ  本件特許は特許法３６条６項２号に違反しているか（争点２－４）\n⑶  損害の発生の有無及びその額（争点３）\n４  争点に対する当事者の主張\n⑴  争点１（被告プログラムは，本件発明の技術的範囲に属するか）について\nア  争点１－１（被告プログラムは，「情報管理方法」（構成要件Ａ），「ノー\nド」，「管理すべき情報」，「ノードデータ」，「文書ファイル」，「情報記憶ス\nテップ」（構成要件Ｂ），構成要件Ｃ及びＤを充足するか）について\n【原告の主張】\n(ｱ)  構成要件Ｂ，ＤないしＦの規定によれば，「管理すべき情報」は，ノード\nを識別するノード識別情報に対応付けられた複数の「ノードデータ」を含む文書フ\nァイルとしてコンピュータに記憶されるものであり，この「ノードデータ」は，\n「スクリプト」，「親ノード識別情報」，「自ノード変数データ」，「上位ノード\n変数データ」及び木構造を表示するための情報を含むものを意味する。\nまた，「ノード」は，木構造を前提とするものであるところ，「ノード」及び\n「木」は，数学の一分野であるグラフ理論における概念であって，「木」は，閉路\nを含まないグラフを意味し，グラフ理論におけるグラフは，ノード（頂点）と２つ\nのノードを結ぶエッジ（辺）により構成される。よって，「ノード」は，ノード\n（頂点）と２つのノードを結ぶエッジ（辺）により構成される閉路を含まないグラ\nフにおける頂点を意味する。\nさらに，本件明細書等（以下，【】は，本件明細書等における発明の詳細な説明\nの段落番号を指す。【０００９】）の記載に鑑みれば，「文書ファイル」とは，テ\nキストエディタ等で読むことのできるテキスト形式のファイルであり，１つの文書\nデータを意味する。\n(ｲ)  被告プログラムは，ボックスを接続する形で本件ロボットのソフトウェア\nを実装することができる開発環境であり，別紙３－１被告プログラム説明書及び別\n紙４被告プログラムの構成（原告）記載のとおり，コンピュータによって情報を管\n理するものであるから，コンピュータが情報を管理する「情報管理方法」を充足す\nる。\nまた，被告プログラムにおいて表示されるフローダイアグラムは，閉路を含まず，\n結合線により結合されたボックスで構成されるから，これらのボックスは，「ノー\nド」に該当し，被告プログラムにおいてロボットの動作に関する情報がまとめられ\nた文書ファイルであるｂｅｈａｖｉｏｒ．ｘａｒ内で，ボックスに対応付けて入力\nされたスクリプトは，「管理すべき情報」及び「ノードデータ」に該当するから，\n被告プログラムは，「ノードデータを含む文書ファイル」としてコンピュータが記\n憶する「情報記憶ステップ」を有する。\nさらに，被告プログラムは，文書ファイルであるｂｅｈａｖｉｏｒ．ｘａｒを読\nみ込んで表示し，ｂｅｈａｖｉｏｒ．ｘａｒに含まれるスクリプトを実行するステ\nップを備えているから，構成要件Ｃ及び構成要件Ｄを充足する。\n【被告の主張】\n(ｱ)  本件発明の目的及び課題は，情報の更新を簡単かつ効率的に行う手段によ\nり，多人数で情報を共有し，再利用することができる情報管理方法を提供すること\nであって（【０００７】，【０００９】），構成要件Ｈが「自ノード変数データの\n値を更新するステップ」と規定していることにも照らせば，「管理すべき情報」は，\n変数データの値を意味する。\nよって，「情報管理方法」における情報及び当該情報を含む「文書ファイル」は，\nそれ自体，多人数で共有し，再利用する価値のある，変数データの値を意味する。\nまた，「複数のノードそれぞれに対応付けて入力された管理すべき情報」（構成\n要件Ｂ）という文言によれば，「ノード」は，管理すべき情報を含むものであり，\n木構造を前提とした概念である。\n(ｲ)  被告プログラム\n被告プログラムは，別紙５被告プログラムの構成（被告）記載のとおりであり，\n被告プログラムが管理するｂｅｈａｖｉｏｒ．ｘａｒに含まれるのはロボットを動\n作させるためのプログラムコードであって，人間がこの意味を読み取り，多人数で\n共有して再利用するものではないから，被告プログラムには「情報」に該当するも\nのが存在せず，「情報管理方法」，「管理すべき情報」，「ノード」及び「文書フ\nァイル」を充足しない。\nまた，下記イのとおり，木構造は，階層構造を備えるものであるところ，被告プ\nログラムのフローダイアグラムはプロセスを規定するものであって階層構造を備え\nていないから，被告プログラムにおけるボックスは「ノード」，「ノードデータ」\n及び「情報記憶ステップ」を充足しない。\n以上によれば，被告プログラムは，「情報記憶ステップ」，「文書ファイル」及\nび「ノードデータ」を前提とする構成要件Ｃ及び構成要件Ｄも充足しない。\nイ  争点１－２（被告プログラムは，「ノード識別情報」（構成要件Ｂ），「親\nノード識別情報」（構成要件Ｅ，Ｇ），「ルートノード」（構成要件Ｅ），「木構\n造」，「木構造表示ステップ」（構成要件Ｇ）を充足するか）について\n【原告の主張】\n(ｱ)  木構造，木構造表示ステップ\n本件発明の背景技術である特許文献の記載，「ノードの木構造の表示は，ラベル\nとリードによって行」（【００４４】）われること及び「木」はグラフ理論におけ\nる概念であることに照らせば，「木構造」は，閉路を持たないグラフであり，ノー\nド（点）とエッジ（線）から構成される図として表示されるものを意味し，表示に\n関する概念である。\n(ｲ)  ノード識別情報，親ノード識別情報\n本件明細書等の記載（【００４２】，【００４９】，【００５４】）によれば，\n親子のノード間を接続するリードは階層リードと呼ばれ，階層リードは親子関係に\n基づいて表示されるから，「親」は，専ら木構造表示におけるノード間のリードの\n接続に関するものを意味する。\nまた，構成要件Ｇ及び本件明細書等の記載（【００３８】，【００６０】）によ\nれば，木構造は階層ごとに表示されるから，「親ノード識別情報」は，階層ごとの\n木構造表示のために親ノードを識別する機能を有する情報を意味する。\n(ｳ)  被告プログラム\n被告プログラムは，別紙３－１被告プログラム説明書及び別紙４被告プログラム\nの構成（原告）記載のとおり，各ボックスに割り振られたｉｄがフローダイアグラ\nムにおいて木構造を表示するために親ボックスを識別する機能を有するから，「ノ\nード識別情報」及び「親ノード識別情報」を有する。\nまた，被告プログラムにおいて，ｉｄが－１であるｒｏｏｔボックスは，「ルー\nトノード」に該当する。\nさらに，被告プログラムは，Ｌｉｎｋタグ内のｉｎｐｕｔｏｗｎｅｒ（入力側・\n子）とｏｕｔｐｕｔｏｗｎｅｒ（出力側・親）により結合情報を認識し，これに従\nってフローダイアグラム上でボックスとボックス間の結合線で表現することによっ\nて木構造を表示しているから，親ノード識別情報を利用して木構造を表示している\nといえ，「木構造」及び「木構造表示ステップ」を有する。\n【被告の主張】\n(ｱ)  ノード識別情報\n本件明細書等の記載（【００２９】）によれば，「ノード識別情報」は，ノード\nを識別する情報であって，ノード生成時に自動的に一意の番号が付与される情報を\n意味する。\nまた，特許請求の範囲の請求項２及び９の記載並びに本件明細書等の記載（【０\n０４２】，【００４９】）によれば，ノードの結合関係を表す参照リードは，親ノ\nード識別情報に基づく階層リードと区別されているから，「ノード識別情報」は，\nノードの結合関係を表す情報を含まないものを意味する。\n(ｲ)  親ノード識別情報\n構成要件Ｅは，「親ノード識別情報」は，「ノードデータ」に含まれるものであ\nると規定しているところ，本件明細書等の記載（【００３６】，【００３８】～\n【００４２】，【図２】～【図４】，【図９】，【図１４】）によれば，「ノード\nデータ」は，ノードを示す特定の開始タグと，そのエンドタグとの間に挟まれた領\n域内のデータを意味する。よって，「親ノード識別情報」は，ノードを示す特定の\n開始タグと，そのエンドタグとの間に挟まれた領域内のデータに含まれるものを意\n味する。\nまた，本件明細書等の記載（【００１０】，【００１３】，【００４９】，【図\n６】，【図８】）によれば，「親ノード」は，木構造を前提とした概念であるとこ\nろ，「木構造」は，基本となるルートノードから複数の要素に枝分かれをした階層\n構造を意味するから，「親」は，１つの基本となる要素から複数の要素に枝分かれ\nをした階層構造によって規定される親子関係における親を意味する。\n(ｳ)  被告プログラム\n被告プログラムは，別紙５被告プログラムの構成（被告）記載のとおりであり，\n被告プログラムには，同一のｉｄを有する複数のボックスデータが存在するから，\nｉｄによってボックスを識別することは不可能である上，ｉｄは編集可能であって，\nボックス生成時に自動的に一意の番号が付与されるものではないから，被告プログ\nラムは，「ノード識別情報」を充足しない。\nまた，原告が親ノード識別情報であると主張するＬｉｎｋタグ内の情報は，ボッ\nクス間の結合関係を表すものである上，各ボックスのＢｏｘタグの開始タグとエン\nドタグとに挟まれた領域の外にあるから「ノードデータ」に当たらない。よって，\n被告プログラムは，「ノード識別情報」及び「親ノード識別情報」を充足しない。\n加えて，被告プログラムのフローダイアグラムは，ボックスの実行順序を定める\nものであるところ，Ｒｏｏｔボックス，Ｓｅｔ  Ｌａｕｇｕａｇｅボックス，Ｓａ\nｙボックス，Ｒｏｏｔボックスという順序の処理の流れを定めており，Ｒｏｏｔボ\nックスから出てＲｏｏｔボックスに戻る閉路を構成しているから，階層構造は存在\nしないのであって，親子及び上下という概念は存在しない。よって，被告プログラ\nムは，「親ノード」，「親ノード識別情報」，「木構造」及び「木構造表示ステッ\nプ」を充足せず，これを前提とした「ルートノード」も充足しない。\nウ  争点１－３（被告プログラムは，「（直系）上位ノード」（構成要件Ｆ），\n「上位ノード変数データ」（構成要件Ｆ，Ｇ），「代入用スクリプト」（構成要件\nＦ，Ｈ）を充足するか）について\n【原告の主張】\n(ｱ)  （直系）上位ノード，上位ノード変数データ\n「（直系）上位ノード」とは，属する順序系列内において，当該ノードに先行す\nるノードを意味し，構成要件Ｆ及び本件明細書等の記載（【００３１】，【００３\n２】）によれば，「上位」は，専ら下位ノードによるデータの承継に関するものを\n意味する。\nまた，本件明細書等の記載（【００５６】，【００６６】）によれば，「変数デ\nータ」は，変数名及び変数の値の２つの要素からなるものであり，変数名のみによ\nって特定することもできるものである。\nさらに，本件明細書等の記載（【０００７】）によれば，上位ノード変数データ\nが表示されることによって，選択したノードで用いられている上位ノード変数デー\nタを容易に把握することができ，管理すべき情報の更新を，簡単かつ効率的に行う\nことができるのであるから，「上位ノード変数データ」は，当該ノードの直系上位\nノードのノードデータに含まれる変数データを意味する。\n(ｲ)  代入用スクリプト\n「代入用スクリプト」には，単純な代入処理だけでなく，数式を含んだ代入処理\nを行うスクリプトも含まれる。\n(ｳ)  被告プログラム\nａ  被告プログラムにおいて，別紙３－１被告プログラム説明書（図１１，２\n２）のとおり，Ｌｏｃａｌｉｚｅｄ  Ｔｅｘｔボックス，Ｓａｙボックス及びＳｅ\nｔ  Ｌａｎｇｕａｇｅボックスは，属する順序系列内において，Ｓａｙ  Ｔｅｘｔ\nボックスに先行するボックスであるから，「（直系）上位ノード」を有し，その変\n数名又は変数の値は，「上位ノード変数データ」を充足する。\nｂ  被告プログラムが別紙４被告プログラムの構成（原告）記載の構成ｆ（以下\n「被告プログラムの構成ｆ」という。）を有するとすれば，被告プログラムのＬｏ\nｃａｌｉｚｅｄ  Ｔｅｘｔボックスは，直系上位ノードであるＳｅｔ  Ｌａｎｇｕ\nａｇｅボックスにおいて入力された，上位ノード変数データである変数ｌａｎｇの\n値である「Ｅｎｇｌｉｓｈ」や「Ｊａｐａｎｅｓｅ」を利用して演算を行い，Ｌｏ\nｃａｌｉｚｅｄ  Ｔｅｘｔボックスの自ノード変数データである「Ｈｅｌｌｏ」や\n「こんにちは」を決定しているから，被告プログラムは「代入用スクリプト」を充\n足する。\nｃ  また，被告プログラムが，別紙４被告プログラムの構成（原告）記載の構成\nｆ’（以下「被告プログラムの構成ｆ’」という。）を有する場合においても，被\n告プログラムのＳａｙ  Ｔｅｘｔボックスは，親からの変数の取得機能を使用する\n場合，直系上位ノードであるＳａｙボックスにおいて入力された上位ノード変数デ\nータである「Ｓｐｅｅｄ（％）」や「Ｖｏｉｃｅ  Ｓｈａｐｉｎｇ（％）」の値を\n利用して演算を行うことにより，Ｓａｙ  Ｔｅｘｔボックスの自ノード変数である\nｓｅｎｔｅｎｃｅに代入し，Ｓａｙ  Ｔｅｘｔボックスの自ノード変数データであ\nるｓｅｎｔｅｎｃｅの値を更新しているから，被告プログラムは「代入用スクリプ\nト」を充足する。\n(ｴ)  小括\n以上のとおり，被告プログラムは，「（直系）上位ノード」，「上位ノード変数\nデータ」及び「代入用スクリプト」を充足する。\n【被告の主張】\n(ｱ)  ノードデータ，上位ノード変数データ\n構成要件Ｆの文言によれば，上位ノード変数データは，「直系上位ノードのノー\nドデータに含まれる」ものであるところ，上記イのとおり，「ノードデータ」は，\nノードを示す特定の開始タグと，そのエンドタグとの間に挟まれた領域内のデータ\nであるから，「上位ノード変数データ」は，直系上位ノードのノードを示す特定の\n開始タグと，そのエンドタグとの間に挟まれた領域内のデータに含まれる変数デー\nタを意味する。\nまた，上記アのとおり，本件発明は木構造を前提とするものであるから，「直系\n上位ノード」も木構造を前提とした概念であるところ，「直系」とは，一般に，人\nと人との間の血統が親子の関係で続いている系統を意味するから，「直系上位ノー\nド」は，木構造を前提として，自ノードと親子関係にあり，自ノードよりもルート\nノードに近いノードを意味する。\nさらに，構成要件Ｆは，「上位ノード変数データを利用した演算」を行って「自\nノード変数データの値を求める」ことを規定しているところ，「上位ノード変数デ\nータ」の変数名だけでは，変数名を利用した演算を行って，自ノード変数データの\n値を求めることは不可能であり，また，本件明細書等の記載（【００３１】，【０\n０３２】）にも照らせば，「上位ノード変数データ」は，変数名のみならず，変数\nの値を意味するか，少なくとも変数の値を含むものと解釈される。\n(ｲ)  代入用スクリプト\n構成要件Ｄは，「前記ノードデータに含まれるスクリプト」と規定し，構成要件\nＦは，この記載を受けて「前記スクリプトは…自ノード変数データの値を求める代\n入用スクリプトを含んでおり」と規定しているから，「代入用スクリプト」は，自\nノードのノードデータに含まれるものでなければならない。\nまた，本件明細書等の実施例（【００７２】，【００７３】）に照らせば，「代\n入用スクリプト」は，親ノード変数データの値を自ノード変数データの値として代\n入するスクリプトを意味する。\n(ｳ)  被告プログラム\nａ  上記イで主張したとおり，被告プログラムのフローダイアグラムにおける処\n理の流れは閉路を構成し，親子，上下という概念は存在しないから，被告プログラ\nムは，「（直系）上位ノード」及び「上位ノード変数データ」を利用した演算を行\nって自ノード変数データの値を求める「代入用スクリプト」を充足しない。\nｂ  被告プログラムの構成ｆについてみると，変数ｌａｎｇは，Ｓｅｔ  Ｌａｎ\nｇｕａｇｅボックスに含まれる一時変数であるが，自ノードであるＳａｙボックス\n内に記載されたスクリプトには利用されておらず，また，ｌａｎｇの値はＳｅｔ\nＬａｎｇｕａｇｅボックスに記憶されていない。さらに，被告プログラムでは，Ｌ\nｏｃａｌｉｚｅｄ  Ｔｅｘｔボックスに予め記載された値である「Ｈｅｌｌｏ」や\n「こんにちは」という値を，Ｓｅｔ  Ｌａｎｇｕａｇｅボックスの変数データを用\nいて選択しているにすぎず，自ボックスの変数に上位ボックスの変数の値を代入し\nていないから，「代入用スクリプト」を充足しない。\nｃ  被告プログラムの構成ｆ’についてみると，被告プログラムのＳａｙ Ｔｅ\nｘｔボックスにおける「Ｓｐｅｅｄ（％）」及び「Ｖｏｉｃｅ  Ｓｈａｐｉｎｇ\n（％）」は，いずれも上位ノード変数ではなく，Ｓａｙ  Ｔｅｘｔボックスの自ボ\nックス変数である。また，Ｓａｙ  Ｔｅｘｔボックスが「親から継承する」機能に\nよって「Ｓｐｅｅｄ（％）」及び「Ｖｏｉｃｅ  Ｓｈａｐｉｎｇ（％）」の値を継\n承する際，Ｓａｙボックスはその継承元のボックスであるところ，Ｓａｙボックス\nとＳａｙ  Ｔｅｘｔボックスは結合情報で結合されていないから，Ｓａｙボックス\nはＳａｙ  Ｔｅｘｔボックスの上位ノードに該当しない。さらに，「Ｓｐｅｅｄ\n（％）」及び「Ｖｏｉｃｅ  Ｓｈａｐｉｎｇ（％）」は，直系上位ノードのノード\nデータに含まれるものではなく，また，上位ノードのノードデータ中に変数の値を\n含むものではない。\nこれに加えて，ｂｅｈａｖｉｏｒ．ｘａｒには，「親から継承する」機能を実行\nするスクリプトは存在しないから，被告プログラムは，自ノードのノードデータに\n含まれる代入用スクリプトに利用され，代入用スクリプトが親ノード変数データの\n値を自ノード変数データの値として代入するスクリプトという構成が存在しない。\n(ｴ)  以上によれば，被告プログラムは，「（直系）上位ノード」，「上位ノー\nド変数データ」及び「代入用スクリプト」を充足しない。\nエ  争点１－４（被告プログラムは，「自ノード変数データ，前記上位ノード変\n数データ及び前記スクリプトを表示するノードデータテーブル表示ステップ」（構\n成要件Ｇ）を充足するか）について\n【原告の主張】\n(ｱ)  本件明細書等の記載（【００４６】）によれば，「デザインテーブル２０\nは，ツリービューア１０に表示されたノードのうちの選択されたノードが有する情\n報を表示する領域であ」るから，「テーブル」（構成要件Ｇ）は情報を表示する領\n域を意味する。\n(ｲ)  被告プログラム\nａ  スクリプト\n被告プログラムのフローダイアグラム画面上でボックスを選択してダブルクリッ\nクすると，別紙３－１被告プログラム説明書（図１４）のとおり，当該ボックスに\n対応して管理されているスクリプトをスクリプトエディタによって表示することが\nできるから，被告プログラムは「スクリプトを表示するノードデータテーブル表示\nステップ」を充足する。\nｂ  自ノード変数データ\n被告プログラムのフローダイアグラム画面上でボックスを選択してクリックする\nと，別紙３－１被告プログラム説明書（図１５，１６）のとおり，右下に区分けさ\nれたインスペクタという名称のウィンドウ（以下「インスペクタ」という。）に，\n自ノード変数データである当該ボックスの変数名が表示されるから，被告プログラ\nムは，「自ノード変数データ」「を表示するノードデータテーブル表示ステップ」\nを充足する。\nｃ  別紙４被告プログラムの構成（原告）記載の構成ｇ（以下「被告プログラム\nの構成ｇ」という。）における上位ノード変数データ\n被告プログラムのインスペクタには，当該ボックスが有している入力コネクタの\n変数名も表示されるところ，入力コネクタには，アプリケーションを実行した際に\n直近の親ボックスから引き渡される値が書き込まれる。また，インスペクタ上のア\nイコンをクリックすると，当該ボックスのコネクタや変数の追加，名称やタイプ等\nの編集，削除をすることができる。例えば，被告プログラムでは，Ｓａｙ  Ｔｅｘ\nｔボックスの変数であるｐは，Ｓａｙ  Ｔｅｘｔボックスの入力コネクタ”ｏｎＩ\nｎｐｕｔ＿ｏｎＳｔａｒｔ（）”という関数の構成要素であり，直系上位ノードで\nあるＬｏｃａｌｉｚｅｄ  Ｔｅｘｔボックスの出力コネクタｏｎＳｔｏｐｐｅｄ\n（Ｓｅｌｆ，ｓｅｎｔｅｎｃｅｓ[ｓＤｅｆａｕｌｔＬａｎｇ])から出力された値\nを受け取る，コネクタの内部領域である。この入力コネクタの内部領域ｐには，ア\nプリケーションを実行した際に，Ｌｏｃａｌｉｚｅｄ  Ｔｅｘｔボックスから引き\n渡される値が書き込まれる。\nよって，入力コネクタは，親ボックスから引き渡される値を記憶する内部領域を\n保持する変数であるといえるから，入力コネクタの名称は，「上位ノード変数デー\nタ」に該当する。したがって，被告プログラムは，「上位ノード変数データ」「を\n表示するノードデータテーブル表示ステップ」を充足する。\nｄ  別紙４被告プログラムの構成（原告）記載の構成ｇ’（以下「被告プログラ\nムの構成ｇ’」という。）における上位ノード変数データ\n被告プログラムのＳａｙ  Ｔｅｘｔボックスのスクリプトエディタにおいて親か\nらの変数の取得機能を使う場合，上位ノードであるＳａｙボックスの変数から利用\n可能なものを一覧表示する機能があるから，被告プログラムは，「上位ノード変数\nデータ」「を表示するノードデータテーブル表示ステップ」を充足する。\nｅ  なお，本件発明において，インスペクタとスクリプトエディタを同時に表示\nする必要はないが，被告プログラムにおいては，スクリプトエディタをインスペク\nタと同時に表示することも可能であるから，被告プログラムは「ノードデータテー\nブル表示ステップ」を充足する。\n(ｳ)  小括\n以上によれば，被告プログラムは，「自ノード変数データ，前記上位ノード変数\nデータ及び前記スクリプトを表示するノードデータテーブル表示ステップ」を充足\nする。\n【被告の主張】\n(ｱ)  「テーブル」は表を意味することや，本件明細書等の記載（【００６５】，\n【００６６】，【００５７】，【図６】，【図９】，【図１０】，【図１３】）\nによれば，「ノードデータテーブル表示ステップ」は，変数名と変数の値とを表\n形式で表示するステップを意味し，また，自ノード変数データ，上位ノード変数\nデータ，並びに当該自ノード変数データ及び上位ノード変数データを用いた代入\n用スクリプトを，全て同時に表示するものを意味する。\n(ｲ)  被告プログラムの構成ｇ\n原告は，インスペクタに表示される入力コネクタの名称が「上位ノード変数デー\nタ」に該当すると主張するが，入力コネクタの名称は，コネクタ名であって変数で\nはない上，変数の値を含まないから，「上位ノード変数データ」に当たらない。ま\nた，Ｓａｙ  Ｔｅｘｔボックスのｐは，自ボックス関数の引数であって上位ノード\n変数ではなく，一時変数であり，その値はＳａｙ  Ｔｅｘｔボックスに記憶されて\nおらず，被告プログラムにおいてｐの値を表示することはできないから，「上位ノ\nード変数データ」に当たらない。よって，被告プログラムは，「上位ノード変数デ\nータ」「を表示するノードデータテーブル表示ステップ」を充足しない。\n(ｳ)  被告プログラムの構成ｇ’\n被告プログラムにおいて，「親からの変数を取得」機能によって表示されるのは，\n変数名にとどまり，変数の値は表示されないから，「親からの変数を取得」機能に\nよる表示は「上位ノード変数データ」に当たらない。よって，被告プログラムは，\n「上位ノード変数データ」「を表示するノードデータテーブル表示ステップ」を充\n足しない。\n(ｴ)  小括\n以上によれば，被告プログラムは，「自ノード変数データ，前記上位ノード変数\nデータ及び前記スクリプトを表示するノードデータテーブル表示ステップ」を充足\nしない。\nオ  争点１－５（被告プログラムは，「更新するステップ」（構成要件Ｈ）を充\n足するか）について\n【原告の主張】\n「更新」とは，文書ファイルを変更するか否かに関わらず，自ノード変数データ\nの値を更新することを意味し，「更新するステップ」は，このような意味での「更\n新」を行うステップを意味する。\n被告プログラムでは，別紙３－１被告プログラム説明書記載のとおり，Ｓａｙ\nＴｅｘｔボックスの自ノード変数であるｓｅｎｔｅｎｃｅの値が，代入用スクリプ\nトの実行によって導かれるところ，ｓｅｎｔｅｎｃｅの値は，直系上位ノードであ\nるＳａｙボックスの「Ｓｐｅｅｄ（％）」及び「Ｖｏｉｃｅ   Ｓｈａｐｉｎｇ\n（％）」の値の設定や，Ｓｅｔ  Ｌａｎｇｕａｇｅで設定した言語，Ｌｏｃａｌｉ\nｚｅｄ  Ｔｅｘｔで言語に対応して入力されるあいさつ文に応じて更新されるから，\n被告プログラムは，「更新するステップ」を充足する。\n以上のとおり，被告プログラムは，構成要件ＡないしＨを充足するから，これを\n前提とする構成要件Ｉを充足し，本件発明の技術的範囲に属する。\n【被告の主張】\n構成要件Ｂ，Ｃ及びＧ並びに本件明細書等の記載（【００４３】，【００６４】，\n【００６７】，【００７３】，【図１０】）に照らせば，「更新ステップ」におい\nては，文書ファイルに含まれる自ノード変数データが変更される必要がある。\nしかしながら，被告プログラムにおいては，スクリプトの実行によりｂｅｈａｖ\nｉｏｒ．ｘａｒの値が変更されることはないから，被告プログラムは，「更新する\nステップ」を充足しない。\n以上のとおり，被告プログラムは，構成要件ＡないしＨを充足しないから，これ\nを前提とする構成要件Ｉを充足せず，本件発明の技術的範囲に属しない。\n⑵  争点２（本件特許は特許無効審判により無効とされるべきものか）について\nア  争点２－１（本件発明は乙９発明により新規性又は進歩性を欠くか）につい\nて\n【被告の主張】\n本件発明は，以下のとおり，乙９発明と同一であるか，何らかの相違点があると\nしても，当業者が出願時の技術常識を用いて容易に想到できたから，新規性又は進\n歩性を欠き，本件発明に係る本件特許には，特許法２９条１項３号又は同条２項に\n違反する無効理由（同法１２３条１項２号）がある。\n(ｱ)  新規性\nａ  相違点\n本件発明と乙９発明には，以下の相違点が一応存在し，その余の点において一致\nする。\n(a)  本件発明では，情報が文書ファイルとしてコンピュータに記憶されるのに\n対して，乙９発明では，知識が文書ファイルとしてコンピュータに記憶されるもの\nであるかが明示されていない点（相違点１－１）。\n(b)  本件発明では，スクリプトがノードデータに含まれているのに対して，乙\n９発明では，スクリプトがノードデータに含まれているかが明示されていない点\n（相違点１－２）。\n(c)  本件発明では，ノードデータテーブル表示ステップがスクリプトを表示す\nるものであるのに対して，乙９発明では，属性値表示ステップがスクリプトを表示\nするものであるかが明示されていない点（相違点１－３）。\nｂ  検討\n当業者の技術常識を参酌すれば，乙９発明の公報には相違点１－１ないし１－３\nに係る構成が記載されているに等しく，相違点１ないし３は実質的相違点ではない\nから，新規性を欠く。\n(ｲ)  進歩性\n仮に相違点１－１ないし１－３が実質的相違点であるとしても，これらに係る構\n成を採用することは当業者が周知技術（乙１０から１５）を適用して適宜なし得る\n設計事項にすぎないから，進歩性を欠く。\n【原告の主張】\n乙９発明は，本件発明における「情報」と乙９発明における「知識」が異なるな\nどの理由から，構成要件ＡないしＨに相当する構成を備えていないから，本件発明\nと同一の発明ということはできず，また，本件発明と乙９発明は，利用場面が異な\nる上，課題が共通しておらず，その構成も全く異なるものであるから，相違点につ\nいて容易想到ということもできない。よって，本件発明は乙９により新規性及び進\n歩性を欠くということはできない。\nイ  争点２－２（本件発明は乙１６発明により新規性又は進歩性を欠くか）につ\nいて\n【被告の主張】\n本件発明は，充足論における原告の主張を前提とすれば，乙１６発明と同一であ\nるか，何らかの相違点があるとしても，当業者が出願時の技術常識を用いて容易に\n想到できたから，新規性又は進歩性を欠き，本件発明に係る本件特許には，特許法\n２９条１項３号又は同条２項に違反する無効理由（同法１２３条１項２号）がある。\n【原告の主張】\n乙１６発明には，機能ブロックに包含されるプログラムコードに機能ブロックの\n物理名称が含まれる構成が開示されていないなど，本件発明との間に数多くの相違\n点が存在し，その相違点が既存の技術常識又は設計事項であると認めることはでき\nないから，本件発明は乙１６により新規性及び進歩性を欠くということはできない。\nウ  争点２－３（本件特許は特許法３６条６項１号及び同条４項１号に違反して\nいるか）について\n【被告の主張】\n本件発明が，文書ファイルの変更を伴わない態様を含むものであるという原告\nの主張を前提にすると，多人数で情報を共有し再利用することができる情報管理\n方法を提供するという本件発明の課題を解決することができない態様を発明の範\n囲に含むことになる。\nまた，本件発明は，代入用スクリプトを用いて情報を更新するものであり，代\n入用スクリプト自体を更新することはできないものであるところ，管理すべき情\n報にはスクリプトが含まれるという原告の主張を前提にすると，管理すべき情報\nの更新を簡単かつ効率的に行うという本件発明の課題を解決することができない\n態様を含むことになる。\nよって，本件特許は，サポート要件（特許法３６条６項１号）及び実施可能要\n件（特許法３６条４項１号）に違反する。\n【原告の主張】\n争う。\n本件発明は，スクリプトを用いて情報を更新することを目的としているが，文書\nファイルを書き換えることを目的としていない。また，本件発明においては代入用\nスクリプトを含む管理すべき情報が更新されるという被告の主張は，その前提自体\nが誤っている。\nエ  争点２－４（本件特許は特許法３６条６項２号に違反しているか）について\n【被告の主張】\n本件発明に規定される「文書ファイル」及び「情報」は，その意味が極めて多\n義的である上，本件明細書等に定義規定が置かれておらず，発明の外縁が著しく\n不明確であるから，本件特許は，明確性要件（特許法３６条６項２号）に違反す\nる。\n【原告の主張】\n争う。本件明細書等の記載や当業者の技術常識を基礎とすれば，「文書ファイ\nル」及び「情報」は，不明確であるということはできない。\n⑶  争点３（損害の発生の有無及びその額）について\n【原告の主張】\nア  被告は，被告プログラム及び被告プログラムによって作成したアプリケーシ\nョンを使用することができる本件ロボットを販売している。\nイ  本件ロボットの売上は，被告の売上（平成２７年４月１日から平成２９年３\n月３１日までの売上の合計は，７７億５９００万円）のうちの６０％に相当する金\n額である。\nまた，被告プログラムは，ロボット購入の強い動機となっているから，本件ロボ\nットの売上に対する本件特許権の寄与度は５０％である。\nさらに，本件におけるライセンス料率は，被告プログラムの態様が本件発明の実\n施例と極めて似ていることや，同分野のプログラムに関するロイヤルティ料率の相\n場を考慮すれば，１５％を下回らない。\nウ  以上によれば，被告の不法行為によって平成２７年６月１日から平成２９年\n３月３１日までの間に原告に生じた本件特許権のライセンス料（特許法１０２条３\n項）に相当する損害額は，７７億５９００万円×６０％×５０％×１５％＝３億４\n９１５万５０００円である。\nエ  よって，原告は，被告に対して，民法７０９条の不法行為による損害賠償請\n求権に基づいて，３億４９１５万５０００円及びこれに対する不法行為後の日であ\nる平成２９年１０月１８日（訴状送達の日の翌日）から支払済みまでの民法所定年\n５分の割合による遅延損害金の支払を求める。\n【被告の主張】\n争う。なお，被告プログラムは，公開以来，誰でも無償でダウンロード可能であ\nる。\n第３  当裁判所の判断\n１  本件発明の意義について\n⑴  本件明細書等の発明の詳細な説明の記載\n本件明細書等の発明の詳細な説明は，別紙２特許公報（甲３）の該当欄記載のと\nおりであるが，概要，次のとおりである。\nア  技術分野\n「【０００１】\n本発明は，コンピュータを用いて情報を管理する情報管理方法，情報管理プログ\nラム，及び情報管理装置に関する。」\nイ  背景技術\n「【０００２】\nコンピュータを用いて各種情報の管理を行う場合，それぞれの情報を記憶したフ\nァイル（文書ファイル，画像ファイル等）を，所定のフォルダに保管することによ\nって行うのが一般的である。しかし，作成したフォルダの構造及びそれぞれのフォ\nルダに保管するファイルの種類等は，任意であってフォルダの作成者に依存するた\nめ，作成者以外の者が必要な情報に適確にアクセスすることは，必ずしも簡単では\nない。すなわち，多数の者が情報を共有化し，再利用できるように，情報管理を行\nうことは容易ではない。\n【０００３】\n特許文献１には，情報の共有化，再利用を効率よく実現することができる文書情\n報管理システムが記載されている。この文書情報管理システムは，案件（プロジェ\nクト）毎にツリーを作成して表示し，作成した文書ファイルを，表示されたツリー\nの任意のノードに付随させて，サーバコンピュータに保管するものである。\n【０００４】\nまた，異なる計算機やアプリケーションで共通に取扱うことができるデータ形式\nとして，ＸＭＬ（Extensible Markup Language）等の構造化文書規格があるが，特\n許文献２には，このような構造化文書を木構造として捉えて処理する構造化文書処\n理システムが記載されている。」\nウ  発明が解決しようとする課題\n「【０００５】\nしかし，管理される各種情報の更新については，上記した管理システムにおいて\nも，効率化が十分図られているとはいえない。すなわち，木構造のノードに含まれ\nる情報は，相互に関連するものが多いが，上記した管理システムにおいては，それ\nぞれの文書の該当する部分を個別に更新する必要があり，十分効率的とはいえな\nい。」\n「【０００７】\n本発明は，上記事情に鑑みなされたもので，管理すべき情報の更新を，簡単かつ\n効率的に行うことができる情報管理情報を提供することを目的とする。」\nなお，弁論の全趣旨によれば，「情報管理情報」は，「情報管理方法」の誤記と\n認められる。\nエ  課題を解決するための手段\n「【０００９】\n本発明によれば，利用者が入力したデータに含まれるスクリプトを利用して，ノ\nードデータを更新することができるので，管理すべき情報の更新を，簡単かつ効率\n的に行うことができる。また，複数のノードデータを含む１つの文書データを用い\nて，個々の業務や案件に関する情報を管理しているので，多数の利用者による情報\nの共有化，再利用を，簡単かつ効率的に行うことができるとともに，文書データに\n基づいて，簡単にノードの木構造を表示させることができ，業務や案件全体の把握\nを簡単に行うことができる。さらに，表示された木構造の個々のノードに対応付け\nられた詳細情報を簡単に表示することができる。」\nオ  発明の効果\n「【００２４】\n以上の説明から明らかなように，本発明によれば，管理すべき情報の更新を，簡\n単かつ効率的に行うことができる。」\nカ  発明を実施するための最良の形態\n「【００２８】\n図１に，ノードデータとして記憶される情報の一例を示す。記憶される情報は，\nノード番号，ページ番号，親ノード番号，ノードラベル，ノード表示属性情報，変\n数情報，代入用スクリプト，生成用スクリプト，リンク情報を含む。\n【００２９】\nノード番号は，ノードを識別する情報であり，ノード生成時に自動的に一意の番\n号が付与される。ページ番号は，文書に含まれるノードを複数の木構造として表示\nするためのもので，そのノードが所属するページを識別する所属ページ番号に，そ\nのノードが別のページを形成する場合にそのページを識別する自己ページ番号を含\nむ。したがって，両方のページ番号が記憶されているノードは，２つのページに属\nすることになる。親ノード番号は，そのノードの親ノードを識別する番号であり，\nノード生成時に親ノードを指定することにより，その指定された親ノードのノード\n番号が自動的に記憶される。」\n「【００３１】\n変数情報は，各ノードが保持するデータであって，変数名に対応させて記憶され\nる。記憶される変数は，下位ノードから参照される公開変数と，自ノード内でのみ\n使用する限定変数を含む。また，変数の値（「変数データ」と記述する場合もあ\nる。）は，固定値が設定されても，スクリプトの実行によって演算された値が設定\nされてもよい。また，ＵＲＬが設定されてもよい。どのような値が設定されるかは\n任意である。\n【００３２】\n代入用スクリプトは，自ノードの変数の値を演算するためのものである。代入用\nスクリプトは，自ノードの変数の値である自ノード変数データと，そのノードの直\n系上位ノードの公開変数の値である上位ノード変数データを利用して記述すること\nが可能である。」\n「【００３４】\nなお，代入用スクリプト及び生成用スクリプトに使用する言語としては，スクリ\nプト言語として使用されている任意の言語を使用することができる。\n【００３５】\nリンク情報は，各ノードにリンクするファイルに関する情報である。スタンドア\nローン型のコンピュータで実施する場合，この情報はリンクファイルのインデック\nス情報である。また，クライアント－サーバ型のコンピュータで実施する場合，リ\nンクファイルをサーバに転送後，インデックス情報を作成し，記憶する。リンク情\n報を記憶することにより，各ノードをフォルダとして利用することが可能となる。\n【００３６】\nノードデータは，例えばタグ付き文書情報として記憶される。図２に，ノードデ\nータの一例を示す。図２のデータは，ルートノードのノードデータの例であり，ノ\nード番号（nodeNo）が「3450」，自己ページ番号（ownPageNo）が「10」，ノード\nラベル(label)が「パ ッセ ル操作 マニ ュ アル」 である 。所 属 ページ 番号を 示す\n（belongPageNo）が「0」，親ノード番号を示す（parentNodeNo）が「0」であるこ\nとで ， ル ー ト ノ ー ド で あ る こ と を 示 し て い る 。 図 ２ の「 x=”100” 」か ら\n「color=”0”」までは，ノードの表示位置等のノード表示属性情報である。\n【００３７】\nこの形式では，変数情報が，「<DataDivision>」と「</DataDivision>」の間に\n挿入さ れ ， 代入用スクリプトが ， 「 <ProcesureDivision> 」と\n「 </ProcesureDivision> 」の間に 挿 入 さ れ ， 生 成 用 ス ク リ プ ト が ，\n「 <GenerateDivision> 」と「 </GenerateDivision> 」の 間に ， リンク情報が ，\n「<LinkageDivision>」と「</LinkageDivision>」の間に挿入される。ただし，図\n２の例では，変数情報，代入用スクリプト，生成用スクリプトは，記憶されていな\nい。\n【００３８】\n図３に，ノードデータの別の例を示す。図３のデータは，ルートノード以外のノ\nードデータの例である。所属ページ番号が「3484」，親ノード番号が「3488」とな\nっており，ルートノード以外のノードのノードデータであることが把握できる。ま\nた，自己ページ番号が「3526」となっていることから，別ページの木構造の先頭ノ\nードであることも把握できる。\n【００３９】\n図４に，管理すべきデータを複数のノードデータを含む文書情報として記憶させ\nたものの一例を示す。図４の文書は，ヘッダ部４０，ノードデータ部４１ａ～４１\nｎ，ライン部４２，レポート部４３を備える。」\n「【００４１】\nノードデータ部４１ａは，ルートノードのノードデータを示し，ノードデータ部\n４１ｂ～４１ｎは，ルートノード以外のノードのノードデータである。\n【００４２】\nライン部４２は，ノード間を接続するリードを定義する情報が記憶される領域で\nある。ノード間を接続するリードは，親子のノード間を接続する階層リードと，階\n層関係とは無関係に一時的に変数を参照する参照元ノードと参照先ノード間を接続\nする参照リードがあるが，ライン部４２は，参照リードの存在及び，位置，表示属\n性等を規定する。\n【００４３】\n次に，記憶された文書情報の表示について説明する。図５に，文書情報の表示を\n行う場合の概略動作フローを示し，図４に示す文書の表示を行った場合の表示画面\nの例を図６に示す。\n【００４４】\n図６の表示画面は，ツリービューア１０とデザインテーブル２０を有する。ツリ\nービューア１０は，ノードの木構造を表示する領域であり，情報管理時の各種操作\nを行うためのプルダウンメニュー，及びポップアップメニューを表示する領域も兼\nねる。ノードの木構造の表示は，ラベルとリードの表示によって行い，図６の例で\nは，ルートノードのラベル表示１１ａとルートノード以外のノードのラベル表示１\n１ｂ，１１ｃ，１１ｄと，それらの間を接続する階層リード１２ｂ，１２ｃ，１２\nｄが表示されている。」\n「【００４６】\nデザインテーブル２０は，ツリービューア１０に表示されたノードのうちの選択\nされたノードが有する情報を表示する領域であり，公開変数表示領域２１，限定変\n数表示領域２２，代入用スクリプト表示領域２３，生成用スクリプト表示領域２４，\n操作ボタン表示領域２１ａ，２２ａ，２０ａを有する。操作ボタン表示領域２１ａ\nの各操作ボタンは，公開変数に対する各種操作を行うためのものであり，操作ボタ\nン表示領域２２ａの各操作ボタンは，限定変数に対する各種操作を行うためのもの\nである。また，操作ボタン表示領域２０ａの各操作ボタンは，デザインテーブル２\n０に関する各種操作を行うためのものである。」\n「【００４９】\n次いで，ステップＳ１０３で認識したノードのラベル表示を行う（ステップＳ１\n０４）。ラベル表示は，そのノードのノードラベル及びノード表示属性情報に基づ\nいて表示する。そして，表示したノードの親子関係に基づいて階層リードを表示し，\nさらに，文書のライン部４２の情報を参考にして，参照リードを表示する（ステッ\nプＳ１０５）。\n【００５０】\nこの状態では，ツリービューア１０に木構造が表示された状態である。ステップ\nＳ１０６では，ツリービューア１０に表示されたノードが選択されたかどうかを判\n定し，選択されている場合，デザインテーブル２０の表示を行い（ステップＳ１０\n７），そのノードの変数，スクリプト等を表示する（ステップＳ１０８）。図６は，\nルートノードを選択した場合の例であり，ルートノードには，変数情報等が記憶さ\nれていないので，デザインテーブル２０に，データの表示はない。この状態で，別\nのノードを選択すると，そのノードの変数等が表示される。」\n「【００５４】\n図６に示した状態で，表示された木構造及びノードデータの編集が可能であり，\n編集操作に対応した表示を行う（ステップＳ１０９）。ツリービューア１０上では，\nノードの追加，削除，表示位置移動，表示属性変更，ノードラベル変更等を，プル\nダウンメニュー，ポップアップメニューの設定により行う。例えば，表示位置の変\n更は，ラベル表示をドラッグすることによって行い，ノードラベル及び表示属性の\n変更は，変更用のウィンドウを表示させて行う。また，ノードの削除は，削除した\nいノードを選択した状態で，メニューを表示させて削除する。ノードの追加は，メ\nニューで追加モードに設定後，追加したいノードの親となるノードを選択し，その\nままドラッグすることにより，新規ノードを生成する。また，ノードの繋ぎ換えは，\n繋ぎ換えたいノードを選択し，メニューを表示させて「ノード繋ぎ換え」を選択し，\n変更したい繋ぎ先のノード（親ノードとしたいノード）を選択することによって行\nう。生成されたノードのノードラベル，表示属性情報は，修正用のウィンドウを表\n示させて設定する。\n【００５５】\nそれぞれのノードに関するデータは，ノードデータとして１まとまりになってい\nるので，これらの編集を行った場合でも，編集を行ったノードのノードデータに反\n映させるだけでよく，軽い処理負担で編集作業を行うことができる。」\n「【００５７】\n代入用スクリプト及び生成用スクリプトは，公開変数領域２１および限定変数領\n域２２に表示された変数を利用して作成する。公開変数領域２１には，自ノードの\n公開変数だけでなく，直系上位のすべてのノードの公開変数が表示される。直系上\n位のノード以外のノードの変数を参照したい場合は，参照リードを生成して，参照\n先のノードと関連付けておく。代入用スクリプト及び生成用スクリプトは代入用ス\nクリプト領域２３及び生成用スクリプト領域２４に直接入力してもよいし，別のウ\nィンドウを開いて入力するようにしてもよい。\n【００５８】\nなお，デザインテーブル２０の編集内容は，領域２０ａの更新ボタンを押すこと\nによって，文書情報に反映される。」\n「【００６３】\n続いて，ノードデータに含まれる変数情報，代入用スクリプト，生成用スクリプ\nトについて，部品管理を例に説明する。図８は，部品管理に適用した場合の木構造\nの一例を示す図である。図８の木構造は，製品番号「990070」，品名「ＭＷ－７\n０ 」 の 製 品 の 部 品 管 理 に 適 用 し た も の で ， 製品は ， 「 fore 」 ， 「 center 」 ，\n「bone」，「back」の部分からなり，さらにそれぞれの部分が，複数の部品から構\n成されることを示している。ただし，図８では，部分「fore」の部品のみを記載し，\n他の部分については，省略してある。\n【００６４】\n図８から明らかなように，部分「fore」は，３つの「ＭＷ70巾木(表)」と３つの\n「ＭＷ70パネル(表)」から構成される。図９に，１つの部品「ＭＷ70巾木(表)」に\n対応するノード（図８では，便宜的に右肩に「＊」を付してある。）のノードデー\nタの一部を示し，図１０に，そのノードが選択された場合の公開変数表示領域２１\nの表示例を･･･示す。\n【００６５】\n公開変数表示領域に表示される公開変数は，自ノードの公開変数５１と，直系上\n位ノードの公開変数５２を含み，直系上位のノードの公開変数５２は，自ノードの\n公開変数５１と異なる色で表示される（図１０では，フォントを変えて示してあ\nる。）。また，公開変数には，固定値が入力される公開変数と，代入用スクリプト\nの実行によって計算される公開変数があり，修飾領域に「なし」あるいは「要計\n算」を表示することによりに区別される。\n【００６６】\n要計算の公開変数の値は，後述するように代入用スクリプトが実行されるまでは\n空欄であり，図９及び図１０は，代入用スクリプト実行前の状態を示している。な\nお，直系上位ノードに要計算の公開変数が含まれ，その公開変数の値が代入スクリ\nプトの実行前で定まっていない場合，その公開変数は，下位ノードの公開変数領域\n２１に表示されない。すなわち，他のノードからの参照が一時停止される。\n【００６７】\n代入用スクリプト及び生成用スクリプトは，操作ボタン表示領域２０ａの「評\n価」ボタンを押すことにより実行される。」\n「【００７２】\n次に，代入用スクリプト及び生成用スクリプトの具体例を，図８の「＊」を付し\nたノードをターゲットノードとして説明する。図９に示すように，ターゲットノー\nドは，要計算の公開変数として，「スライス数」と「色」を有しており，代入用ス\nクリプトとして，「スライス数＝同一面数；」と「色＝同一面数」を有している。\n評価前は，図１０に示すように，公開変数「スライス数」と「色」の値は空欄とな\nっている。\n【００７３】\nこの状態で，このノードを選択し，「評価ボタン」を押し，評価条件として代入\n用スクリプトの実行を設定すると，記憶された代入用スクリプトを実行する。した\nがって，公開変数「スライス数」の値は，上位ノードの公開変数である「同一面\n数」の値「１」となり，公開変数「色」の値は，同様に上位ノードの公開変数であ\nる「巾木色」の値「Ｆ－２０５」となる。代入用スクリプト実行後のデザインテー\nブルの公開変数表示領域２１の表示例を，図１３に示す。\n【００７４】\nターゲットノードは，生成用スクリプトも有しているので，評価ボタンを押し，\n評価条件として生成用スクリプトの実行を設定すると，条件文によって選択された\n辞 書 ノ ー ド を 参 照 し ， 新 規 ノ ー ド を 生 成 す る 。 こ の 例 で は ， 辞 書 コ ー ド\n「C07000400000000001」の辞書ノードが参照され，ノードラベル「巾木(ＳＴ)」の\nノードが生成される。」\n「【００７６】\n図１４に示す辞書ノードのノードデータは，ノード番号及びノード表示属性情報\n位置を含んでいるが，ノード番号は，生成後のノードにおいては書き換えられる。\nまた，ノード表示属性情報のうち，表示位置に関する情報は，予め生成元のノード\nの表示位置に対する相対位置を示すものとして利用してもよいし，生成時に生成元\nのノードの表示位置に応じて生成するようにしてもよい。」\n⑵  本件発明の概要\n以上の本件明細書等の発明の詳細な説明の記載並びに本件特許の請求項１及び１\n４の記載によれば，本件発明の概要は，次のとおりであると認められる。\nア  本件発明は，コンピュータを用いて情報を管理する情報管理方法，情報管理\nプログラム，及び情報管理装置に関する（【０００１】）。\nイ  従来，コンピュータを用いて各種情報の管理を行う場合に，多数の者が情報\nを効率よく共有化及び再利用できるシステムとして，木構造を用いた情報管理シス\nテムが存在した（【０００２】～【０００４】）が，情報の更新を行う場合には，\nそれぞれの文書の該当箇所を個別に更新する必要があったため，相互に関連する情\n報の更新を効率的に行うことが課題であった（【０００５】）ところ，本件発明は，\n代入用スクリプトを利用してデータを更新する構成を採用し（【０００９】，【０\n０３２】），管理すべき情報の更新を，簡単かつ効率的に行うことができる（【０\n０２４】）ようにしたものである。\n２  争点１（被告プログラムは，本件発明の技術的範囲に属するか）について\n⑴  争点１－２（被告プログラムは，「ノード識別情報」（構成要件Ｂ），「親\nノード識別情報」（構成要件Ｅ，Ｇ），「ルートノード」（構成要件Ｅ），「木構\n造」，「木構造表示ステップ」（構成要件Ｇ）を充足するか）について\nア  「木構造」及び「親ノード」の意義\n「ノード識別情報」，「親ノード識別情報」，「ルートノード」，「木構造」及\nび「木構造表示ステップ」の各文言のうち，まず，「木構造」及び「親ノード識別\n情報」における「親ノード」の意義について検討する。\n「木構造」，「親ノード」との文言は，文言のみから一義的にその意義を明らか\nにすることができないことから，本件明細書等の発明の詳細な説明の内容を考慮し\nて検討する必要があるところ，まず，「木構造」についてみると，本件明細書等の\n記載（【００４２】，【００４４】，【図６】，【図８】，【図１６】），証拠\n（甲１４）及び弁論の全趣旨によれば，「木構造」は，ノードを表示するラベルと\nラベル間を接続する結合線であるリードから構成される図として表現される表示に\n関する概念であって，基本となる要素，すなわちルートから複数の要素に枝分かれ\nをした階層構造を意味し，閉路を含まないものと解するのが一般的かつ合理的であ\nる。また，「親ノード」についてみると，本件明細書等の「親子のノード間を接続\nする階層リード」（【００４２】），「ノードの親子関係に基づいて階層リードを\n表示」（【００４９】）及び「繋ぎ先のノード（親ノードとしたいノード）」\n（【００５４】）という記載を踏まえれば，「親」は，木構造の表示におけるノー\nド間のリードの接続に関する概念であり，「親ノード」は，あるノードに対して，\n当該ノードが属する階層内において当該ノードに直近して先行するノードを意味す\nると解するのが自然かつ合理的である。「木構造」の意義に関して本件明細書等に\nこれに反する記載は見当たらず，その他，同文言の意義を示す証拠もない。\nそして，本件明細書等の記載（【００４２】）によれば，本件発明では，一時的\nに変数を参照する参照元ノードと参照先ノードを含み得るものであり，この参照元\nノードと参照先ノードの関係は，参照元ノードから出発して参照先ノードを通って\n参照元ノードに戻る閉路を示すものと推認されるが，これらは，階層関係とは無関\n係であることが示されている。このことと，前記の「木構造」及び「親ノード」の\n意義についての検討を踏まえれば，階層リードで接続され，ノードの親子関係が示\nされている部分は木構造であることが前提とされていると認められる。\nイ  被告プログラムについての事実認定\n前記第２，２（前提事実）⑸，証拠（甲７，１７，２２）及び弁論の全趣旨によ\nれば，被告プログラムについて，次の事実が認められる。\n(ｱ)  被告プログラムを起動して本件ロボットの振る舞いを構築する際に用いる\nボックスは，ボックスとして囲まれている範囲内に「Ｓａｙ」などとしてボックス\nの名前が表示され，また，左側に，シグナルやデータを受け取るための入力コネク\nタが設けられ，右側に，ボックスからのデータや終了を示すシグナルを出力するた\nめの出力コネクタが設けられており，これらの，ボックスの名前，入力コネクタ又\nは出力コネクタは，ボックスの構成要素である。入力コネクタ又は出力コネクタに\nは，複数の種類があるが，「ｏｎＳｔａｒｔ」と呼ばれる入力コネクタは，ここに\nシグナルが送られると，ボックスが開始状態になることを意味するコネクタであり\n（以下，この入力コネクタを「ｏｎＳｔａｒｔコネクタ」という。），「ｏｎＳｔ\nｏｐｐｅｄ」と呼ばれる出力コネクタは，ここからシグナルが送られた場合，ボッ\nクスが停止したことを意味するコネクタである（以下，この出力コネクタを「ｏｎ\nＳｔｏｐｐｅｄコネクタ」という。）。\n(ｲ)  本件ロボットに「こんにちは」を意味する単語をしゃべらせる振る舞いを\n構築した際に作成されたｂｅｈａｖｉｏｒ．ｘａｒが本件ｂｅｈａｖｉｏｒ．ｘａ\nｒであり，この内容をフローダイアグラムとして示したものが別紙６フローダイア\nグラム目録記載の図１ないし図３（以下，「別紙６の図１」などという。）である。\n別紙６の図１及び図２に示された行番号やコネクタの説明は，本件ｂｅｈａｖｉｏ\nｒ．ｘａｒの行番号ないしボックスの名前を「Ｓａｙ」とするボックス（以下，\n個々のボックスについて，ボックスの名前を付して「Ｓａｙボックス」などとい\nう。）のｏｎＳｔａｒｔコネクタ及びｏｎＳｔｏｐｐｅｄコネクタを示している。\n本件ｂｅｈａｖｉｏｒ．ｘａｒで記述されるＳａｙボックスは，別紙６の図１の\nとおり位置付けられているところ，ＳａｙボックスのｏｎＳｔａｒｔコネクタより\n後のフローダイアグラムは，別紙６の図２のとおりであり，リードで接続される順\nに，①ＳａｙボックスのｏｎＳｔａｒｔコネクタ，②Ｌｏｃａｌｉｚｅｄ  Ｔｅｘ\nｔボックス，③Ｓａｙ  Ｔｅｘｔボックス，④ＳａｙボックスのｏｎＳｔｏｐｐｅ\nｄコネクタとなっている。\nウ  検討\nそこで，被告プログラムが「木構造」を有するか，すなわち，被告プログラムを\n使用して表示されるフローダイアグラムの親子関係が示されている部分が「木構\n造」であるかについて検討する。\n原告は，前記イ(ｲ)の①から④までのＳａｙボックスの接続関係について，木構\n造，すなわち階層リードで接続され，ノードの親子関係が示されている部分である\nと主張するのでこれをみると，前記イ(ｲ)のとおり，Ｓａｙボックスについて，Ｓ\nａｙボックスのｏｎＳｔａｒｔコネクタから出発して，ＳａｙボックスのｏｎＳｔ\nｏｐｐｅｄコネクタに接続されているのであり，ＳａｙボックスのｏｎＳｔａｒｔ\nコネクタ及びｏｎＳｔｏｐｐｅｄコネクタは，いずれも，Ｓａｙボックスの構成要\n素である以上，Ｓａｙボックスのフローダイアグラムにおけるボックスの接続関係\nは，Ｓａｙボックスから出発してＳａｙボックスに戻る閉路として表示されている\nことになり，木構造であるとはいえない。\nその他，階層リードで接続され，ノードの親子関係が示されている部分が全て木\n構造であることを認めるに足りる証拠もない。\nそうであれば，被告プログラムは，「木構造」を有しているとはいえず，したが\nって，「木構造表示ステップ」（構成要件Ｇ）を充足しないというべきである。\nエ(ｱ)  この点，原告は，「木構造」の意義について，ノード（点）とエッジ\n（線）から構成される図として表示されるものであって，閉路を含まない概念であ\nるとした上で，前記イ(ｲ)でみたＳａｙボックスの構成は，閉路ではないと主張す\nる。すなわち，被告プログラムのＳａｙボックスのフローダイアグラムにおいて，\n③Ｓａｙ  Ｔｅｘｔボックスの出力コネクタから①Ｓａｙボックスの入力コネクタ\nに直接リードが接続されている場合には，ＳａｙボックスからＳａｙボックスに戻\nる閉路であるといえるが，③Ｓａｙ  Ｔｅｘｔボックスの出力コネクタは，④Ｓａ\nｙボックスの出力コネクタに接続されており，①Ｓａｙボックスの入力コネクタと\n④Ｓａｙボックスの出力コネクタは異なるものとして表示されているのであるから\n閉路ではない旨主張する。\nしかしながら，「木構造」はコネクタの接続関係ではなく，ノード間の接続関係\nを表示するものであり，被告プログラムにおいて，それはボックス間の接続関係を\n表示するものであるところ，別紙６の図２は，別紙６の図１に表示されたフローダ\nイアグラムのうち，Ｓａｙボックスの構成要素を表示した図であって，前記認定の\nとおり，ＳａｙボックスのｏｎＳｔａｒｔコネクタとＳａｙボックスのｏｎＳｔｏ\nｐｐｅｄコネクタはいずれもＳａｙボックスの構成要素であるから，Ｓａｙボック\nスのｏｎＳｔａｒｔコネクタとＳａｙボックスのｏｎＳｔｏｐｐｅｄコネクタの表\n示位置が離れているとしても，Ｓａｙボックスから出発してＳａｙボックスへ戻る\n接続関係がないとみることはできない。よって，原告の上記主張はその前提を欠き，\n採用することができない。\n(ｲ)  また，原告は，出力コネクタであるｏｎＳｔｏｐｐｅｄは，ボックスの動\n作が終了したことを示すにすぎず，Ｓａｙ  ＴｅｘｔボックスのｏｎＳｔｏｐｐｅ\nｄコネクタから出力されたデータは，Ｓａｙボックスを経由して流れることはない\nから，Ｓａｙボックスのフローダイアグラムは，データの流れの観点からみても閉\n路ではない旨主張する。しかしながら，証拠（乙３０，３１）及び弁論の全趣旨に\nよれば，Ｓａｙ  ＴｅｘｔボックスのｏｎＳｔｏｐｐｅｄコネクタから出力された\nデータは，Ｓａｙボックスを経由していることが認められるから，原告の主張はそ\nの前提を欠き，採用できない。\nオ  小括\n以上のとおり，被告プログラムは，「木構造表示ステップ」（構成要件Ｇ）を充\n足しない。\n⑵  争点１－４（被告プログラムは，「自ノード変数データ，前記上位ノード変\n数データ及び前記スクリプトを表示するノードデータテーブル表示ステップ」（構\n成要件Ｇ）を充足するか）について\nア  「ノードデータテーブル表示ステップ」及び「ノード変数データ」の意義に\nついて\nまず，「ノードデータテーブル表示ステップ」の意義について検討すると，「テ\nーブル」は，表，一覧表を意味するところ，本件明細書等（【００４６】，【００\n５５】，【００５７】，【００６５】，【００６６】，【図６】，【図１０】）に\nおいて，「ノードデータテーブル」に相当するデザインテーブルは，自ノード変数\nデータ及び全ての直系上位ノード変数データを表示する領域（【図６】における公\n開変数表示領域）と，代入用スクリプトを表示する領域を含む一覧表になっており，\n「図６に示した状態で，表示された木構造及びノードデータの編集が可能であり」\n（【００５４】），「ノードデータとして１まとまりになっている」（【００５\n５】）と記載されていることにも照らせば，「ノードデータテーブル」とは，「ノ\nードデータ」の一覧表であり，上位ノード変数データ，自ノード変数データ及び代\n入用スクリプトを同時に表示するものと解するのが一般的かつ自然である。\n次に，ノードデータテーブルが表示する「ノード変数データ」の意義について検\n討すると，本件明細書等には，「変数の値（「変数データ」と記述する場合もあ\nる。）」（【００３１】），「ノードの直系上位ノードの公開変数の値である上位\nノード変数データ」（【００３２】）と記載されており，これと異なる解釈を導く\nような説明がされていることは認められないから，「ノード変数データ」は，変数\nの値を意味すると解するのが自然かつ合理的である。\nイ  この点，原告は，「テーブル」の意義について，本件明細書等に「デザイン\nテーブル２０は，ツリービューア１０に表示されたノードのうちの選択されたノー\nドが有する情報を表示する領域であり」（【００４６】）と記載されているから，\n「テーブル」（構成要件Ｇ）は，情報を表示する領域を意味すると主張する。しか\nしながら，この記載はデザインテーブルの性質を説明するものにすぎず，「テーブ\nル」の意義を一般的意味より広く解釈すべきことを示唆する記載とみることはでき\nないから，原告の同主張は採用することができない。\nまた，原告は，「ノード変数データ」の意義について，本件特許の請求項１及び\n請求項９並びに本件明細書等の記載（【０００８】【００１７】）には，「前記自\nノード変数データの値」という文言があり，「変数データ」は，「変数データの\n値」と区別して用いられているから，「ノードデータテーブル表示ステップ」にお\nいて，変数の値を表示することは必要ではなく，また，上位ノード変数データと自\nノード変数データとを同時に表示することも必要ではないと主張するが，同主張は，\n前記認定に照らして採用することができない。\nウ  被告プログラム\n(ｱ)  被告プログラムの構成ｇ\nまず，原告は，被告プログラムのフローダイアグラム画面上のインスペクタに表\n示された入力コネクタの名称が「上位ノード変数データ」に当たると主張している\nところ，入力コネクタの名称は変数の値ではないから，「上位ノード変数データ」\nに当たると認めることはできない。よって，被告プログラムは，「上位ノード変数\nデータ」「を表示するノードデータテーブル表示ステップ」を充足しない。\n(ｲ)  被告プログラムの構成ｇ’\nまた，原告は，被告プログラムのＳａｙ  Ｔｅｘｔボックスのスクリプトエディ\nタにおいて親からの変数の取得機能を使う場合，上位ノードであるＳａｙボックス\nの変数のうち利用可能なものを一覧表示させることができる機能があるから，被告\nプログラムは，「上位ノード変数データ」「を表示するノードデータテーブル表示\nステップ」を充足すると主張する。\nこの点，Ｓａｙ  Ｔｅｘｔボックスにおいて親からの承継を選択した場合，別紙\n３－１被告プログラム説明書図１９のとおり，インスペクタ上に，Ｓａｙ  Ｔｅｘ\nｔボックスの変数Ｓｐｅｅｄ（％）の値が表示されるが，これはＳａｙ  Ｔｅｘｔ\nボックスにおいて表示されるものであるから自ノード変数を表示しているものと認\nめられ，「上位ノード変数データ」を表示しているとみることはできない。よって，\n被告プログラムは，一覧表として「自ノード変数データ」及び「上位ノード変数デ\nータ」を同時に表示しているということはできない。\nさらに，原告は，別紙６の図３のように，上位ノード変数と代入用スクリプトを\n同時に表示することができる旨主張するが，同図の表示形態を一覧表とみることは\nできない上，同図では，上位ノードの名称が表示されているにとどまり，上位ノー\nド変数の値が表示されていると認めることはできないから，「ノード変数データ」\nを一覧表として表示しているということはできず，原告の同主張は採用することが\nできない。\n加えて，本件全証拠によっても，ｂｅｈａｖｉｏｒ．ｘａｒ内に，親からの承継\nの機能に関して，自ノード変数データ及び上位ノード変数データを利用した演算を\n行って自ノード変数データの値を求める「代入用スクリプト」があると認めるに足\nりる証拠はないから，被告プログラムは，「前記スクリプトを表示するノードデー\nタテーブル表示ステップ」を充足すると認めることはできない。\nエ  以上のとおり，被告プログラムは，「自ノード変数データ，前記上位ノード\n変数データ及び前記スクリプトを表示するノードデータテーブル表示ステップ」\n（構成要件Ｇ）を充足しない。\n⑶  小括\nしたがって，その余の点について判断するまでもなく，被告プログラムは本件発\n明の技術的範囲に属すると認めることはできない。\n３  結論\n以上によれば，その余の争点につき検討するまでもなく，原告の請求には理由が\nないから，これを棄却することとして，主文のとおり判決する。\n東京地方裁判所民事第２９部\n裁判長裁判官\n山 田 真 紀\n裁判官\n伊 藤 清 隆\n裁判官\n棚 橋 知 子\n別紙一覧\n別紙１  当事者目録\n別紙２  特許公報  省略（４２～５９頁）\n別紙３－１  被告プログラム説明書\n図１～２６  別添（７５～１０４頁）\n別紙３－２  ｂｅｈａｖｉｏｒ．ｘａｒの内容  別添（１０５～１０９頁）\n別紙４  被告プログラムの構成（原告）\n別紙５  被告プログラムの構成（被告）\n別紙６  フローダイアグラム目録  別添（１１４～１１６頁）\n（別紙１）\n当事者目録\n原 告      株式会社パッセルインテグレーション\n同 訴訟代理人弁護 士      中   村   隆   夫\n同       加   藤   伸   樹\n同       我   妻   崇   明\n被 告      ソフトバンクロボティクス株式会 社\n同 訴訟代理人弁護 士      鮫    島    正    洋\n同       和    田    祐    造\n同       森    下           梓\n"
}
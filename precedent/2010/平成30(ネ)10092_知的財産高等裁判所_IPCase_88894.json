{
  "trial_type": "IPCase",
  "date": {
    "era": "Reiwa",
    "year": 1,
    "month": 8,
    "day": 21
  },
  "case_number": "平成30(ネ)10092",
  "case_name": "不正競争行為差止等請求控訴事件",
  "court_name": "知的財産高等裁判所",
  "right_type": "不正競争",
  "lawsuit_type": "民事訴訟",
  "lawsuit_id": "88894",
  "detail_page_link": "https://www.courts.go.jp/app/hanrei_jp/detail7?id=88894",
  "full_pdf_link": "https://www.courts.go.jp/app/files/hanrei_jp/894/088894_hanrei.pdf",
  "contents": "令和元年８月２１日判決言渡\n平成３０年（ネ）第１００９２号  不正競争行為差止等請求控訴事件\n（原審・東京地方裁判所平成２７年（ワ）第１６４２３号）\n口頭弁論終結日  令和元年５月２９日\n判     決\n控訴人 兼被控訴 人    株 式 会 社 カ ン バ ス\n（以下「一審原告」という。）\n同訴訟代理人弁護士    安    國    忠    彦\n朝      吹    英    太\n被控訴人 兼控訴 人      株 式 会 社 フ ェ イ ス\n（以下「一審被告フェイス」という。）\n被控訴人兼控訴 人      Ｙ\n（以下「一審被告Ｙ」という。）\n上記両名訴訟代理人弁護士\n永    井    健    三\n村    尾    治    亮\n新    間    祐  一  郎\n関    谷    健  太  朗\n千    葉    健  太  郎\n開    沼    卓    也\n主        文\n１  一審被告らの控訴に基づき，原判決中一審被告らの敗訴部分を\n取り消す。\n一審原告の請求をいずれも棄却する。\n２  一審原告の本件控訴を棄却する。\n３  訴訟費用は，第１，２審とも一審原告の負担とする。\n事実及び理由\n第１  控訴の趣旨\n１  一審原告の控訴の趣旨\n(1)  原判決を以下のとおり変更する。\n(2)  一審被告らは，原判決別紙物件目録１記載のソフトウェアを生産し，使用し，\n譲渡し（電気通信回線を通じた提供を含む。），貸し渡し，又はその譲渡若しくは貸\n渡しの申出（譲渡又は貸渡しのための展示を含む。）をしてはならない。\n(3)  一審被告らは，その占有にかかる原判決別紙物件目録１記載のソフトウェ\nアのプログラムを収納したフロッピーディスク，ＣＤ－ＲＯＭ，ハードディスク等\nの記憶媒体を廃棄せよ。\n(4)  一審被告らは，原判決別紙物件目録２－１記載の各ソースコードを使用し\nてはならない。\n(5)  一審被告らは，原判決別紙物件目録２－１記載の各ソースコードを記録し\nたフロッピーディスク，ＣＤ－ＲＯＭ，ハードディスク等の記憶媒体を廃棄せよ。\n(6)  一審被告らは，自ら又は第三者をして，一審被告らが製造，譲渡する製品に\nＴｅｍｐｌａｔｅ．ｍｄｂ形式の字幕データのインポート機能若しくはエクスポー\nト機能を実装し，又は実装せしめてはならない。\n(7)  一審被告らは，一審原告に対し，連帯して３０００万円及びこれに対する一\n審被告フェイスについては平成２７年６月１９日から，一審被告Ｙについては同月\n２０日から，各支払済みまで年５分の割合による金員を支払え。\n(8)  訴訟費用は，第１，２審とも一審被告らの負担とする。\n(9)  この判決は，第７項に限り，仮に執行することができる。\n２  一審被告らの控訴の趣旨\n主文第１項，第３項と同旨。\n第２  事案の概要\n１  本件は，一審原告が，(1)一審被告Ｙが，一審原告の営業秘密である，「ＳＳ\nＴＧ１」との名称の字幕制作ソフトウェア（以下「原告ソフトウェア」という。）を\n構成するプログラムのソースコード（以下「本件ソースコード」という。原判決別\n紙物件目録２－１）を，正当な権限なく一審原告から持ち出して一審被告フェイス\nに開示し，又は開発担当者として保有していた本件ソースコードを不正の利益を得\nる目的で一審被告フェイスに開示したこと，(2)一審被告フェイスが，本件ソースコ\nードの前記(1)の不正取得又は不正開示を知りながら字幕制作ソフトウェアである\n原判決別紙物件目録１記載のソフトウェア（名称は「Ｂａｂｅｌ」。以下「被告ソフ\nトウェア」という。）の制作に当たって本件ソースコードを取得又は使用したことは，\n不競法２条１項４号，５号，７号及び８号に規定する不正競争行為のいずれかに該\n当することを理由として，一審被告らに対し，不競法３条１項及び２項に基づき，\n①被告ソフトウェアの生産・使用等の差止め，②被告ソフトウェアのプログラムを\n収納した記憶媒体の廃棄，③本件ソースコードの使用の差止め，④本件ソースコー\nドの全部又は一部を記録した記憶媒体の廃棄，⑤原告ソフトウェアに含まれるファ\nイル「Ｔｅｍｐｌａｔｅ．ｍｄｂ」を利用して原告ソフトウェアとの互換性を確保\nしようとする行為の禁止を求めるとともに，⑥同法４条に基づき，損害賠償として\n３０００万円（一部請求）及び遅延損害金の支払を求める事案である。\n原判決は，本件ソースコードのうち，原判決別紙物件目録２－２記載の部分は不\n競法２条６項所定の営業秘密に該当し，一審被告Ｙがこれらの情報を一審被告フェ\nイスに開示したことは同条１項７号の不正競争行為に，一審被告フェイスがこれら\nの情報を取得し，被告ソフトウェアに用いて販売したことは同条８号の不正競争行\n為に，それぞれ該当するとして，一審被告らに対し，前記①，②の被告ソフトウェ\nアの生産・使用等の差止め及びその記録媒体の廃棄請求，同③，④のうち，本件ソ\nースコードのうちの原判決別紙物件目録２－２記載の部分の使用の差止め及びその\n記録媒体の廃棄請求，同⑥のうち，１９８万９１６８円及びこれに対する一審被告\nフェイスについては平成２７年６月１９日から，一審被告Ｙについては同月２０日\nから，各支払済みまで年５分の割合による遅延損害金の支払の限度で損害賠償請求\nを認容し，一審原告のその余の請求を棄却した。\n一審原告及び一審被告らは，いずれも，原判決を不服として，控訴を提起した。\n２  前提事実（争いがない事実及び後掲証拠によって容易に認められる事実）\n(1)  当事者等\nア  一審原告は，平成１０年１２月１５日に設立されたコンピュータソフトウェ\nアの開発，映画及びテレビ番組等の字幕制作等を目的とする株式会社である（甲１）。\nイ  一審被告フェイスは，平成２２年２月１日に設立されたコンピュータソフト\nウェアの開発等，映画及びテレビ番組等の字幕制作，放送用関連技術及び映像制作\nに関する教室の経営等を目的とする株式会社である（争いがない）。\nウ  一審被告Ｙは，原告ソフトウェアの開発，制作に携わった者の一人で，一審\n原告外部の技術者としてその開発，制作に携わり，その後，一審被告フェイスから\n委託を受け，被告ソフトウェアの実際の開発，制作を担当した（甲３７，８１の１・\n２，弁論の全趣旨）。\n(2)  原告ソフトウェアの開発等\n一審原告は，平成１４年４月３０日，米国のソフトレード社から字幕制作ソフト\nウェア「ＳＳＴ」（以下「旧ＳＳＴ」という。）について日本国内における独占的な\n改変，複製，利用，販売等のライセンスを受けた（甲４の１・２）。\n一審原告代表者は，平成１６年４月１４日，ソフトレード社から旧ＳＳＴの著作\n権を買い受け（甲５），一審原告に対し，旧ＳＳＴの改良を許諾した（甲６，弁論の\n全趣旨）。\n一審原告は，平成１８年１月頃までに，旧ＳＳＴを改良して原告ソフトウェアを\n開発，制作し，日本国内において販売を開始した（争いがない）。\n(3)  被告ソフトウェアの販売\n一審被告フェイスは，遅くとも，平成２５年２月１日から被告ソフトウェアの販\n売を開始した（争いがない）。\n(4)  先行訴訟\n一審原告は，平成２５年，被告ソフトウェアは一審原告の著作物であるプログラ\nム（本件ソースコード）を複製又は翻案したもので一審原告の著作権を侵害するも\nのであると主張して，一審被告フェイスに対し，被告ソフトウェアの販売等の差止\nめや損害賠償等を求める訴訟を東京地方裁判所に提起し（同庁平成２５年（ワ）第\n１８１１０号），平成２７年６月２５日，一審原告の請求を棄却する旨の判決（乙４）\nがされた。\n一審原告は，同判決を不服として控訴するとともに（当庁平成２７年（ネ）第１\n０１０２号），控訴審において被告ソフトウェアはＴｅｍｐｌａｔｅ．ｍｄｂを複製\nしていると主張してＴｅｍｐｌａｔｅ.ｍｄｂの使用等の差止請求を追加したが，平\n成２８年３月２３日，一審原告の請求をいずれも棄却すべきものとする判決（乙１\n７）がされ，同判決はその後確定した。\n３  争点\n(1)  不競法２条１項４号，５号，７号及び８号所定の不正競争行為の成否\n(2)  差止めの当否及び範囲\n(3)  損害及びその額\n第３  当事者の主張\n１  不競法２条１項４号，５号，７号及び８号所定の不正競争行為の成否につい\nて\n〔一審原告の主張〕\n(1)  本件ソースコードは，全体として，一審原告の営業秘密であるところ，原審\nで行われた鑑定（以下「本件鑑定」という。）の結果によれば，被告ソフトウェアの\nソースコードには，本件ソースコードと不自然に一致ないし類似するとされた箇所\nが４箇所ある（以下，それぞれ「類似箇所１」などと表記する。）。これらの類似箇\n所は，一審被告らが本件ソースコードを使用しなければ生じないのであるから，一\n審被告らが，本件ソースコード全体を使用したことは明らかである。\n類似箇所に係る本件ソースコードの内容は，以下のとおりである。\nア  類似箇所１について\n本件鑑定の結果によれば，類似箇所１について，被告ソフトウェアのソースコー\nドＳｏｕｒｃｅＤｅｆａｕｌｔ．ｈで宣言されている変数３０個のうち，２０の宣\n言が，型，コメント，インデントも含めて，本件ソースコードＧｌｏｂａｌＳｅｔ\nｔｉｎｇｓ．ｈのものと完全に一致し，残りの１０個のうち，５個では少なくとも\n変数の名前が一致している。一方，一審被告らは，ＳｏｕｒｃｅＤｅｆａｕｌｔ．\nｈと一対をなすＳｏｕｒｃｅＤｅｆａｕｌｔ．ｃｐｐをもって，被告ソフトウェア\nの字幕データの標準値情報としているので，標準値の定義において８３％の変数名\nが一致している。そして，一致する変数名は，本件ソースコードの様々なソースフ\nァイルに多数回現れており，類似箇所１に係るＧｌｏｂａｌＳｅｔｔｉｎｇｓ．ｈ\nで定義された変数は，本件ソースコード上において，多岐にわたる機能に影響を及\nぼし，様々な形で利用されている。\n字幕のフォーマットデータ（標準値）をどのように構成するかを設計した後に，\n当該フォーマットデータの構成要素のどのような変数名を付するか，また，設定し\nた変数をどのような型にするかについては，本件ソースコード上にしか記載がない\nのであるから，一審被告らが，本件ソースコードを使用して被告ソフトウェアのソ\nースコードを制作したことは明らかである。\nイ  類似箇所２について\n類似箇所２に係る本件ソースコードのＧｌｏｂａｌＳｅｔｔｉｎｇｓ．ｃｐｐは，\n特定のフォーマット情報を，メモリ上に，編集中のプロジェクトのフォーマット情\n報として格納する機能である。\nＧｌｏｂａｌＳｅｔｔｉｎｇｓ．ｃｐｐにおいて，フォーマットデータの構成要\n素にどのような変数名を付けるか，各変数名にどのような順番で変数を代入するか\nは，いずれも一審原告の営業秘密であるから，この点において類似する被告ソフト\nウェアのソースコードは，本件ソースコードを使用して制作したものである。\nウ  類似箇所３について\n類似箇所３に係る本件ソースコードのＧｌｏｂａｌＳｅｔｔｉｎｇｓ．ｃｐｐは，\n編集中の字幕のフォーマット情報を保存する際に，既存のフォーマットリストの中\nに，保存しようとするフォーマット情報と同一のものがないかを判断するために呼\nび出される比較処理部分である。\nＧｌｏｂａｌＳｅｔｔｉｎｇｓ．ｃｐｐにおいて，フォーマットデータの構成要\n素にどのような変数名を付けるか，各変数名にどのような順番で変数を代入するか\nは，いずれも一審原告の営業秘密であるから，この点において類似する被告ソフト\nウェアのソースコードは，本件ソースコードを使用して制作したものである。\nエ  類似箇所４について\n類似箇所４に係るＳＳＴＤＢ．ｃｐｐは，Ｔｅｍｐｌａｔｅ．ｍｄｂに字幕デー\nタをセマンティクスに従って記述，保存する機能，Ｔｅｍｐｌａｔｅ．ｍｄｂ形式\nの字幕ファイル（．ｍｄｂ）からセマンティクスに従って字幕データを解析する機\n能，Ｔｅｍｐｌａｔｅ．ｍｄｂ形式の字幕ファイル（．ｍｄｂ）をセマンティクス\nに従って原告ソフトウェアのデータメモリ領域に展開する機能を有する。そして，\nＳＳＴＤＢ．ｃｐｐは，かかる機能を実行するため，本件ソースコードから様々な\n関数や定義を呼び出している。\nＴｅｍｐｌａｔｅ．ｍｄｂは，もともと原告ソフトウェアの旧バージョンである\nＳＳＴにおけるソフトウェア部品であり，ＳＳＴにおいて生成された字幕データを\n書き出すためのｍｄｂ形式ファイルのひな型となるファイルであるが，Ｔｅｍｐｌ\nａｔｅ．ｍｄｂを開いただけの状態は，様々な文字列とデータの型にすぎず，画面\n表示からはロジックを確認することはできない。すなわち，Ｔｅｍｐｌａｔｅ．ｍ\nｄｂの公開された情報を見ても，テーブル名やフィールド名が把握できるだけであ\nり，本件ソースコードに記載された定義を参照しつつ，当該データが何を示すか，\n何を意味するかを確認，検証しない限り，利用不可能である。Ｔｅｍｐｌａｔｅ．\nｍｄｂのセマンティクスとは，Ｔｅｍｐｌａｔｅ．ｍｄｂの各フィールドの記述ロ\nジック又は解析ロジック（解析アルゴリズム）であり，本件ソースコードとＴｅｍ\nｐｌａｔｅ．ｍｄｂ自体の仕様を理解した者でなければ解読できない文字列が有機\n的一体になって，相互に関連性を有して構成されるものである。そして，一審原告\nは，かかるセマンティクスを公開しておらず，これを知る者は原告ソフトウェアの\n開発に関与した限定された範囲の者にとどまるのであるから，かかるセマンティク\nスを利用している被告ソフトウェアは，本件ソースコードを使用して制作されたも\nのである。\n(2)  一審被告らによる本件ソースコードの取得，使用について\nア  本件鑑定の結果によれば，類似箇所１ないし４について，同一人物がコーデ\nィングを行ったとしてもこれだけの一致が起こるのは不自然であり，本件ソースコ\nードを参照したと考えるのが自然であると判断されている。\nそして，本件鑑定書は，その鑑定の手法による限りにおいて，類似箇所を指摘す\nるものにすぎず，本件鑑定書を根拠としてその余の部分について，一審被告らによ\nり使用等はなかったと判断することはできない。本件ソースコードと被告ソフトウ\nェアのソースコードの類似箇所は，上記類似箇所１ないし４にとどまるものではな\nく，類似箇所の変数名などが利用されているソースコードは膨大な行に上る。\nさらに，一審被告フェイスは，Ｔｅｍｐｌａｔｅ．ｍｄｂによる業務レベルでの\n互換性をうたって被告ソフトウェアを販売しているところ，Ｔｅｍｐｌａｔｅ．ｍ\nｄｂを解析するためのセマンティクスを取得，使用しなければ，Ｔｅｍｐｌａｔｅ．\nｍｄｂを利用して原告ソフトウェアとの互換性を確保することができないのである\nから，Ｔｅｍｐｌａｔｅ．ｍｄｂにかかるセマンティクスを取得，使用しているこ\nとが明らかである。\nコードクローン専門家の意見によっても，類似箇所１ないし４は，いずれも本件\nソースコードをコピーアンドペーストして取り入れられたコードである可能性が高\nく，これ以外の部分についても，本件鑑定の結果によっては，コードの類似箇所や\n共通箇所がないと判断することはできないとされている（甲１４３）。\nイ  このほか，被告ソフトウェアには，一審被告らが被告ソフトウェアに本件ソ\nースコードを流用したことを推認させる事情が多数存在することについての一審原\n告の主張は，原判決６頁１６行目から１２頁５行目のとおりであるから，これを引\n用する。\nウ  以上の事実によれば，一審被告らが本件ソースコードを使用して被告ソフト\nウェアを制作したことは明らかである。\n(3)  一審被告らによる本件ソースコードに係る不正競争行為について\n上記(2)に加えて，字幕制作ソフトウェアの業界は原告ソフトウェアと被告ソフト\nウェアの寡占状態にあり，両者が競争関係にあること，一審被告Ｙが，原告ソフト\nウェアの開発，制作に携わっており，本件ソースコードが営業秘密であることを当\n然認識できたこと，一審被告Ｙは，一審被告フェイスの業務に集中的に従事し，一\n審被告フェイスの利益のために稼働していること等の事情を総合的に勘案すれば，\n一審被告らの行為は，不競法２条１項４号，５号，７号及び８号に規定する不正競\n争のいずれかに該当する。\n〔一審被告らの主張〕\n(1)  鑑定の結果によれば，本件ソースコードと被告ソフトウェアのソースコード\nが類似するとされたのは，類似箇所１ないし５のみであり，鑑定の対象となったソ\nースコード２万９６７９行のうちの１１８行にすぎない。非類似箇所の行数は，２\n万９５６１行であり，鑑定対象部分の９９．６％は非類似であることになる。\n本件ソースコードは１３万６０１７行であるとの原告主張を前提とすると，類似\n箇所１１８行を除く非類似箇所は１３万５８９９行となり，本件ソースコードの９\n９．９１％は被告ソフトウェアのソースコードと類似していないことになる。\nそして，以下のとおり，類似箇所１ないし４は営業秘密とはいえず，これらの類\n似は一審被告らが本件ソースコードを使用したことを意味するものではない。\nア  類似箇所１について\n(ア)  本件ソースコード及び被告ソフトウェアのソースコードにおける類似箇所\n１に係る部分は，利用者が字幕を作る際にフォントサイズなどを設定したデータを\n保持するための変数の定義部であり，変数の項目と変数の定義の仕方（型，変数名，\n注釈）からなる。\n変数とは，値を入れる「入れ物」である。変数名は入れ物の名称，型は入れ物の\n種類を示す型名であって，変数を定義（宣言）するために用いられる。注釈は，プ\nログラマーがソースコードを見たときに，その内容を把握できるように記述するも\nのである。\n(イ)  類似箇所１に係る本件ソースコードの内容\n本件ソースコードの類似箇所１に係る箇所が列挙する項目は，字幕の表示パター\nンの項目である。これらの項目は，字幕ソフトの利用者が，利用に際し確認できる\nものであり，開示情報である。\n変数の定義部分は，型，変数名，注釈で構成されるのが一般的であり，本件ソー\nスコードもかかる一般的な定義の仕方を採用したものである。\n本件ソースコードの型名の記載は，ＬＯＮＧ，ＣＳｔｒｉｎｇ，ＢＯＯＬという\nものであるが，これらは，プログラミングで使用する標準の型の名称である。本件\nソースコードでは，数値の項目をＬＯＮＧ，文字列の項目をＣＳｔｒｉｎｇ，ＢＯ\nＯＬ値の項目をＢＯＯＬとしているだけである。\n本件ソースコードの変数名も，ＦｏｎｔＮａｍｅ，ＦｏｎｔＳｉｚｅなど字幕ソ\nフトが使用する一般的な内容をごく短い英語表記にしただけの名称であり，注釈欄\nの記載も，ありふれた一般的な説明である。\nまた，字幕の基本的な設定のように，多くの項目からなる一連のデータを扱う場\n合，データクラスというまとまりとして扱う（データクラスのパブリック・メンバ\nとする）ことは，プログラムの手法として一般的である。\n以上によれば，類似箇所１に係る情報は，本件ソースコード上にしか存在しない\nものではない。\n(ウ)  被告ソフトウェアのソースコードの制作方法\n原告ソフトウェアは，一審原告の従業員ではなく，外部の技術者であった一審被\n告Ｙが，一審原告からの依頼により，ほぼ一人で制作したものである。一審被告Ｙ\nは，原告ソフトウェアの制作作業中，一審原告から，自分のパソコンを持ち込むこ\nとや自宅で作業すること，制作途中で取得した資料やデータ，ファイル等を保持す\nることを禁じられておらず，開発過程で収集した資料や付随的に作成したものなど\nは，利用できるとの認識の下，画像の描画を行う外部ライブラリの評価を目的とし\nて，独自に簡易な評価プログラムを作成した。\n一審被告Ｙは，被告ソフトウェアの開発時にも，その時点での新しいライブラリ\nを評価するために評価プログラムを作ったが，原告ソフトウェア作成時に作った上\n記評価プログラムが自分のパソコンに残っていたため，これを利用した。\n以上の次第で，本件ソースコードに利用されたのと同じ変数名・型式・注釈の変\n数が被告ソフトウェアのソースコードに存在することになり，類似箇所１に係る一\n致が生じたものであり，かかる一致は，一審被告Ｙが本件ソースコードを参照して\n生じたものではない。\nイ  類似箇所２及び３について\n類似箇所２は代入演算子のオーバーロード部分，類似箇所３は比較演算子のオー\nバーロード部分であるところ，これらの部分は入力ミスを防止するため基本的に定\n義を複製して実装する。一審被告Ｙは原告ソフトウェア開発時も被告ソフトウェア\n開発時も，類似箇所１を複製して類似箇所２，３を作成した。\nしたがって，類似箇所２，３において本件ソースコードと被告ソフトウェアのソ\nースコードが一致することは，一審被告らが本件ソースコードを使用したことを意\n味するものではない。\nウ  類似箇所４について\n(ア)  類似箇所４は，原告ソフトウェアのＳＳＴＤＢ．ｃｐｐファイル，被告ソフ\nトウェアのＭｄｂ．ｃｐｐファイルにおいて，字幕データをｍｄｂファイルとして\n保管する際に付されるフィールド名の一致である。\nフィールド名の情報は，ソフトウェア外で一般に流通するｍｄｂファイルにも記\n載され，マイクロソフトＡｃｃｅｓｓで開くことができる上，パスワードもかかっ\nていないから，誰でも見ることができる。一審被告らは，旧ＳＳＴとの互換を目的\nとして，ｍｄｂファイルを参照し，Ｍｄｂ．ｃｐｐファイルを実装したものであり，\nその結果，フィールド名の一致が生じたものである。\n鑑定の結果によれば，「フィールド名の一致」という記載があるのみで，「処理内\n容の一致」という記載はないこと，鑑定人が，類似の原因が，ｍｄｂファイルから\nフィールド名を抽出したことにある場合には，この類似をもって被告ソフトウェア\nの独自性が低いと判断することはできないと判断していること等によれば，類似箇\n所４の範囲はフィールド名に限られることは明らかである。\n(イ)  原告ソフトウェアのＴｅｍｐｌａｔｅ．ｍｄｂは，旧ＳＳＴのプロジェクト\nファイルをエクスポートするために必要なタイミング等のデータを入れておく箱で\nあり，書式にすぎない。\nこの書式の所定のフィールドにユーザーが字幕制作ソフトで作成した字幕データ\nが上書きされていき，字幕データが完成する。完成した字幕データをｍｄｂ形式で\n保存したものがｍｄｂファイルであり，同ファイルには，書式であるＴｅｍｐｌａ\nｔｅ．ｍｄｂの情報も全て記載されている。\nセマンティクスとは，データの持つ意味であるところ，Ｔｅｍｐｌａｔｅ．ｍｄ\nｂは，単なる書式であるから，そのセマンティクスは書式のデータの意味にすぎな\nい。また，ｍｄｂファイルに記載された字幕データのセマンティクスについては，\nｍｄｂファイルに記載された具体的なデータと字幕の表示画面を見ながら，互換を\n取りたい箇所に関係しそうなデータを変化させて，それが字幕表示画面にどう反映\nされるかについての相関関係を把握すれば，容易に把握することができ，本件ソー\nスコードを見る必要はない。\n(ウ)  以上によれば，被告ソフトウェアにおいて，Ｔｅｍｐｌａｔｅ．ｍｄｂを複\n製してＰｌｕｇＤｔｍ．ｄｌｌとして実装し，Ｔｅｍｐｌａｔｅ．ｍｄｂやｍｄｂ\nファイルのセマンティクスを把握できたことは，一審被告らが，本件ソースコード\nを使用したことを意味するものではない。\n(2)  一審被告らによる本件ソースコードに係る不正競争行為について\n仮に一審被告らが本件ソースコードを使用したと認定されるとしても，一審被告\nらは，本件ソースコードを一審原告から示されたものではないこと，一審被告Ｙに\nは，図利加害目的はないこと，一審被告フェイスに重過失はないことから，一審被\n告らによる本件ソースコードの使用について不正競争行為を認定する余地はない。\n２  差止めの当否及び範囲について\n〔一審原告の主張〕\n(1)  被告ソフトウェアには本件ソースコードが組み込まれており，被告ソフトウ\nェアは一審原告の営業秘密の侵害品であるから，当該侵害品のバージョンアップさ\nれたソフトウェアもまた，侵害品であることは当然である。\n(2)  一審被告らの不正競争行為が明らかである以上，これを差し止めることがで\nきるのは当然であり，差止請求が権利濫用となるものではない。\n〔一審被告らの主張〕\n(1)  原判決で使用等が禁止されたソースコードは同判決別紙物件目録２－２記\n載のソースコード（原判決別紙資料１ないし３のソースコード）だけであり（原判\n決主文３項，４項），それ以外の被告ソフトウェアのソースコードについては使用等\nを禁じられていない。\nしかし，原判決主文第１項は，「被告株式会社フェイスが制作，販売する字幕ソフ\nトウェア『Ｂａｂｅｌ』（ただし，バージョンアップを含む。）」の生産等を禁じてお\nり，原判決別紙資料１ないし３のソースコードを使用しない被告ソフトウェアも，\nバージョンアップ版として，その生産等を禁じられることになる。これは，判決理\n由中において，類似箇所１ないし４以外の被告ソフトウェアについては，利用が妨\nげられないことと矛盾し，過大である。\n(2)  被告ソフトウェアのソースコードは，そのごくわずかな部分について，プロ\nグラムのロジックとも関わりがない変数名，型，注釈に関する記述において，本件\nソースコードと一致しているにすぎないから，被告ソフトウェアの生産，使用，譲\n渡等の差止めを求めるのは，権利濫用に当たる。\n３  損害及びその額について\n以下のとおり，当審における主張を付加するほか，当事者双方の主張は，原判決\n２４頁１６行目から２６頁５行目のとおりであるから，これを引用する。\n〔一審原告の主張〕\n原判決は，一審原告の損害額を認定するにあたって，スクール版の譲渡数量を１\n８９個と認定しているが，正しくは６９９個であるから，損害額は，３７７８万３\n３６０円ではなく，４２８４万２５６０円である。\nまた，原判決は，不競法５条１項は法律上の事実推定規定ではないにもかかわら\nず，推定覆滅事由を認定しており，法令違反の誤謬がある。\n仮に，同条１項ただし書に基づく事情の認定としても，９５パーセントもの過大\nな推定覆滅は，明らかな事実誤認である。\n被告ソフトウェアの開発は，本件ソースコードの使用という不正競争行為によっ\nて，開発原価が著しく抑えられ，販売価格を廉価に設定することが可能となり，し\nかも，極めて短期間に被告ソフトウェアを上市させ，その結果，営業活動に優位性\nが生じたのであるから，不正競争行為後の改変行為や営業活動を過度に斟酌し，過\n大な推定覆滅を認定することは，不当に不正競争行為者を保護する結果を生じさせ\nるものである。\n〔一審被告らの主張〕\n一審被告フェイスは，被告ソフトウェアを，ドングル版，オンライン版，スクー\nル版，Ｗｅｂ講座用として提供していたが，譲渡しているのは，ドングル版とスク\nール版のうちの６割であるから，不競法５条１項本文が適用されるのは，ドングル\n版とスクール版のうちの６割のみである。なお，オンライン版，スクール版のうち\nの４割，Ｗｅｂ講座用について，同条２項の適用を検討する場合，一審被告フェイ\nスはこれらの提供により利益を得ていないから，損害額は０円である。\n類似箇所１ないし３は，変数名，型，注釈にすぎず，プログラムのロジックとは\n全く関係がないから，これにより原告ソフトウェアを販売することができなくなる\nということはあり得ず，不競法５条１項による推定は１００％覆され，一審被告ら\nは損害賠償債務を負わない。\nまた，他に競合品が存在すること，被告ソフトウェアの販売は一審被告フェイス\nの企業努力によること，被告ソフトウェアが原告ソフトウェアより機能的に優れて\nいること，市場が競合していないことによれば，侵害行為と被侵害者の製品の販売\n減少との間に相当因果関係は認められず，同条１項ただし書の「販売することがで\nきないとする事情」が存在するから，一審原告は，同条 1 項の譲渡数量の全部につ\nいて販売することはできなかったものであり，損害額は０円である。\n第４  当裁判所の判断\n当裁判所は，原判決とは異なり，一審原告の請求はいずれも理由がないものと判\n断する。その理由は，以下のとおりである。\n１  認定事実\n前記前提事実に後掲の各証拠及び弁論の全趣旨を総合すると，以下の事実が認め\nられ，これを覆すに足りる証拠はない。\n(1)  原告ソフトウェアについて\nア  原告ソフトウェアは，映像字幕データを作成するソフトアプリケーションで\nある。\nその操作画面は，映像を確認しながら作業が可能となるビデオウィンドウ，音声\nを波形で表示する音声波形ウィンドウ，ハコ割りした原文を表示する原文ウィンド\nウ，字幕をワープロ感覚で入力するテキスト入力ウィンドウ，タイムコードウィン\nドウから構成され，基本編集機能として，字幕テキストの入力・削除，２トラック\n（二重表示），スポッティング機能，ルビ・イタリック・傍点・組文字等の設定，コ\nメント機能・ブックマークの設定，ショートカットの設定，字幕の分割・結合，レ\nンダリング機能（仮ミックス用）を，オプションによる高等編集機能として，フォ\nント・エッジの種類・サイズ・カラーの設定，カーニング・レディングの調整，文\n字の自由位置，フェードイン・フェードアウト，マスクを，それぞれ有し，データ\nコンバート機能として，ＳＳＴプロジェクト（．ｍｄｂ／．ｓｄｂ）のデータイン\nポート，及びＳＳＴプロジェクト（旧バージョン）（．ｍｄｂ）のデータエクポート\nを標準機能で行うことができる。\n原告ソフトウェアによる字幕制作は，①映像の読み込み（あらかじめｍｐｇ１又\nはｗｍｖデータに変換した映像を原告ソフトウェアに読み込む），②スポッティン\nグ（字幕を表示するタイミングを画面で確認し，音声波形を選択する），③字幕文字\nの入力（テキストウィンドウに文字を入力し，Ｅｎｔｅｒキーを押すと画面上に字\n幕が表示される），④字幕のプレビュー（映像を再生しながら字幕表示を見て確認す\nる），⑤効果の設定（ルビ・イタリック・傍点・組文字などの効果をボタン１つで設\n定する），⑥文字位置・カラーなどの変更（画面を見ながら文字の色や位置の変更作\n業ができる），⑦レンダリング機能（映像に字幕を合成して仮ミックス映像を作成で\nきる），⑧エクスポート機能（目的のフォーマットにデータをエクスポートできる）\nの手順により行うものである（甲７）。\nイ  原告ソフトウェアに含まれるファイルＴｅｍｐｌａｔｅ．ｍｄｂは，マイク\nロソフトＡｃｃｅｓｓのｍｄｂ形式のテンプレートであり，ＳＳＴが編集・保存す\nるデータを定義し，体系的なテーブル構成を持ったファイルである。Ｔｅｍｐｌａ\nｔｅ．ｍｄｂには，エントリーテーブルとして，Ｇｌｏｂａｌｓテーブル，Ｍｐｅ\nｇＥｄｉｔｓテーブル，Ｐｒｏｐｅｒｔｉｅｓテーブル，ＳｃｒｉｐｔＣｕｒｒｅ\nｎｔテーブル，ＳｃｒｉｐｔＯｒｉｇｉｎａｌテーブル，Ｔｉｍｅｃｏｄｅｓテー\nブル，Ｔｒａｃｋ１テーブル，Ｔｒａｃｋ２テーブルが存在し，それらの中に１４\n７個のデータ項目が設定されている（甲５０）。\nＧｌｏｂａｌｓテーブルには，ＳＳＴデータファイル全体の設定情報が，Ｍｐｅ\nｇＥｄｉｔｓテーブルには，映像ファイルの使い方を示す情報が，Ｐｒｏｐｅｒｔ\nｉｅｓテーブルには，作業上重要な情報が，ＳｃｒｉｐｔＣｕｒｒｅｎｔテーブル\nには，編集された台本情報が，ＳｃｒｉｐｔＯｒｉｇｉｎａｌテーブルには，イン\nポートされた台本情報が，Ｔｉｍｅｃｏｄｅｓテーブルには，タイムコード関連の\n情報等が，Ｔｒａｃｋ１テーブルには，Ａトラックの，Ｔｒａｃｋ２テーブルには，\nＢトラックの字幕情報が，それぞれ保存格納される（甲４８）。\nＴｅｍｐｌａｔｅ．ｍｄｂは，もともと，旧ＳＳＴにおいて生成された字幕デー\nタを書き出すためのｍｄｂ形式のファイル（ｍｄｂファイル）を作成するためのひ\nな型となるファイルである。原告ソフトウェアで編集される字幕データ（プロジェ\nクト）は，ｓｄｂ形式で保存されるが，ｍｄｂ形式で保存されている旧ＳＳＴのデ\nータとの互換性を確保するために，Ｔｅｍｐｌａｔｅ．ｍｄｂを利用している。ｓ\nｄｂ形式は，Ｔｅｍｐｌａｔｅ．ｍｄｂの設計構造を受け継いで設計されているた\nめ，原告ソフトウェアにおいてｓｄｂ形式の字幕データを入出力するためのプログ\nラムは，旧ＳＳＴにおいてｍｄｂ形式にデータを入出力するプログラムと共通性を\n有しており，双方のデータ形式を入出力するプログラムは共用される構造となって\nいる（甲４８，４９）。\n原告ソフトウェアからｍｄｂファイルを作成するには，原告ソフトウェアの字幕\n情報（ｓｄｂの情報）をテンポラリーファイルとして開いたＴｅｍｐｌａｔｅ．ｍ\nｄｂに入れ込み，エクスポートする際にＴｅｍｐｌａｔｅ．ｍｄｂに「名前を付け\nて保存」するとの手順による。旧ＳＳＴや原告ソフトウェアのエクスポート機能は，\n１４７のデータ項目を有するｍｄｂファイルから，必要な項目のみを取捨選択し，\n任意の字幕フォーマットに合わせて変換出力することができる（甲７，５０，９２）。\nＳＳＴＤＢ．ｃｐｐファイルは，プロジェクトをｍｄｂ形式でインポート・エク\nスポートするプログラムであり，Ｔｅｍｐｌａｔｅ．ｍｄｂファイルに，字幕デー\nタを記述及び保存する機能，Ｔｅｍｐｌａｔｅ．ｍｄｂ形式の字幕ファイルから字\n幕データを解析する機能，Ｔｅｍｐｌａｔｅ．ｍｄｂ形式の字幕データを原告ソフ\nトウェアのデータメモリ領域に展開する機能を有する（甲７５，７６の１，１００，\n１０４，弁論の全趣旨）。\n(2)  被告ソフトウェアについて\nア  被告ソフトウェアは，映画，ＤＶＤ，Ｂｌｕ－ｒａｙのオープンキャプショ\nン用字幕を作成するソフトウェアであり，プレビューウィンドウ，字幕テキストウ\nィンドウ，音声波形ウィンドウを有する（甲１２，乙１９）。\n被告ソフトウェアは，①アイコン表示で操作が簡単，スピーディ，②音声波形上\nに字幕が表示され，チェックが簡単，③多彩な編集機能を搭載，④スポッティング\nを残した状態で，字幕の一括削除が可能，⑤ショートカットキー設定が自由にでき\n作業効率アップ，という特徴を有する（甲１２）。\n基本編集機能として，スポッティング機能，字幕テキストの作成，制限文字数の\n表示，２トラック表示，字幕の分割・結合，ショートカットキー設定，タイムシフ\nト機能，ルビ・イタリック・傍点・組文字・表示位置変更，フェードイン・フェー\nドアウト，自由位置・サイズ・カラーの設定・マスク・個別カーニング・レディン\nグ，見直し用リストなどを有し，他社字幕ソフトとデータ互換性があり，ＭＤＢフ\nァイル（．ｍｄｂ）のインポート，エクスポート機能を有する（甲１２，９４，１\n３０，１３１）。\nイ  被告ソフトウェアにおいては，編集される字幕データ（プロジェクト）は，\nｐｊｄ形式で保存されるが（甲１３８），旧ＳＳＴのデータをエクスポートするため\nに，ＰｌｕｇＤｔｍ．ｄｌｌを使用している（甲１６）。ＰｌｕｇＤｔｍ．ｄｌｌフ\nァイルは，一審被告らにおいて，Ｔｅｍｐｌａｔｅ．ｍｄｂを複製して作成したも\nのである（争いがない）。\n被告ソフトウェアのＭｄｂ．ｃｐｐファイルは，プロジェクトをｍｄｂ形式でイ\nンポート・エクスポートするプログラムであり，旧ＳＳＴや原告ソフトウェアでエ\nクスポートされたｍｄｂ形式のプロジェクトを被告ソフトウェアのデータとしてイ\nンポートする機能，被告ソフトウェアで作成されたプロジェクトを，ＰｌｕｇＤｔ\nｍ．ｄｌｌを使用して，ｍｄｂ形式でエクスポートする機能を有する（甲１２）。\n(3)  本件鑑定書によれば，鑑定人Ａによる鑑定の結果として，以下の事実が記載\nされている。\nア  本件鑑定の手法\n本件鑑定においては，本件ソースコードの６１０個のソースファイルのうち１１\n４個のソースファイルが鑑定の対象とされた。１つ又は複数の本件ソースコードに\n対して複数の被告ソフトウェアのソースコードを比較するべき場合があることから，\n３００組のソースコードの組合せが鑑定対象とされた。\n８種類のコードクローン（ソースコード中に存在する互いに一致又は類似したコ\nード断片）を検出する技術により，類似度が判定された。その概要は，ソースコー\nド中の識別子やリテラル，コメントの一致度合いをオーバーラップ係数やコサイン\n係数で測定し，ソースコードの構造の類似性をＳｍｉｔｈ－Ｗａｔｅｒｍａｎアル\nゴリズムで測定するというものである。\nその結果，本件ソースコードと被告ソフトウェアのソースコードが完全に一致す\nる箇所が存在し，その理由として一審被告らが一審原告のソースコードをコピー又\nは参照してコーディングしたことが疑われる場合（基準ａ）による類似箇所は見つ\nからなかったが，本件ソースコードと被告ソフトウェアのソースコードが不自然に\n類似・共通する箇所が存在し，その理由として一審被告らが一審原告のソースコー\nドをコピー又は参照してコーディングしたことが疑われる場合（基準ｂ）による類\n似箇所が４箇所（類似箇所１ないし４），本件ソースコードと被告ソフトウェアのソ\nースコードに類似性・共通性が見られるが，その理由が不自然とまではいえず，一\n審被告らが一審原告のソースコードをコピー又は参照したことを疑うのは無理があ\nる場合（基準ｃ）による類似箇所が１箇所（類似箇所５），それぞれ見つかり，他に\n類似・共通すると認定できる箇所は見つからなかった。\nイ  類似箇所１ないし４について\n(ア)  類似箇所１\n類似箇所１は，原判決別紙ａのとおりである。\n被告ソフトウェアでは，字幕データの標準値を，ＳｏｕｒｃｅＤｅｆａｕｌｔ．\nｈのＣＳｏｕｒｃｅＤｅｆａｕｌｔクラスのパブリック・メンバ変数に，原告ソフ\nトウェアでは字幕データの標準値を，ＧｌｏｂａｌＳｅｔｔｉｎｇｓ．ｈのＣＧｌ\nｏｂａｌＳｅｔｔｉｎｇｓクラスのパブリック・メンバ変数に，それぞれ格納して\nおり，両者のソースコードの主な役割は，字幕データの標準値を格納する変数を宣\n言することである。\n被告ソフトウェアのソースコードで宣言されている変数３０個のうち，２０個の\n宣言が型，コメント，インデントも含めて本件ソースコードのものと完全に一致し，\n５個で少なくとも変数の名前が本件ソースコードのものと一致した。\n(イ)  類似箇所２\n類似箇所２は，原判決別紙ｂのとおりである。\n被告ソフトウェアのソースコードＳｏｕｒｃｅＤｅｆａｕｌｔ．ｃｐｐが実装す\nるＣＳｏｕｒｃｅＤｅｆａｕｌｔクラスの代入演算子のオーバーロードで参照され\nる３０個の変数のうち，２１個の変数について，本件ソースコードＧｌｏｂａｌＳ\nｅｔｔｉｎｇｓ．ｃｐｐが実装するＣＧｌｏｂａｌＳｅｔｔｉｎｇｓクラスの代入\n演算子のオーバーロードと変数名と注釈の一致が見られた。\n(ウ)  類似箇所３\n類似箇所３は，原判決別紙ｃのとおりである。\n被告ソフトウェアのソースコードＳｏｕｒｃｅＤｅｆａｕｌｔ．ｃｐｐが実装す\nるＣＳｏｕｒｃｅＤｅｆａｕｌｔクラスの比較演算子のオーバーロードで参照され\nる２９個の変数のうち，２０個の変数について，本件ソースコードＧｌｏｂａｌＳ\nｅｔｔｉｎｇｓ．ｃｐｐが実装するＣＧｌｏｂａｌＳｅｔｔｉｎｇｓクラスの比較\n演算子のオーバーロードと変数名と注釈の一致が見られた。\n(エ)  類似箇所４\n類似箇所４は，原判決別紙ｄのとおりである。\n原告ソフトウェア，被告ソフトウェアの双方とも，字幕データの標準値をｍｄｂ\n形式のデータベースに保管するために，ＡｃｔｉｖｅＸ  Ｄａｔａ  Ｏｂｊｅｃｔ\nｓ（ＡＤＯ）を利用している。ＡＤＯでデータの読み書きを行う際は，Ｒｅｃｏｒ\nｄｓｅｔと呼ばれるオブジェクトを経由する。Ｒｅｃｏｒｄｓｅｔは，レコード（行）\nとフィールド（列）で構成される表に似たオブジェクトであり，フィールド名を指\n定してレコードの読み書きを行う。\n被告ソフトウェアのデータベースで用いられている５２件のフィールド名は，全\nて原告ソフトウェアで用いられている６３件のフィールド名に包含される。\nウ  類似箇所１ないし４の独自性について\n(ア)  類似箇所１について\nａ  本件ソースコードと被告ソフトウェアのソースコードに共通してみられる特\n徴として，次の点が挙げられる。\n①クラスメンバ変数の名前がアンダースコア（＿）で始まる。変数の命名規則と\nして，クラスメンバ変数の名前の先頭にアンダースコア（＿）や，ｍ＿をつけるこ\nとがある。\n②複数の英単語から構成される変数名において，各単語の先頭が大文字になって\nいる（＿ＲｕｂｙＦｏｎｔＮａｍｅ）。この命名規則はＷｉｎｄｏｗｓでよくみられ\nるが，一般的にはアンダースコア（＿）を好む開発者もいる●●●●●●●●●●\n●●●●●●●●\n③型名にＬＯＮＧが多用されている。色を格納する●●●●●●●●●●●●●\n●●●●●●●●ではＣＯＬＯＲＲＥＦ型を用いる方がより自然であるが，双方の\nソースコードではＬＯＮＧが一貫して用いられている。また，Ｗｉｎ３２ＡＰＩで\nはＬＯＮＧよりもＤＷＯＲＤの方がよく用いられる印象があるが，字幕データの標\n準値の変数宣言においてＤＷＯＲＤは一切用いられない。\n④ＨｏｒｉｚｏｎｔａｌをＨｏｒｉｚ，ＶｅｒｔｉｃａｌをＶｅｒｔと略してい\nる。\n⑤変数宣言の順番が似ている。\n⑥メンバ変数の型を記述する部分に３個のタブ（１２個のスペース）を用いてい\nる。タブ文字を埋めて変数名の開始位置を揃えることは，多くのプログラマーが実\n践する慣習である。原告ソフトウェアで用いられている型の中で最も長いものはＢ\nｏｔｔｏｍＡｌｉｇｎ（１１文字）であるため，型名に３個のタブに相当するスペ\nースを与えることは理にかなっている。しかし，被告ソフトウェアで用いられてい\nる型の中で最も長いものはＣＳｔｒｉｎｇ（７文字）であり，型名に２個のタブに\n相当するスペースを配置すれば十分で，３個のタブに相当するスペースを与える必\n要はない。\n⑦●●●●●●●●●●●●●●●●●●●●のコメントがタブ文字を含めて完\n全に一致している。特に，「(０：無し  １：フェードイン)」や「(０：無し  １：フ\nェードアウト)」という表記そのもの，「種別」と「(０：無し」の間にタブ文字が置\nかれていることは，双方のソースコードの共通点・類似点を強く示唆している。仮\nに，原告ソフトウェアと被告ソフトウェアの開発者が同一人物で，その人物の記憶\nを手がかりとしても，原告ソフトウェアのソースコードを参照せずに，これほど細\nかい特徴を一致させるのは難しいのではないかと考える。\n①と②は開発者の慣習であるため，異なる開発者の間でもこれらの特徴が一致す\nることはあり得るが，③ないし⑦の共通点から，原告ソフトウェアと被告ソフトウ\nェアの開発者は同一人物と考えられる。表１．３で示した共通点が多いこと，⑥⑦\nの共通点を鑑みると，被告ソフトウェアは原告ソフトウェアを参照して開発された\nと考えるのが自然である。\nｂ  原告ソフトウェアと被告ソフトウェアには，以下の相違点もある。\n①  被告ソフトウェアでは，コメントの開始に//（スラッシュ２つ）が用いられ\nるが，原告ソフトウェアでは，///（スラッシュ３つ）が用いられている。\n②  被告ソフトウェアでは，●●●●●●●●●変数のコメントが「本文フォン\nトサイズ」であるが，原告ソフトウェアでは，「本文フォントサイズ（高さ）」のよ\nうに「高さ」という括弧書きがある。\n③  被告ソフトウェアでは，●●●●●●●●●変数の型をＬＯＮＧとして定義\nしているが，原告ソフトウェアでは，列挙型である●●●●●●●●である。\n④  被告ソフトウェアでは，●●●●●●●●●●●●●●●●●●●●●●●\n●●のコメントがない。\n⑤  その他，仕様の差に由来すると思われる変更点。\nｃ  外部要因の可能性（例えば，原告ソフトウェアのソースコードの一部がＳＤ\nＫのサンプルなどで公開されていたなど）はないと仮定し，類似箇所１のみで判断\nすると，原告ソフトウェアの開発者と被告ソフトウェアの開発者は必ず同一人物で\nあり，被告ソフトウェアを開発する際に原告ソフトウェアを参照した可能性が高い\nが，参照せずに開発することが全く不可能とは言い切れない。\n相違点を生み出すことよりも，共通点を生み出すことの方が珍しい現象であると\n考えられるため，共通点の一致を重く見て被告ソフトウェアの独自性が乏しいと判\n断した。\n(イ)  類似箇所２，３について\n類似箇所２，３については，原告ソフトウェア，被告ソフトウェアのいずれも，\n類似箇所１の変数やコメントをコピーし，類似箇所２と類似箇所３のコードを記述\nした可能性を否定できず，類似箇所１に基づいて発生していると考えられるため，\n類似箇所２，３に基づいて，原告ソフトウェアと被告ソフトウェアの開発者の同一\n性を判定したり，被告ソフトウェアの独自性を判定することはできない。原告ソフ\nトウェアと被告ソフトウェアの共通点や，共通に見られる特徴は類似箇所１で説明\nしたものと一貫しているが，これによって被告ソフトウェアの独自性の評価をさら\nに下げることは適当ではない。\n(ウ)  類似箇所４について\n鑑定人は，原告と被告ソフトウェアの間でｍｄｂファイルの互換性が確保された\n経緯を把握していない。また，本鑑定はソースコードの類似性・共通性を評価する\nことを目的としているので，まずは一審被告らがｍｄｂファイルに関する情報を全\nく持っていなかった場合を仮定して議論を進めると，原告ソフトウェアの開発者と\n被告ソフトウェアの開発者は必ず同一人物である。被告ソフトウェアを開発する際\nに原告ソフトウェアを参照したと考えるか，それ以外の特別な事情がない限り，こ\nの類似箇所が生み出されることはない。\n被告ソフトウェアのデータベースで用いられる５２件のフィールドの名前は，全\nて原告ソフトウェアのデータベースで用いられているものと同一である。それぞれ\n１から５単語の英単語の連結で命名された変数が，大文字・小文字や単語の並び順\nの相違なく，完全に一致するというのは，同一人物の記憶を頼りにしたとしても不\n自然である。\nフィールド名をさらに詳しく分析すると，以下のような知見が得られる。\n①フィールド名の命名規則にはハンガリアン記法，すなわち，変数の型を名前の\n先頭に付与しておき，変数名から変数へのアクセス方法に関する情報を伝えようと\nする記法が用いられている。例えば，変数名の冒頭のｂはｂｏｏｌ型，ｉはｉｎｔ\n型，ｓｔｒはＣＳｔｒｉｎｇ型，ｐｔはＣｐｏｉｎｔ（ＰＯＩＮＴ）型，ｒｃはＣ\nＲｅｃｔ（ＲＥＣＴ）型，ｃｌｒはＣＯＬＯＲＲＥＦ型を表す。これは，Ｗｉｎｄ\nｏｗｓのソフトウェア開発キット（ＳＤＫ）でよく用いられているため，Ｗｉｎｄ\nｏｗｓをターゲットとしたプログラミングでは珍しいことではない。\n②「ルビ」に対応する英単語は“ｒｕｂｙ”であるが，フィールド名では“ｒｕｂ\nｉ”という間違った綴りが用いられる。\n③変数名ではアライメント（ａｌｉｇｎｍｅｎｔ）をａｌｉｇｎｅと略すことが\n多いが，データベースのフィールド名では“e”が脱落し，Ａｌｉｇｎとされている。\n④フィールド名で用いられるＧｌｏｂという文字列は，おそらく“ｇｌｏｂａｌ”\nの略語であり，元々は本件ソースコードの中にあるＣＧｌｏｂａｌＳｅｔｔｉｎｇ\nｓクラスのことを指していたと推定される。被告ソフトウェアでは，ＣＳｏｕｒｃ\nｅＤｅｆａｕｌｔクラスに変更になったが，そのままＧｌｏｂが用いられている。\n⑤複数形を使うかどうか，過去分詞を使うかどうか，命名で判断に迷うようなフ\nィールド名も完全に一致している。フィールド名を命名した時にどの活用形を使う\nと判断したかによって，フィールド名の相違が出ても不思議ではないが，類似箇所\n４ではそれが全く見られない。\n以上は，一審被告らがｍｄｂファイルに関する情報を全く持っていなかった場合\nを仮定した議論であるが，一審被告らがｍｄｂファイルの形式を知り得たかどうか\nを考慮する必要がある。ｍｄｂファイルはマイクロソフトのＡｃｃｅｓｓで開くこ\nとができるため，原告ソフトウェアが生成するｍｄｂファイルのレコード名（テー\nブル名），フィールド名を調べることは比較的容易である。\nただし，各フィールドがどのようなセマンティクスを持つのかを正確に把握する\nのは，容易なことではない。例えば，ｉＧｌｏｂＯｒｉｅｎｔａｔｉｏｎフィール\nドが格納している整数値のセマンティクスはかなり複雑である。また，被告ソフト\nウェアが読み書きするフィールドは，原告ソフトウェアのものと比較すると少ない\nが，なぜ，一審被告らが少ないフィールドだけで互換性を持たせることができると\n考えたのか，その理由も不明である。\n類似箇所４が発生する原因として，①一審被告らが原告ソフトウェアを参照して\n被告ソフトウェアを開発した，②一審被告らが原告ソフトウェアのｍｄｂデータベ\nースの構造を解析して，フィールド名を抽出した上で，被告ソフトウェアを開発し\nた，③何らかの事情により，原告ソフトウェアのｍｄｂデータベースのフィールド\n名に関する情報が公開されていた，の３つの場合が考えられる。②，③の場合は，\n類似箇所４をもって被告ソフトウェアの独自性が低いと判断することはできない。\n２  不競法２条１項４号，５号，７号及び８号所定の不正競争行為の成否につい\nて\n前記１(3)のとおり，本件鑑定の結果によれば，鑑定対象とされた３００組のソー\nスコードのペアは，類似箇所１ないし４について，共通ないし類似すると判断され\nたことが認められる。\nそこで，かかる鑑定結果を踏まえて，一審被告らが本件ソースコードを使用した\nと評価することができるかについて，以下検討する。\n(1)  類似箇所１について\nア  類似箇所１は，字幕データの標準値を格納するクラスメンバ変数を宣言する\nものである。\n本件鑑定の結果によれば，被告ソフトウェアのソースファイルＳｏｕｒｃｅＤｅ\nｆａｕｌｔ．ｈで宣言されている変数３０個のうち，２０個の宣言が型，注釈，イ\nンデントを含めて原告ソフトウェアのソースファイルＧｌｏｂａｌＳｅｔｔｉｎｇ\nｓ．ｈのものと完全に一致し（表記方法が複数あると考えられる●●●●●●●●\n●●●●●●●●●●●●の注釈を含む。），５個では少なくとも変数の名前がＧｌ\nｏｂａｌＳｅｔｔｉｎｇｓ．ｈのものと一致しており，残りの５個では一致してい\nない。\nまた，本件ソースコードと被告ソフトウェアのソースコードに共通してみられる\n特徴として，①クラスメンバ変数の名前がアンダースコア（＿）で始まること，②\n複数の英単語から構成される変数名において，各単語の先頭が大文字になっている\nこと，③型名にＬＯＮＧが多用されていること，④ＨｏｒｉｚｏｎｔａｌをＨｏｒ\nｉｚ，ＶｅｒｔｉｃａｌをＶｅｒｔと略していること，⑤変数宣言の順番が似てい\nること，⑥メンバ変数の型を記述する部分に３個のタブ（１２個のスペース）を用\nいていること，⑦●●●●●●●●●●●●●●●●●●●●のコメントがタブ文\n字を含めて完全に一致していることが指摘されている（以下，順に，それぞれ「共\n通点①」などという。）。\nそして，鑑定人は，上記共通点③ないし⑦から，原告ソフトウェアと被告ソフト\nウェアの開発者は同一人物であると判断した上で，変数の一致箇所が多いことと，\n共通点⑥⑦を理由に，被告ソフトウェアが原告ソフトウェアを参照して開発された\nと考えるのが自然である旨述べていることが認められる。\nイ  本件ソースコードの類似箇所１に係る部分について\n(ア)  本件ソースコードの類似箇所１に係る部分は，原告ソフトウェアの字幕デ\nータの標準値を，ＧｌｏｂａｌＳｅｔｔｉｎｇｓ．ｈのＣＧｌｏｂａｌＳｅｔｔｉ\nｎｇｓクラスのパブリック・メンバ変数に格納し，字幕データの標準値を格納する\n変数を宣言するものであって，処理を行う部分ではない。\nまた，本件ソースコードのうち，被告ソフトウェアのソースコードと一致又は類\n似するとされた２５個の変数名は，●●●●●●●●●●●●●●●●●●●●●\n●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●\n●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●\n●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●\n●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●\n●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●\n●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●\n●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●\n●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●\n●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●\n●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●\n●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●\n●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●\n●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●\n●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●\n●●●●●●●●●●というものである。そして，上記括弧内の注釈に記載された\nとおり，上記の変数は，それぞれ，字幕を表示する際の基本的な設定に関する変数\nと解される。\nこれらの変数名は，字幕制作ソフトウェアで使用する一般的な内容をごく短い英\n単語で表記したものであり，その形式は，変数の命名をアンダースコアで始め（共\n通点①），各英単語の先頭を大文字にして一体化したもの（共通点②）となっている\nが，鑑定人は，共通点①②について，変数の命名規則として，クラスメンバ変数の\n名前の先頭にアンダースコア（＿）があり，各単語の先頭を大文字とする命名規則\nもＷｉｎｄｏｗｓでよくみられ，開発者の慣習であるから，異なる開発者間でも一\n致することがあり得るとの意見を述べており，変数名の付け方は，特徴的とはいえ\nないと認められる。\nさらに，上記２５個の変数についてのデータの型名のうち，両者で一致するとさ\nれた２３の変数のデータ型は，ＬＯＮＧ型，ＣＳｔｒｉｎｇ型，ＢＯＯＬ型が使用\nされているところ，これらは，マイクロソフト社が提供する標準のデータ型であっ\nて（乙５７～６０），特別なものではない。\nなお，前記１(3)イ(ア)のとおり，本件鑑定の結果によれば，類似箇所１に係る本件\nソースコードと被告ソフトウェアのソースコードは，字幕データの標準値（変数名）\nをパブリック・メンバ変数（公開変数）に格納している点で一致しているとされる。\nしかし，これらの変数は字幕データの標準値を設定するものであって，他のクラス\nの関数から参照されることが前提であるから，パブリック・メンバ変数とすること\nは通常のことであると解され，本件鑑定においても，この点は有用な一致点とはさ\nれていない。\n(イ)  共通点①ないし⑦について\n共通点①②は，異なる開発者であっても一致することがあり得るものであること\nは，前記(ア)で検討したとおりである。\n共通点③は，ＬＯＮＧ型が多用されているというもの，共通点④は単語の略し方\nの特徴，共通点⑤は，変数宣言の順番であるが，いずれもプログラムの制作者が同\n一であれば，同じになることは自然であると解される。また，共通点⑥は，変数名\nの開始位置を揃えるため，メンバ変数の型を記述する部分にタブ文字を使う際に，\n被告ソフトウェアでは２個のタブに相当するスペースを配置すれば十分で，３個の\nタブに相当するスペースを与える必然性はないにもかかわらず，３個のタブを使っ\nている点で原告ソフトウェアと共通するというものであるが，被告ソフトウェアに\nおいては，タブが２個以上であれば変数名の開始位置を揃えることができるから，\n３個のタブを使用したことが不自然とまではいえない。\nそうすると，共通点③ないし⑥は，原告ソフトウェアと被告ソフトウェアの制作\n者が同一であれば不自然な一致とはいえないことから，いずれも，一審被告らが本\n件ソースコードを使用したことを推認させるものではない。\n他方，共通点⑦は，●●●●●●●●●●●●●●●●●●●●のコメントがタ\nブ文字を含めて完全に一致しているというものであり，鑑定人は，「特に，『(０：無\nし  １：フェードイン)』や『(０：無し  １：フェードアウト)』という表記そのもの，\n『種別』と『(０：無し)』の間にタブ文字が置かれていることは，双方のソースコー\nドの共通点・類似点を強く示唆している。仮に，原告ソフトウェアと被告ソフトウ\nェアの開発者が同一人物で，その人物の記憶を手がかりとしても，原告ソフトウェ\nアのソースコードを参照せずに，これほど細かい特徴を一致させるのは難しいので\nはないかと考える。」との意見を述べている。そうすると，共通点⑦によれば，一審\n被告らが，本件ソースコードの変数定義部分を参照した可能性を否定できないとい\nうべきである。\nウ  検討\n上記イ(イ)のとおり，類似箇所１に係る本件ソースコードと被告ソフトウェアの\nソースコードとの共通点⑦によれば，一審被告らが，本件ソースコードの変数定義\n部分を参照した可能性は否定できない。\nしかし，上記イ(ア)によれば，類似箇所１に係る本件ソースコードは，変数定義部\n分であり，字幕データの標準値を格納する変数を宣言するもので，処理を行う部分\nではないこと，変数は，いずれも字幕を表示する際の基本的な設定に関する変数で\nあること，変数名は，字幕制作ソフトで使用する一般的な内容を表す，ごく短い英\n単語に基づくものであって，その形式も開発者の慣習に基づくこと，変数のデータ\nの型は，マイクロソフト社が提供する標準のデータ型であること，注釈の内容も，\n変数名が表す字幕の意味をそのまま説明したものであることが認められる。\nそして，字幕表示に必要な設定項目は，原告ソフトウェアの設定メニューから把\n握できること（乙６４），変数の定義の仕方として，変数名，型，注釈で定義するこ\nとは極めて一般的であること，変数名は字幕ソフトが使用する一般的な名称である\nこと，データの型はマイクロソフト社が提供する標準の型であること，注釈も一般\n的な説明であることによれば，類似箇所１に係る本件ソースコードの情報の内容（変\n数定義）自体は，少なくとも有用性又は非公知性を欠き，営業秘密とはいえない。\n一審被告らが，類似箇所１に係る本件ソースコードの変数定義部分を参照して，\n被告ソフトウェアのソースコードを作成したとしても，このことから他の部分を参\n照したことまで推認されるものではない上，それ自体が営業秘密とはいえない変数\n定義部分を参照したことのみをもって，本件ソースコードを使用したとも評価でき\nないというべきである。\nエ  小括\n以上によれば，一審被告らが，類似箇所１について，本件ソースコードの変数定\n義部分を参照した可能性が否定できないとしても，そのことをもって，一審被告ら\nが本件ソースコードを使用したとは評価できない。\n(2)  類似箇所２及び３について\nア  類似箇所２，３は，それぞれ，字幕データの標準値を格納するオブジェクト\nの代入演算子，比較演算子のオーバーロードを定義するものであるから，類似箇所\n１と同じ変数が使用される。これらの変数は，誤入力を避けるために類似箇所１を\nコピーして作成したと考えるのが自然であり，類似箇所２，３は，類似箇所１に基\nづいて発生したものと解される。\n鑑定人も，「類似箇所２，３については，原告ソフトウェア，被告ソフトウェアの\nいずれも，類似箇所１の変数やコメントをコピーし，類似箇所２と類似箇所３のコ\nードを記述した可能性を否定できず，類似箇所１に基づいて発生していると考えら\nれるため，類似箇所２，３に基づいて，原告ソフトウェアと被告ソフトウェアの開\n発者の同一性を判定したり，被告ソフトウェアの独自性を判定することはできない。」\nとの意見を述べている。\nイ  一審原告は，類似箇所３における比較演算子のオーバーロードは，編集中の\n字幕フォーマット情報を保存しようとする際，既存のフォーマットのリストの中に，\n保存しようとする前記フォーマット情報と同一のものがあるか否かを判断するため\nに呼び出される比較処理部分であるところ，そもそも被告ソフトウェアにはフォー\nマット情報をファイルに保存してリスト化する機能はないから，この部分は被告ソ\nフトウェアにとって不要であると主張し，Ｂ大阪大学大学院情報科学研究科准教授\n作成の意見書（甲１４３。以下「Ｂ意見書」という。）は，類似箇所３について，被\n告ソフトウェアのソースコードには必要のないコードが存在していることを，流用\nの根拠として指摘する。\nしかし，演算子のオーバーロードは，Ｃ＋＋言語のプログラムでは普通に実装さ\nれるものであり，被告ソフトウェアのＣＳｏｕｒｃｅＤｅｆａｕｌｔクラスの比較\n演算子のオーバーロードは，フォーマット情報をファイルに保存してリスト化する\n機能に特化されたものとは認められないから，被告ソフトウェアにとって不要なも\nのとはいえない。\nそして，他に，類似箇所２，３が，類似箇所１とは別個に生じた類似箇所である\nことを認めるに足りる証拠はなく，類似箇所２，３によって，一審被告らが本件ソ\nースコードを使用したことを推認することはできない。\n(3)  類似箇所４について\nア  類似箇所４は，字幕データの標準値をＡＤＯインターフェースでｍｄｂ形式\nのデータベースに格納するためのプログラムに関し，原告ソフトウェアのＳＳＴＤ\nＢ．ｃｐｐのソースコードと被告ソフトウェアのＭｄｂ．ｃｐｐのソースコードに\nおいて，５２個のフィールド名が一致したというものである。\n上記フィールド名自体はｍｄｂファイルから参照可能であるところ，一審被告ら\nは，旧ＳＳＴとの互換を得るため，ｍｄｂファイルを参照してＭｄｂ．ｃｐｐファ\nイルを実装したことを認めており，類似箇所４に係るフィールド名の一致は，その\nことによって生じたものと推認される。\nイ  一審原告は，被告ソフトウェアにおいて，Ｔｅｍｐｌａｔｅ．ｍｄｂを利用\nし，旧ＳＳＴのプロジェクトファイルと互換性のあるプロジェクトファイルをエク\nスポートできていることは，Ｔｅｍｐｌａｔｅ．ｍｄｂのセマンティクス，すなわ\nち，Ｔｅｍｐｌａｔｅ．ｍｄｂの解析アルゴリズム（解析ロジック）を利用してい\nることを意味するところ，本件鑑定において，類似箇所４から生じるセマンティク\nスの正確な把握は困難であると指摘されており，Ｔｅｍｐｌａｔｅ．ｍｄｂのセマ\nンティクスの利用は，本件ソースコードを使用していることにほかならない旨主張\nする。\n(ア)  セマンティクスの意味\nセマンティクスとは，データの形式や構造ないし枠であるシンタックスに対応す\nる概念であり，データの意味，内容のことであるとされる（甲９５）。\nＴｅｍｐｌａｔｅ．ｍｄｂは，旧ＳＳＴにおいて生成された字幕データを書き出\nすためのｍｄｂ形式のファイルを作成するためのひな型であり，ひな型を構成する\nフィールド名，データ型がシンタックスであるのに対し，各フィールドが表す意味，\n各フィールドのデータ型に従った個々のデータ値の表す意味がセマンティクスであ\nると解される。例えば，Ｇｌｏｂａｌｓテーブル１行目の「ｓｔｒＧｌｏｂＦｏｎ\nｔＮａｍｅ」（甲４８，５０）では，フィールド名「ｓｔｒＧｌｏｂＦｏｎｔＮａｍ\nｅ」，データ型「テキスト型」がシンタックスであり，フィールドの意味が，字幕本\n文フォント名を表し，「ＭＳゴシック」というように文字列（テキスト）で記述する\nということが，セマンティクスに当たる。\nこの点，一審原告は，セマンティクスとは，解析アルゴリズムであると主張する。\nしかし，Ｔｅｍｐｌａｔｅ．ｍｄｂは，ｍｄｂ形式のファイルを作成するためのひ\nな型であり，プログラムではないから，そのセマンティクスに解析アルゴリズムが\n含まれるとは解されず，一審原告の主張は採用できない。\n(イ)  セマンティクスの把握方法\nａ  類似箇所４に係るフィールド名は，Ｔｅｍｐｌａｔｅ．ｍｄｂに具体的な字\n幕データ等を上書きしたファイルであるｍｄｂファイルをマイクロソフトＡｃｃｅ\nｓｓで開けば見ることができるところ，フィールド名には，「Ｆｏｎｔ」，「Ｅｄｇｅ」\nなど，字幕制作に携わる者であれば容易に分かる名称が用いられていることから，\nそれ自体から，フィールドの意味を理解することができるものと認められる。例え\nば，フィールド名「ｓｔｒＧｌｏｂＦｏｎｔＮａｍｅ」であれば，「ＦｏｎｔＮａｍ\nｅ」の意味は本文フォント名を表すことを理解することができ，「ｓｔｒ」の記載か\nら，データ型がハンガリアン記法（変数の型を名前の先頭に付与しておき，変数名\nから変数へのアクセス方法に関する情報を伝えようとする記法）により，「ＣＳｔｒ\nｉｎｇ」，すなわち，文字列型であることを推測することができる。さらに，ｍｄｂ\nファイルのプロパティを見れば，データ型も見ることができるから（甲５０），デー\nタ型がテキスト型（文字列型）であることを確認することができ，本文フォント名\nを表し，テキスト型（文字列型）で記載されるフィールドであるというセマンティ\nクスを把握できる。\nフィールド名からすぐにはその内容がわからないものについても，ｍｄｂファイ\nルを参照し，記録されている具体的な字幕データの数値を変えて字幕の変化を見た\nり，目標とする字幕を見つけて該当項目の数値を確認し，字幕の設定を変えて数値\nの変化を確認したりすることにより，データの属性を把握することができると解さ\nれる。例えば，ｍｄｂファイルで保存した字幕ファイルには，ｓｔｒＧｌｏｂＦｏ\nｎｔＮａｍｅのデータとして，「ＭＳゴシック」のように字体の名称が記載されてい\nるところ（甲８９），これを手掛かりとして，本文フォントの字体の設定を変えたと\nきに，ｍｄｂファイルのｓｔｒＧｌｏｂＦｏｎｔＮａｍｅのデータがどのように変\n化するかを試すことにより，どのような名称の字体が記述されるセマンティクスな\nのかを把握することは可能であると認められる。\nまた，「ｓｔｒＦｏｒｍａｔ」は，標準設定と異なる個別設定をする際のフォーマ\nット情報が格納されたフィールドであり，文字修飾の個別設定を指定すると，ｍｄ\nｂファイルのｓｔｒＦｏｒｍａｔ欄にその個別設定に対応する数字や文字列が格納\nされる（乙２４，２８）。そうすると，字幕データの入力内容を変化させ，その変化\nに対して格納される数字や文字列がどのように変化するかを確認することで，ｓｔ\nｒＦｏｒｍａｔの値がいかなる文字修飾を意味するものであるかを把握できるもの\nと認められ，セマンティクスを把握することができるというべきである。\n以上によれば，一審被告らが，Ｔｅｍｐｌａｔｅ．ｍｄｂのセマンティクスを利\n用しているとしても，かかるセマンティクスは，本件ソースコードを使用しなくて\nも把握可能であるものと認められる。\nｂ  鑑定人は，「各フィールドがどのようなセマンティクスを持つのかを正確に\n把握するのは，容易なことではない。例えば，ｉＧｌｏｂＯｒｉｅｎｔａｔｉｏｎ\nフィールドが格納している整数値のセマンティクスはかなり複雑である。」との意\n見を述べている。\nしかし，ＳＳＴＧ１操作マニュアルによれば，原告ソフトウェアにおいては，「表\n示位置・行配置」欄において，６箇所の表示位置と５箇所の行配置を指定すること\nができるとされるところ（乙２５），ｍｄｂファイルを参照すれば，ｉＧｌｏｂＯｒ\nｉｅｎｔａｔｉｏｎのデータ値と「表示位置・行配置」とは，「４」と「横下中央」，\n「１」と「横下中頭」，「８」と「横下中末」，「１６」と「横下行頭」というように\n１対１の対応で把握することができることが認められる（乙２９）。そうすると，本\n件ソースコードを参照しなくても，ｉＧｌｏｂＯｒｉｅｎｔａｔｉｏｎフィールド\nのセマンティクスを把握することができるものと認められる。\nもっとも，ｉＧｌｏｂＯｒｉｅｎｔａｔｉｏｎは，１６進表記で表されており（甲\n１０１），その各桁の数値と，字幕の表示位置・行配置とがそれぞれ対応していると\n思われるところ，かかる各桁の数値からその意味を把握することは困難であり，鑑\n定人の上記意見は，この点を指して正確なセマンティクスを把握するのは容易では\nないとするものと推察される。しかし，データ値と「表示位置・行配置」の１対１\nの対応関係を把握できれば互換を得ることができるのであれば，それ以上に，ｉＧ\nｌｏｂＯｒｉｅｎｔａｔｉｏｎのセマンティクスを正確に把握する必要はないと解\nされるから，互換を得るために必要なｉＧｌｏｂＯｒｉｅｎｔａｔｉｏｎのセマン\nティクスは，ｍｄｂファイルから把握可能であり，本件ソースコードを参照しない\n限り把握できないものとはいえない。\n(ウ)  以上によれば，一審被告らが，旧ＳＳＴとの互換を得るため，ｍｄｂファイ\nルを参照してＭｄｂ．ｃｐｐファイルを実装していることは，本件ソースコードを\n使用していることを意味するものではない。\nウ  一審原告は，本件鑑定書は，ＳＳＴＤＢ．ｃｐｐファイルとＭｄｂ．ｃｐｐ\nファイルは，ファイル自体が類似・共通すると指摘しており，フィールド名の一致\nは，両ファイルが一致していると判断する理由の一つにすぎない上，ＳＳＴＤＢ．\nｃｐｐファイルの行数は優に３０００行を超えるのであるから，類似箇所は５２の\nフィールド名の一致にとどまるものではないと主張し，Ｂ意見書は，５２のフィー\nルド名が一致しており，ファイルが巨大であることから，処理も一致している可能\n性が高いとの意見を述べる。\nしかし，本件鑑定において，鑑定人は，原告ソフトウェアのＳＳＴＤＢ．ｃｐｐ\nと被告ソフトウェアのＭｄｂ．ｃｐｐとの目視確認を行った上で，類似箇所は５２\n個のフィールド名にあると鑑定したのであり，処理も含めて両ファイルが類似・共\n通すると鑑定していないことは明らかである。\nまた，Ｂ意見書は，被告ソフトウェアのソースコードを視認せずに，類似した処\n理を含んでいる可能性が高いと述べているにすぎない上，ファイルの行数が多いこ\nとが処理の一致を意味すると解すべき根拠はないから，採用することはできない。\nそして，被告ソフトウェアにおいて，本件ソースコードを参照して原告ソフトウ\nェアの解析アルゴリズムを把握し，同じ処理を行っていることを認めるに足りる証\n拠はない。かえって，エクスポートされるｍｄｂファイルの字幕の配置に関するｉ\nＧｌｏｂＯｒｉｅｎｔａｔｉｏｎフィールドとｉＯｒｉｅｎｔａｔｉｏｎフィール\nドのデータ値は，エクスポート前においては，原告ソフトウェア及び被告ソフトウ\nェアのいずれも変数名を●●●●●●●●●●●●とする変数に格納されているが，\n原告ソフトウェアにおいては，データ型をＬＯＮＧ型とし（甲９９，原判決別紙ａ），\n表示位置・行配置の設定について，水平位置，垂直位置，行揃え，縦書き横書きの\n４種の情報を１６進表記の特定の桁に割り当て，特定の桁をマスクビットを用いて\nビット演算により抽出している（甲１００～１０２）のに対し，被告ソフトウェア\nにおいては，データ型を列挙型としており（原判決別紙ａ），表示位置・行配置の設\n定について，水平位置，垂直位置，行揃え，縦書き横書きの４種の情報を１６進表\n記の特定の桁に割り当て，特定の桁をマスクビットを用いてビット演算により抽出\nするものではないと解され，表示位置・行配置の設定処理のアルゴリズムは同一で\nはないことが認められるのであって，本件ソースコードを参照したものではないこ\nとが推認されるというべきである。\nエ  小括\n以上によれば，類似箇所４は，一審被告らによる本件ソースコードの使用を意味\nするものではないのであって，一審原告の主張は採用できない。\n(4)  一審被告らによる本件ソースコードの使用の有無\nア  以上の検討によれば，類似箇所１については，一審被告らが本件ソースコー\nドの変数定義部分を参照したことにより生じた可能性を否定できないものの，当該\n変数定義部分は営業秘密とはいえない以上，これのみをもって，本件ソースコード\nを使用したとは評価できない。\nまた，類似箇所２，３は，類似箇所１とは別個に生じた類似箇所ではない。\n類似箇所４は，本件ソースコードを参照したことにより生じた一致とはいえない\n上，旧ＳＳＴとの互換を得るために本件ソースコードを参照したとも認められない。\nそして，本件鑑定の結果によれば，３００組のソースコードのペア中，類似箇所\n１ないし５に該当する１１８行の他には本件ソースコードと被告ソフトウェアのソ\nースコードとが一致ないし類似する部分があったとは認められず，鑑定の対象とな\nったソースコード２万９６７９行（コメント，空行を除いた有効行）のうち２万９\n５６１行は非類似であって，非類似部分が９９％以上となる。\n以上によれば，一審被告らが，類似箇所１に係る部分以外に本件ソースコードを\n参照したとは認められず，また，類似箇所１に係る変数定義部分を参照した可能性\nが否定できないことをもって，本件ソースコードを使用したとは評価できない。そ\nうすると，本件ソースコードについて，不競法２条１項７号にいう「使用」があっ\nたとはいえないというべきである。\nイ  一審原告の主張について\n(ア)  一審原告は，本件鑑定は最低限度の共通性の言及にとどまり，類似箇所や共\n通箇所を網羅的に指摘したものではないから，本件鑑定の結果によって，類似箇所\n１ないし４以外は類似しないとは認定できない旨主張し，Ｂ意見書も，本件鑑定手\n法は不十分であり，他に類似箇所がないとはいえない旨の意見を述べる。\nしかし，鑑定人は，「表１．２に示した（判決注：類似箇所１ないし５）以外の場\n所では，類似・共通すると認定できる箇所は見つからなかった」と明記しており，\n本件鑑定の結果によっては，他に類似・共通する箇所があるとはいえないことは明\nらかである。そして，前記(3)ウのとおり，Ｂ意見書は，被告ソフトウェアのソース\nコードを参照しておらず，具体的な一致箇所を指摘するものではないから，採用の\n限りではなく，他に本件鑑定の結果を左右するに足りる証拠はない。よって，一審\n原告の主張は理由がない。\n(イ)  一審原告は，類似箇所１ないし４の他にも，一審被告らによる本件ソースコ\nードの使用を推認させる事実が多数存在するとも主張する。\nしかし，以下のとおり，一審原告の主張は，いずれも理由がない。\nａ  一審原告は，被告ソフトウェアに原告ソフトウェアで使用されているｓｄｂ\n形式の字幕データベースが実装されていたことは，一審被告らが本件ソースコード\nを不当に入手，利用していることを推認させる旨主張する。\nしかし，被告ソフトウェアのプログラムファイルに，ｓｄｂとの記載があること\nは認められるものの（甲５１の１～５），ｓｄｂ形式の字幕データベースが実装され\nていたことを認めるに足りる証拠はないから，一審原告の主張は，その前提を欠く\nものである。\nｂ  一審原告は，被告ソフトウェアと原告ソフトウェアには，①字幕の全体設定\n（デフォルト）を縦書きに設定して作成されたｍｄｂファイルをインポートした場\n合に，原告ソフトウェアも被告ソフトウェアも横書きでインポートされてしまう，\n②一審被告フェイスは平成２２年に設立されていて，それ以降に開発された被告ソ\nフトウェアからエクスポートしたＥｘｃｅｌファイルの拡張子は「．ｘｌｓｘ」と\nなるはずであるところ，被告ソフトウェアのエクスポート先の拡張子は「．ｘｌｓ」\nである，③Ｅｘｃｅｌの言語設定を英語にした状態で，Ｅｘｃｅｌファイルをエク\nスポートすると，原告ソフトウェアも被告ソフトウェアもハングアップする，④エ\nクスポート先をＣ：￥に設定してＥｘｃｅｌファイルをエクスポートすると，原告\nソフトウェアと被告ソフトウェアもハングアップする，⑤横書きで，例えば「ワシ\nントンＤ．Ｃ．」と入力した字幕を縦書きに変換すると，原告ソフトウェアも被告ソ\nフトウェアも「Ｄ．Ｃ．」のピリオドの位置がおかしくなってしまうとの共通したバ\nグが存在することも，一審被告らによる本件ソースコードの使用を推認させると主\n張する。\nしかし，本件鑑定の結果によれば，①の事象は，被告ソフトウェアでは発生する\nものの，原告ソフトウェアでは発生していないとされ，そもそも事象の共通性が認\nめられない，②については，原告ソフトウェアは拡張子の情報がリソースの文字列\n定数として格納されているのに対し，被告ソフトウェアではＣ＃のソースコード中\nで直接記述されているという差異がある，③については，原告ソフトウェアと被告\nソフトウェアはＥｘｃｅｌのＡＰＩを読み出すために異なるアプローチを採用し，\n不具合が発生する直接の原因は原告ソフトウェアと被告ソフトウェアでは異なる，\n④については，原告ソフトウェアと被告ソフトウェアとでは不具合が発生する原因\nが異なる，⑤については，表示位置を左上から右上に修正させる処理が，原告ソフ\nトウェアと被告ソフトウェアとでは，大きく異なっているとの意見が述べられてい\nる。かかる本件鑑定の結果によれば，これらのバグが共通することは，一審被告ら\nが，本件ソースコードを使用したことを裏付ける事実とは認められない。\nｃ  一審原告は，本件ソースコードと被告ソフトウェアのソースコードでは，ス\nペルミスが一致するところ，かかる一致は，一審被告らが本件ソースコードを複製\nしたものでなければ到底発生し得ないものである旨主張する。\nしかし，本件鑑定の結果によれば，原告ソフトウェアと被告ソフトウェアとで共\n通するスペルミスは圧倒的に少ないから，共通するスペルミスの存在は一審被告ら\nが原告ソフトウェアを複製したことの根拠とならないとされる。また，原告ソフト\nウェアと被告ソフトウェアとで共通して，ｒｕｂｙの複数形をｒｕｂｉｅｓとすべ\nきところがｒｕｂｙｓとなっていたり，ルビの綴りは正しくはｒｕｂｙであるにも\nかかわらず，ｒｕｂｉという綴りが混在しているほか，ａｌｉｇｎｍｅｎｔをａｌ\nｉｇｎ，ｈｏｒｉｚｏｎｔａｌをｈｏｒｚ又ｈｏｒｉｚと略す傾向があるところ，\nこれらは，原告ソフトウェアを参照しなくても，同一開発者の一貫した記憶間違い\nや発想によっても生じ得るとされる。そうすると，共通するスペルミスも，一審被\n告らによる本件ソースコードの使用を推認させる事実とは認められない。\nｄ  一審原告は，被告ソフトウェアでは，Ｃ＋＋／ＣＬＩ言語による無用なコー\nディングが行われており，Ｃ＋＋言語の本件ソースコードを流用したことを推認さ\nせる旨主張する。\nしかし，本件鑑定の結果によれば，鑑定人は，Ｃ＋＋言語とＣ＃言語を使い分け\nるというのは，「Ｖｉｓｕａｌ  Ｓｔｕｄｉｏ」を用いた開発においては合理的な選\n択と考えられ，Ｃ＋＋／ＣＬＩ言語は，Ｃ＋＋言語とＣ＃言語の間を橋渡しするた\nめに用いられていると考えられるとの意見を述べている。そうすると，被告ソフト\nウェアにおけるＣ＋＋／ＣＬＩ言語でのコーディングの存在も，一審被告らが，一\n審原告から持ち出したＣ＋＋言語のソースコードを流用したことを裏付ける事実と\nは認められない。\nｅ  一審原告は，被告ソフトウェアの開発が開始した平成２４年頃には，「Ｖｉｓ\nｕａｌ  Ｓｔｕｄｉｏ２００８」，「Ｖｉｓｕａｌ  Ｓｔｕｄｉｏ２０１０」という\n２つの新しい開発環境がリリースされ，広く一般的に利用されていたにもかかわら\nず，被告ソフトウェアの当初の開発環境が，原告ソフトウェアの開発環境と同じ「Ｖ\nｉｓｕａｌ  Ｓｔｕｄｉｏ２００５」であることは，被告ソフトウェアにおいて，\n「Ｖｉｓｕａｌ  Ｓｔｕｄｉｏ２００５」で開発された本件ソースコードを流用し\nたことを推認させると主張する。\nしかし，本件鑑定の結果によれば，「Ｖｉｓｕａｌ  Ｓｔｕｄｉｏ２００５」は，\nＷｉｎｄｏｗｓ７までしか対応しておらず，被告ソフトウェアの開発環境もＷｉｎ\nｄｏｗｓ７であるから，被告ソフトウェアを開始した時期に，「Ｖｉｓｕａｌ  Ｓｔ\nｕｄｉｏ２００５」を開発環境として採用することに，特段の矛盾は見つからない\nとされる。そうすると，被告ソフトウェアの開発環境が「Ｖｉｓｕａｌ  Ｓｔｕｄ\nｉｏ２００５」であることも，一審被告らが本件ソースコードを流用して被告ソフ\nトウェアのソースコードを作成したことを推認させる事実とは認められない。\nｆ  その他，一審原告は，るる主張するが，いずれも採用できない。\n(5)  まとめ\n以上によれば，一審被告Ｙの行為は，不競法２条１項７号の営業秘密の使用に該\n当せず，一審被告フェイスについても，同項８号の不正競争行為は認められない。\nまた，同項４号，５号の不正競争行為についても認定することはできない。\nその余の争点については判断するまでもないが，原判決が，将来バージョンアッ\nプされた後の被告ソフトウェアについて，本件ソースコードを使用するものか否か\n審理することなく，その使用等の差止めを認めたことは，その範囲が過大であって，\n相当でないことを付言する。\n３  結語\nよって，一審原告の一審被告らに対する請求は，いずれも理由がないから棄却す\nべきところ，これと異なる原判決は一部失当である。一審被告らの控訴はいずれも\n理由があるから，原判決中一審被告ら敗訴部分を取り消して，一審原告の請求をい\nずれも棄却し，一審原告の控訴は理由がないからこれを棄却することとして，主文\nのとおり判決する。\n知的財産高等裁判所第１部\n裁判長裁判官      高      部    眞  規  子\n裁判官      小    林    康    彦\n裁判官      関    根    澄    子\n"
}